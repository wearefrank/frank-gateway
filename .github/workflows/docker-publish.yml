name: GHCR release

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "master" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # release:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     version-next: ${{ steps.next-version.outputs.release-version }}
  #     version-next-tag: ${{ steps.next-version.outputs.release-tag }}
  #     version-next-type: ${{ steps.next-version.outputs.release-type }}
  #   steps:
  #     - uses: step-security/harden-runner@0d381219ddf674d61a7572ddd19d7941e271515c # v2.9.0
  #       with:
  #         egress-policy: audit

  #     - name: Checkout
  #       uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 #4.1.7
  #       with:
  #         token: ${{ secrets.WEAREFRANK_BOT_PAT }}

  #     - name: Download Pre-build Artifacts
  #       uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 #4.1.8
  #       with:
  #         pattern: pre-build-*
  #         merge-multiple: true

  #     - name: Download Build Artifacts
  #       uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 #4.1.8
  #       with:
  #         pattern: build-*
  #         merge-multiple: true

  #     - name: Setup Node
  #       uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b #4.0.3
  #       with:
  #         node-version: 20

  #     - name: Install dependencies
  #       run: yarn global add semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/github @semantic-release/exec @semantic-release/release-notes-generator @semantic-release/commit-analyzer conventional-changelog-conventionalcommits

  #     - name: Semantic Release
  #       id: next-version
  #       run: semantic-release
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.WEAREFRANK_BOT_PAT }}
  #         GH_TOKEN: ${{ secrets.WEAREFRANK_BOT_PAT }}
          
  build-and-push-image:
    runs-on: ubuntu-latest
  #  needs: release
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./Dockerfile
            image: ghcr.io/wearefrank/frank-gateway
            
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 #5.5.1
        with:
          images: ${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=raw,value=${{ github.run_number }}
          #   type=semver,pattern={{version}},value=${{ needs.release.outputs.version-next }}
          #   type=semver,pattern={{major}}.{{minor}},value=${{ needs.release.outputs.version-next }}
          #   type=semver,pattern={{major}},value=${{ needs.release.outputs.version-next }}
          #   type=ref,event=pr
          #   type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/') }}
          # flavor: |
          #   latest=false

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker images
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          file: ${{ matrix.dockerfile }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
