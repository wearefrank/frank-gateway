{
  "stream_plugins": {
    "mqtt-proxy": {
      "priority": 1000,
      "version": 0.1,
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "_meta": {
            "properties": {
              "error_response": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "object"
                  }
                ]
              },
              "priority": {
                "type": "integer",
                "description": "priority of plugins by customized order"
              },
              "filter": {
                "type": "array",
                "description": "filter determines whether the plugin needs to be executed at runtime"
              },
              "disable": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "protocol_name": {
            "type": "string"
          },
          "protocol_level": {
            "type": "integer"
          }
        },
        "required": [
          "protocol_name",
          "protocol_level"
        ],
        "type": "object"
      }
    },
    "limit-conn": {
      "priority": 1003,
      "version": 0.1,
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "conn": {
            "exclusiveMinimum": 0,
            "type": "integer"
          },
          "_meta": {
            "properties": {
              "error_response": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "object"
                  }
                ]
              },
              "priority": {
                "type": "integer",
                "description": "priority of plugins by customized order"
              },
              "filter": {
                "type": "array",
                "description": "filter determines whether the plugin needs to be executed at runtime"
              },
              "disable": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "burst": {
            "minimum": 0,
            "type": "integer"
          },
          "default_conn_delay": {
            "exclusiveMinimum": 0,
            "type": "number"
          },
          "only_use_default_delay": {
            "default": false,
            "type": "boolean"
          },
          "key_type": {
            "default": "var",
            "enum": [
              "var",
              "var_combination"
            ],
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        },
        "required": [
          "conn",
          "burst",
          "default_conn_delay",
          "key"
        ],
        "type": "object"
      }
    },
    "ip-restriction": {
      "priority": 3000,
      "version": 0.1,
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "whitelist": {
            "minItems": 1,
            "items": {
              "anyOf": [
                {
                  "title": "IPv4",
                  "format": "ipv4",
                  "type": "string"
                },
                {
                  "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
                  "title": "IPv4/CIDR",
                  "type": "string"
                },
                {
                  "title": "IPv6",
                  "format": "ipv6",
                  "type": "string"
                },
                {
                  "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
                  "title": "IPv6/CIDR",
                  "type": "string"
                }
              ]
            },
            "type": "array"
          },
          "blacklist": {
            "minItems": 1,
            "items": {
              "anyOf": [
                {
                  "title": "IPv4",
                  "format": "ipv4",
                  "type": "string"
                },
                {
                  "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
                  "title": "IPv4/CIDR",
                  "type": "string"
                },
                {
                  "title": "IPv6",
                  "format": "ipv6",
                  "type": "string"
                },
                {
                  "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
                  "title": "IPv6/CIDR",
                  "type": "string"
                }
              ]
            },
            "type": "array"
          },
          "message": {
            "minLength": 1,
            "maxLength": 1024,
            "default": "Your IP address is not allowed",
            "type": "string"
          },
          "_meta": {
            "properties": {
              "error_response": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "object"
                  }
                ]
              },
              "priority": {
                "type": "integer",
                "description": "priority of plugins by customized order"
              },
              "filter": {
                "type": "array",
                "description": "filter determines whether the plugin needs to be executed at runtime"
              },
              "disable": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        },
        "oneOf": [
          {
            "required": [
              "whitelist"
            ]
          },
          {
            "required": [
              "blacklist"
            ]
          }
        ],
        "type": "object"
      }
    },
    "syslog": {
      "metadata_schema": {
        "properties": {
          "log_format": {
            "default": {
              "@timestamp": "$time_iso8601",
              "host": "$host",
              "client_ip": "$remote_addr"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "priority": 401,
      "version": 0.1,
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "drop_limit": {
            "default": 1048576,
            "type": "integer"
          },
          "sock_type": {
            "default": "tcp",
            "enum": [
              "tcp",
              "udp"
            ],
            "type": "string"
          },
          "port": {
            "type": "integer"
          },
          "name": {
            "default": "stream sys logger",
            "type": "string"
          },
          "_meta": {
            "properties": {
              "error_response": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "object"
                  }
                ]
              },
              "priority": {
                "type": "integer",
                "description": "priority of plugins by customized order"
              },
              "filter": {
                "type": "array",
                "description": "filter determines whether the plugin needs to be executed at runtime"
              },
              "disable": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "batch_max_size": {
            "default": 1000,
            "minimum": 1,
            "type": "integer"
          },
          "host": {
            "type": "string"
          },
          "buffer_duration": {
            "default": 60,
            "minimum": 1,
            "type": "integer"
          },
          "inactive_timeout": {
            "default": 5,
            "minimum": 1,
            "type": "integer"
          },
          "timeout": {
            "default": 3000,
            "type": "integer",
            "minimum": 1
          },
          "tls": {
            "default": false,
            "type": "boolean"
          },
          "pool_size": {
            "default": 5,
            "type": "integer",
            "minimum": 5
          },
          "max_retry_count": {
            "default": 0,
            "minimum": 0,
            "type": "integer"
          },
          "retry_delay": {
            "default": 1,
            "minimum": 0,
            "type": "integer"
          },
          "log_format": {
            "type": "object"
          },
          "flush_limit": {
            "default": 4096,
            "type": "integer",
            "minimum": 1
          }
        },
        "required": [
          "host",
          "port"
        ],
        "type": "object"
      }
    }
  },
  "plugins": {
    "fsc": {
      "metadata_schema": {},
      "priority": 1,
      "version": 0.1,
      "schema": {
        "properties": {
          "manager_public_key": {
            "type": "string"
          },
          "internal_key": {
            "type": "string"
          },
          "registration": {
            "properties": {
              "inway_name": {
                "type": "string"
              },
              "controller_uri": {
                "type": "string"
              },
              "inway_address": {
                "type": "string"
              }
            },
            "required": [
              "controller_uri",
              "inway_address",
              "inway_name"
            ],
            "type": "object"
          },
          "internal_cert_chain": {
            "type": "string"
          },
          "fsc_group_id": {
            "type": "string"
          },
          "_meta": {
            "properties": {
              "error_response": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "object"
                  }
                ]
              },
              "priority": {
                "type": "integer",
                "description": "priority of plugins by customized order"
              },
              "filter": {
                "type": "array",
                "description": "filter determines whether the plugin needs to be executed at runtime"
              },
              "disable": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "tx_log_url": {
            "type": "string"
          }
        },
        "required": [
          "manager_public_key",
          "fsc_group_id",
          "internal_cert_chain",
          "internal_key",
          "registration"
        ],
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    },
    "openid-connect": {
      "priority": 2599,
      "version": 0.2,
      "schema": {
        "properties": {
          "use_pkce": {
            "default": false,
            "description": "when set to true the PKEC(Proof Key for Code Exchange) will be used.",
            "type": "boolean"
          },
          "introspection_endpoint": {
            "type": "string"
          },
          "set_refresh_token_header": {
            "default": false,
            "description": "Whether the refresh token should be added in the X-Refresh-Token header to the request for downstream.",
            "type": "boolean"
          },
          "discovery": {
            "type": "string"
          },
          "_meta": {
            "properties": {
              "error_response": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "object"
                  }
                ]
              },
              "priority": {
                "type": "integer",
                "description": "priority of plugins by customized order"
              },
              "filter": {
                "type": "array",
                "description": "filter determines whether the plugin needs to be executed at runtime"
              },
              "disable": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "session": {
            "additionalProperties": false,
            "properties": {
              "secret": {
                "minLength": 16,
                "description": "the key used for the encrypt and HMAC calculation",
                "type": "string"
              }
            },
            "required": [
              "secret"
            ],
            "type": "object"
          },
          "authorization_params": {
            "type": "object",
            "description": "Extra authorization params to the authorize endpoint"
          },
          "redirect_uri": {
            "description": "use ngx.var.request_uri if not configured",
            "type": "string"
          },
          "ssl_verify": {
            "default": false,
            "type": "boolean"
          },
          "set_userinfo_header": {
            "default": true,
            "description": "Whether the user info token should be added in the X-Userinfo header to the request for downstream.",
            "type": "boolean"
          },
          "set_id_token_header": {
            "default": true,
            "description": "Whether the ID token should be added in the X-ID-Token header to the request for downstream.",
            "type": "boolean"
          },
          "bearer_only": {
            "default": false,
            "type": "boolean"
          },
          "access_token_in_authorization_header": {
            "default": false,
            "description": "Whether the access token should be added in the Authorization header as opposed to the X-Access-Token header.",
            "type": "boolean"
          },
          "realm": {
            "default": "apisix",
            "type": "string"
          },
          "unauth_action": {
            "default": "auth",
            "enum": [
              "auth",
              "deny",
              "pass"
            ],
            "description": "The action performed when client is not authorized. Use auth to redirect user to identity provider, deny to respond with 401 Unauthorized, and pass to allow the request regardless.",
            "type": "string"
          },
          "set_access_token_header": {
            "default": true,
            "description": "Whether the access token should be added as a header to the request for downstream",
            "type": "boolean"
          },
          "token_signing_alg_values_expected": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "public_key": {
            "type": "string"
          },
          "post_logout_redirect_uri": {
            "description": "the URI will be redirect when request logout_path",
            "type": "string"
          },
          "timeout": {
            "default": 3,
            "description": "timeout in seconds",
            "type": "integer",
            "minimum": 1
          },
          "introspection_endpoint_auth_method": {
            "default": "client_secret_basic",
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "logout_path": {
            "default": "/logout",
            "type": "string"
          },
          "proxy_opts": {
            "description": "HTTP proxy server be used to access identity server.",
            "properties": {
              "http_proxy_authorization": {
                "description": "Basic [base64 username:password].",
                "type": "string"
              },
              "http_proxy": {
                "description": "HTTP proxy like: http://proxy-server:80.",
                "type": "string"
              },
              "https_proxy": {
                "description": "HTTPS proxy like: http://proxy-server:80.",
                "type": "string"
              },
              "no_proxy": {
                "description": "Comma separated list of hosts that should not be proxied.",
                "type": "string"
              },
              "https_proxy_authorization": {
                "description": "Basic [base64 username:password].",
                "type": "string"
              }
            },
            "type": "object"
          },
          "scope": {
            "default": "openid",
            "type": "string"
          },
          "token_endpoint_auth_method": {
            "default": "client_secret_basic",
            "type": "string"
          }
        },
        "required": [
          "client_id",
          "client_secret",
          "discovery"
        ],
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object",
        "encrypt_fields": [
          "client_secret"
        ]
      }
    },
    "soap-action-router": {
      "metadata_schema": {},
      "priority": 1,
      "version": 0.1,
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "_meta": {
            "properties": {
              "error_response": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "object"
                  }
                ]
              },
              "priority": {
                "type": "integer",
                "description": "priority of plugins by customized order"
              },
              "filter": {
                "type": "array",
                "description": "filter determines whether the plugin needs to be executed at runtime"
              },
              "disable": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        }
      }
    },
    "file-logger": {
      "metadata_schema": {
        "properties": {
          "log_format": {
            "default": {
              "@timestamp": "$time_iso8601",
              "host": "$host",
              "client_ip": "$remote_addr"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "priority": 399,
      "version": 0.1,
      "schema": {
        "properties": {
          "include_resp_body": {
            "default": false,
            "type": "boolean"
          },
          "_meta": {
            "properties": {
              "error_response": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "object"
                  }
                ]
              },
              "priority": {
                "type": "integer",
                "description": "priority of plugins by customized order"
              },
              "filter": {
                "type": "array",
                "description": "filter determines whether the plugin needs to be executed at runtime"
              },
              "disable": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "match": {
            "maxItems": 20,
            "items": {
              "type": "array"
            },
            "type": "array"
          },
          "path": {
            "type": "string"
          },
          "log_format": {
            "type": "object"
          },
          "include_resp_body_expr": {
            "minItems": 1,
            "items": {
              "type": "array"
            },
            "type": "array"
          }
        },
        "required": [
          "path"
        ],
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    }
  },
  "main": {
    "upstream_hash_header_schema": {
      "pattern": "^[a-zA-Z0-9-_]+$",
      "type": "string"
    },
    "ssl": {
      "properties": {
        "ssl_protocols": {
          "maxItems": 3,
          "description": "set ssl protocols",
          "uniqueItems": true,
          "items": {
            "enum": [
              "TLSv1.1",
              "TLSv1.2",
              "TLSv1.3"
            ]
          },
          "type": "array"
        },
        "certs": {
          "items": {
            "minLength": 128,
            "maxLength": 65536,
            "type": "string"
          },
          "type": "array"
        },
        "sni": {
          "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
          "type": "string"
        },
        "cert": {
          "oneOf": [
            {
              "minLength": 128,
              "maxLength": 65536,
              "type": "string"
            },
            {
              "pattern": "^\\$(secret|env)://",
              "type": "string"
            }
          ]
        },
        "create_time": {
          "type": "integer"
        },
        "key": {
          "oneOf": [
            {
              "minLength": 128,
              "maxLength": 65536,
              "type": "string"
            },
            {
              "pattern": "^\\$(secret|env)://",
              "type": "string"
            }
          ]
        },
        "snis": {
          "minItems": 1,
          "items": {
            "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
            "type": "string"
          },
          "type": "array"
        },
        "id": {
          "anyOf": [
            {
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string"
            },
            {
              "minimum": 1,
              "type": "integer"
            }
          ]
        },
        "client": {
          "properties": {
            "depth": {
              "default": 1,
              "type": "integer",
              "minimum": 0
            },
            "skip_mtls_uri_regex": {
              "minItems": 1,
              "uniqueItems": true,
              "items": {
                "type": "string",
                "description": "uri regular expression to skip mtls"
              },
              "type": "array"
            },
            "ca": {
              "minLength": 128,
              "maxLength": 65536,
              "type": "string"
            }
          },
          "required": [
            "ca"
          ],
          "type": "object"
        },
        "labels": {
          "description": "key/value pairs to specify attributes",
          "patternProperties": {
            ".*": {
              "description": "value of label",
              "minLength": 1,
              "maxLength": 256,
              "pattern": "^\\S+$",
              "type": "string"
            }
          },
          "type": "object"
        },
        "status": {
          "default": 1,
          "description": "ssl status, 1 to enable, 0 to disable",
          "enum": [
            1,
            0
          ],
          "type": "integer"
        },
        "keys": {
          "items": {
            "minLength": 128,
            "maxLength": 65536,
            "type": "string"
          },
          "type": "array"
        },
        "update_time": {
          "type": "integer"
        },
        "type": {
          "default": "server",
          "description": "ssl certificate type, server to server certificate, client to client certificate for upstream",
          "enum": [
            "server",
            "client"
          ],
          "type": "string"
        }
      },
      "then": {
        "oneOf": [
          {
            "required": [
              "sni",
              "key",
              "cert"
            ]
          },
          {
            "required": [
              "snis",
              "key",
              "cert"
            ]
          }
        ]
      },
      "else": {
        "required": [
          "key",
          "cert"
        ]
      },
      "additionalProperties": false,
      "if": {
        "properties": {
          "type": {
            "enum": [
              "server"
            ]
          }
        }
      },
      "type": "object"
    },
    "plugins": {
      "items": {
        "properties": {
          "stream": {
            "type": "boolean"
          },
          "additionalProperties": false,
          "name": {
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "type": "array"
    },
    "service": {
      "additionalProperties": false,
      "properties": {
        "upstream_id": {
          "anyOf": [
            {
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string"
            },
            {
              "minimum": 1,
              "type": "integer"
            }
          ]
        },
        "name": {
          "minLength": 1,
          "maxLength": 100,
          "type": "string"
        },
        "labels": {
          "description": "key/value pairs to specify attributes",
          "patternProperties": {
            ".*": {
              "description": "value of label",
              "minLength": 1,
              "maxLength": 256,
              "pattern": "^\\S+$",
              "type": "string"
            }
          },
          "type": "object"
        },
        "plugins": {
          "type": "object"
        },
        "create_time": {
          "type": "integer"
        },
        "id": {
          "anyOf": [
            {
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string"
            },
            {
              "minimum": 1,
              "type": "integer"
            }
          ]
        },
        "script": {
          "minLength": 10,
          "maxLength": 102400,
          "type": "string"
        },
        "upstream": {
          "additionalProperties": false,
          "properties": {
            "labels": {
              "description": "key/value pairs to specify attributes",
              "patternProperties": {
                ".*": {
                  "description": "value of label",
                  "minLength": 1,
                  "maxLength": 256,
                  "pattern": "^\\S+$",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "discovery_type": {
              "type": "string",
              "description": "discovery type"
            },
            "discovery_args": {
              "properties": {
                "namespace_id": {
                  "type": "string",
                  "description": "namespace id"
                },
                "group_name": {
                  "type": "string",
                  "description": "group name"
                }
              },
              "type": "object"
            },
            "id": {
              "anyOf": [
                {
                  "minLength": 1,
                  "maxLength": 64,
                  "pattern": "^[a-zA-Z0-9-_.]+$",
                  "type": "string"
                },
                {
                  "minimum": 1,
                  "type": "integer"
                }
              ]
            },
            "nodes": {
              "anyOf": [
                {
                  "patternProperties": {
                    ".*": {
                      "description": "weight of node",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                {
                  "items": {
                    "properties": {
                      "weight": {
                        "description": "weight of node",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "port": {
                        "description": "port of node",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "priority": {
                        "default": 0,
                        "description": "priority of node",
                        "type": "integer"
                      },
                      "host": {
                        "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                        "type": "string"
                      },
                      "metadata": {
                        "type": "object",
                        "description": "metadata of node"
                      }
                    },
                    "required": [
                      "host",
                      "port",
                      "weight"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              ]
            },
            "desc": {
              "maxLength": 256,
              "type": "string"
            },
            "update_time": {
              "type": "integer"
            },
            "type": {
              "default": "roundrobin",
              "description": "algorithms of load balancing",
              "type": "string"
            },
            "create_time": {
              "type": "integer"
            },
            "retries": {
              "minimum": 0,
              "type": "integer"
            },
            "retry_timeout": {
              "minimum": 0,
              "type": "number"
            },
            "scheme": {
              "default": "http",
              "enum": [
                "grpc",
                "grpcs",
                "http",
                "https",
                "tcp",
                "tls",
                "udp",
                "kafka"
              ],
              "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp. For specific protocols, it can be kafka."
            },
            "service_name": {
              "minLength": 1,
              "maxLength": 256,
              "type": "string"
            },
            "keepalive_pool": {
              "properties": {
                "idle_timeout": {
                  "default": 60,
                  "minimum": 0,
                  "type": "number"
                },
                "requests": {
                  "default": 1000,
                  "minimum": 1,
                  "type": "integer"
                },
                "size": {
                  "default": 320,
                  "minimum": 1,
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "name": {
              "minLength": 1,
              "maxLength": 100,
              "type": "string"
            },
            "timeout": {
              "properties": {
                "send": {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                "connect": {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                "read": {
                  "exclusiveMinimum": 0,
                  "type": "number"
                }
              },
              "required": [
                "connect",
                "send",
                "read"
              ],
              "type": "object"
            },
            "upstream_host": {
              "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
              "type": "string"
            },
            "tls": {
              "properties": {
                "client_cert_id": {
                  "anyOf": [
                    {
                      "minLength": 1,
                      "maxLength": 64,
                      "pattern": "^[a-zA-Z0-9-_.]+$",
                      "type": "string"
                    },
                    {
                      "minimum": 1,
                      "type": "integer"
                    }
                  ]
                },
                "client_cert": {
                  "minLength": 128,
                  "maxLength": 65536,
                  "type": "string"
                },
                "client_key": {
                  "minLength": 128,
                  "maxLength": 65536,
                  "type": "string"
                },
                "verify": {
                  "default": false,
                  "description": "Turn on server certificate verification, currently only kafka upstream is supported",
                  "type": "boolean"
                }
              },
              "dependencies": {
                "client_cert": {
                  "required": [
                    "client_key"
                  ]
                },
                "client_cert_id": {
                  "not": {
                    "required": [
                      "client_cert",
                      "client_key"
                    ]
                  }
                },
                "client_key": {
                  "required": [
                    "client_cert"
                  ]
                }
              },
              "type": "object"
            },
            "checks": {
              "anyOf": [
                {
                  "required": [
                    "active"
                  ]
                },
                {
                  "required": [
                    "active",
                    "passive"
                  ]
                }
              ],
              "properties": {
                "active": {
                  "properties": {
                    "https_verify_certificate": {
                      "default": true,
                      "type": "boolean"
                    },
                    "healthy": {
                      "properties": {
                        "http_statuses": {
                          "minItems": 1,
                          "uniqueItems": true,
                          "default": [
                            200,
                            302
                          ],
                          "items": {
                            "maximum": 599,
                            "type": "integer",
                            "minimum": 200
                          },
                          "type": "array"
                        },
                        "successes": {
                          "default": 2,
                          "maximum": 254,
                          "type": "integer",
                          "minimum": 1
                        },
                        "interval": {
                          "default": 1,
                          "type": "integer",
                          "minimum": 1
                        }
                      },
                      "type": "object"
                    },
                    "port": {
                      "maximum": 65535,
                      "type": "integer",
                      "minimum": 1
                    },
                    "req_headers": {
                      "minItems": 1,
                      "items": {
                        "uniqueItems": true,
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "host": {
                      "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                      "type": "string"
                    },
                    "timeout": {
                      "default": 1,
                      "type": "number"
                    },
                    "unhealthy": {
                      "properties": {
                        "http_statuses": {
                          "minItems": 1,
                          "uniqueItems": true,
                          "default": [
                            429,
                            404,
                            500,
                            501,
                            502,
                            503,
                            504,
                            505
                          ],
                          "items": {
                            "maximum": 599,
                            "type": "integer",
                            "minimum": 200
                          },
                          "type": "array"
                        },
                        "http_failures": {
                          "default": 5,
                          "maximum": 254,
                          "type": "integer",
                          "minimum": 1
                        },
                        "tcp_failures": {
                          "default": 2,
                          "maximum": 254,
                          "type": "integer",
                          "minimum": 1
                        },
                        "timeouts": {
                          "default": 3,
                          "maximum": 254,
                          "type": "integer",
                          "minimum": 1
                        },
                        "interval": {
                          "default": 1,
                          "type": "integer",
                          "minimum": 1
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "default": "http",
                      "enum": [
                        "http",
                        "https",
                        "tcp"
                      ],
                      "type": "string"
                    },
                    "concurrency": {
                      "default": 10,
                      "type": "integer"
                    },
                    "http_path": {
                      "default": "/",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "passive": {
                  "properties": {
                    "healthy": {
                      "properties": {
                        "http_statuses": {
                          "minItems": 1,
                          "uniqueItems": true,
                          "default": [
                            200,
                            201,
                            202,
                            203,
                            204,
                            205,
                            206,
                            207,
                            208,
                            226,
                            300,
                            301,
                            302,
                            303,
                            304,
                            305,
                            306,
                            307,
                            308
                          ],
                          "items": {
                            "maximum": 599,
                            "type": "integer",
                            "minimum": 200
                          },
                          "type": "array"
                        },
                        "successes": {
                          "default": 5,
                          "maximum": 254,
                          "type": "integer",
                          "minimum": 0
                        }
                      },
                      "type": "object"
                    },
                    "unhealthy": {
                      "properties": {
                        "http_statuses": {
                          "minItems": 1,
                          "uniqueItems": true,
                          "default": [
                            429,
                            500,
                            503
                          ],
                          "items": {
                            "maximum": 599,
                            "type": "integer",
                            "minimum": 200
                          },
                          "type": "array"
                        },
                        "timeouts": {
                          "default": 7,
                          "maximum": 254,
                          "type": "integer",
                          "minimum": 0
                        },
                        "http_failures": {
                          "default": 5,
                          "maximum": 254,
                          "type": "integer",
                          "minimum": 0
                        },
                        "tcp_failures": {
                          "default": 2,
                          "maximum": 254,
                          "type": "integer",
                          "minimum": 0
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "default": "http",
                      "enum": [
                        "http",
                        "https",
                        "tcp"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "pass_host": {
              "default": "pass",
              "description": "mod of host passing",
              "enum": [
                "pass",
                "node",
                "rewrite"
              ],
              "type": "string"
            },
            "hash_on": {
              "default": "vars",
              "enum": [
                "vars",
                "header",
                "cookie",
                "consumer",
                "vars_combinations"
              ],
              "type": "string"
            },
            "key": {
              "type": "string",
              "description": "the key of chash for dynamic load balancing"
            }
          },
          "oneOf": [
            {
              "required": [
                "nodes"
              ]
            },
            {
              "required": [
                "service_name",
                "discovery_type"
              ]
            }
          ],
          "type": "object"
        },
        "hosts": {
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
            "type": "string"
          },
          "type": "array"
        },
        "desc": {
          "maxLength": 256,
          "type": "string"
        },
        "update_time": {
          "type": "integer"
        },
        "enable_websocket": {
          "type": "boolean",
          "description": "enable websocket for request"
        }
      },
      "type": "object"
    },
    "stream_route": {
      "additionalProperties": false,
      "properties": {
        "create_time": {
          "type": "integer"
        },
        "remote_addr": {
          "anyOf": [
            {
              "title": "IPv4",
              "format": "ipv4",
              "type": "string"
            },
            {
              "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
              "title": "IPv4/CIDR",
              "type": "string"
            },
            {
              "title": "IPv6",
              "format": "ipv6",
              "type": "string"
            },
            {
              "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
              "title": "IPv6/CIDR",
              "type": "string"
            }
          ],
          "description": "client IP",
          "type": "string"
        },
        "sni": {
          "description": "server name indication",
          "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
          "type": "string"
        },
        "server_addr": {
          "anyOf": [
            {
              "title": "IPv4",
              "format": "ipv4",
              "type": "string"
            },
            {
              "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
              "title": "IPv4/CIDR",
              "type": "string"
            },
            {
              "title": "IPv6",
              "format": "ipv6",
              "type": "string"
            },
            {
              "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
              "title": "IPv6/CIDR",
              "type": "string"
            }
          ],
          "description": "server IP",
          "type": "string"
        },
        "plugins": {
          "type": "object"
        },
        "protocol": {
          "properties": {
            "conf": {
              "type": "object",
              "description": "protocol-specific configuration"
            },
            "logger": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "conf": {
                    "type": "object",
                    "description": "logger plugin configuration"
                  },
                  "name": {
                    "type": "string"
                  },
                  "filter": {
                    "type": "array",
                    "description": "logger filter rules"
                  }
                },
                "dependencies": {
                  "name": [
                    "conf"
                  ]
                }
              },
              "type": "array"
            },
            "name": {
              "type": "string"
            },
            "superior_id": {
              "anyOf": [
                {
                  "minLength": 1,
                  "maxLength": 64,
                  "pattern": "^[a-zA-Z0-9-_.]+$",
                  "type": "string"
                },
                {
                  "minimum": 1,
                  "type": "integer"
                }
              ]
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        },
        "id": {
          "anyOf": [
            {
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string"
            },
            {
              "minimum": 1,
              "type": "integer"
            }
          ]
        },
        "service_id": {
          "anyOf": [
            {
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string"
            },
            {
              "minimum": 1,
              "type": "integer"
            }
          ]
        },
        "server_port": {
          "type": "integer",
          "description": "server port"
        },
        "upstream_id": {
          "anyOf": [
            {
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string"
            },
            {
              "minimum": 1,
              "type": "integer"
            }
          ]
        },
        "desc": {
          "maxLength": 256,
          "type": "string"
        },
        "update_time": {
          "type": "integer"
        },
        "upstream": {
          "additionalProperties": false,
          "properties": {
            "labels": {
              "description": "key/value pairs to specify attributes",
              "patternProperties": {
                ".*": {
                  "description": "value of label",
                  "minLength": 1,
                  "maxLength": 256,
                  "pattern": "^\\S+$",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "discovery_type": {
              "type": "string",
              "description": "discovery type"
            },
            "discovery_args": {
              "properties": {
                "namespace_id": {
                  "type": "string",
                  "description": "namespace id"
                },
                "group_name": {
                  "type": "string",
                  "description": "group name"
                }
              },
              "type": "object"
            },
            "id": {
              "anyOf": [
                {
                  "minLength": 1,
                  "maxLength": 64,
                  "pattern": "^[a-zA-Z0-9-_.]+$",
                  "type": "string"
                },
                {
                  "minimum": 1,
                  "type": "integer"
                }
              ]
            },
            "nodes": {
              "anyOf": [
                {
                  "patternProperties": {
                    ".*": {
                      "description": "weight of node",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                {
                  "items": {
                    "properties": {
                      "weight": {
                        "description": "weight of node",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "port": {
                        "description": "port of node",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "priority": {
                        "default": 0,
                        "description": "priority of node",
                        "type": "integer"
                      },
                      "host": {
                        "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                        "type": "string"
                      },
                      "metadata": {
                        "type": "object",
                        "description": "metadata of node"
                      }
                    },
                    "required": [
                      "host",
                      "port",
                      "weight"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              ]
            },
            "desc": {
              "maxLength": 256,
              "type": "string"
            },
            "update_time": {
              "type": "integer"
            },
            "type": {
              "default": "roundrobin",
              "description": "algorithms of load balancing",
              "type": "string"
            },
            "create_time": {
              "type": "integer"
            },
            "retries": {
              "minimum": 0,
              "type": "integer"
            },
            "retry_timeout": {
              "minimum": 0,
              "type": "number"
            },
            "scheme": {
              "default": "http",
              "enum": [
                "grpc",
                "grpcs",
                "http",
                "https",
                "tcp",
                "tls",
                "udp",
                "kafka"
              ],
              "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp. For specific protocols, it can be kafka."
            },
            "service_name": {
              "minLength": 1,
              "maxLength": 256,
              "type": "string"
            },
            "keepalive_pool": {
              "properties": {
                "idle_timeout": {
                  "default": 60,
                  "minimum": 0,
                  "type": "number"
                },
                "requests": {
                  "default": 1000,
                  "minimum": 1,
                  "type": "integer"
                },
                "size": {
                  "default": 320,
                  "minimum": 1,
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "name": {
              "minLength": 1,
              "maxLength": 100,
              "type": "string"
            },
            "timeout": {
              "properties": {
                "send": {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                "connect": {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                "read": {
                  "exclusiveMinimum": 0,
                  "type": "number"
                }
              },
              "required": [
                "connect",
                "send",
                "read"
              ],
              "type": "object"
            },
            "upstream_host": {
              "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
              "type": "string"
            },
            "tls": {
              "properties": {
                "client_cert_id": {
                  "anyOf": [
                    {
                      "minLength": 1,
                      "maxLength": 64,
                      "pattern": "^[a-zA-Z0-9-_.]+$",
                      "type": "string"
                    },
                    {
                      "minimum": 1,
                      "type": "integer"
                    }
                  ]
                },
                "client_cert": {
                  "minLength": 128,
                  "maxLength": 65536,
                  "type": "string"
                },
                "client_key": {
                  "minLength": 128,
                  "maxLength": 65536,
                  "type": "string"
                },
                "verify": {
                  "default": false,
                  "description": "Turn on server certificate verification, currently only kafka upstream is supported",
                  "type": "boolean"
                }
              },
              "dependencies": {
                "client_cert": {
                  "required": [
                    "client_key"
                  ]
                },
                "client_cert_id": {
                  "not": {
                    "required": [
                      "client_cert",
                      "client_key"
                    ]
                  }
                },
                "client_key": {
                  "required": [
                    "client_cert"
                  ]
                }
              },
              "type": "object"
            },
            "checks": {
              "anyOf": [
                {
                  "required": [
                    "active"
                  ]
                },
                {
                  "required": [
                    "active",
                    "passive"
                  ]
                }
              ],
              "properties": {
                "active": {
                  "properties": {
                    "https_verify_certificate": {
                      "default": true,
                      "type": "boolean"
                    },
                    "healthy": {
                      "properties": {
                        "http_statuses": {
                          "minItems": 1,
                          "uniqueItems": true,
                          "default": [
                            200,
                            302
                          ],
                          "items": {
                            "maximum": 599,
                            "type": "integer",
                            "minimum": 200
                          },
                          "type": "array"
                        },
                        "successes": {
                          "default": 2,
                          "maximum": 254,
                          "type": "integer",
                          "minimum": 1
                        },
                        "interval": {
                          "default": 1,
                          "type": "integer",
                          "minimum": 1
                        }
                      },
                      "type": "object"
                    },
                    "port": {
                      "maximum": 65535,
                      "type": "integer",
                      "minimum": 1
                    },
                    "req_headers": {
                      "minItems": 1,
                      "items": {
                        "uniqueItems": true,
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "host": {
                      "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                      "type": "string"
                    },
                    "timeout": {
                      "default": 1,
                      "type": "number"
                    },
                    "unhealthy": {
                      "properties": {
                        "http_statuses": {
                          "minItems": 1,
                          "uniqueItems": true,
                          "default": [
                            429,
                            404,
                            500,
                            501,
                            502,
                            503,
                            504,
                            505
                          ],
                          "items": {
                            "maximum": 599,
                            "type": "integer",
                            "minimum": 200
                          },
                          "type": "array"
                        },
                        "http_failures": {
                          "default": 5,
                          "maximum": 254,
                          "type": "integer",
                          "minimum": 1
                        },
                        "tcp_failures": {
                          "default": 2,
                          "maximum": 254,
                          "type": "integer",
                          "minimum": 1
                        },
                        "timeouts": {
                          "default": 3,
                          "maximum": 254,
                          "type": "integer",
                          "minimum": 1
                        },
                        "interval": {
                          "default": 1,
                          "type": "integer",
                          "minimum": 1
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "default": "http",
                      "enum": [
                        "http",
                        "https",
                        "tcp"
                      ],
                      "type": "string"
                    },
                    "concurrency": {
                      "default": 10,
                      "type": "integer"
                    },
                    "http_path": {
                      "default": "/",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "passive": {
                  "properties": {
                    "healthy": {
                      "properties": {
                        "http_statuses": {
                          "minItems": 1,
                          "uniqueItems": true,
                          "default": [
                            200,
                            201,
                            202,
                            203,
                            204,
                            205,
                            206,
                            207,
                            208,
                            226,
                            300,
                            301,
                            302,
                            303,
                            304,
                            305,
                            306,
                            307,
                            308
                          ],
                          "items": {
                            "maximum": 599,
                            "type": "integer",
                            "minimum": 200
                          },
                          "type": "array"
                        },
                        "successes": {
                          "default": 5,
                          "maximum": 254,
                          "type": "integer",
                          "minimum": 0
                        }
                      },
                      "type": "object"
                    },
                    "unhealthy": {
                      "properties": {
                        "http_statuses": {
                          "minItems": 1,
                          "uniqueItems": true,
                          "default": [
                            429,
                            500,
                            503
                          ],
                          "items": {
                            "maximum": 599,
                            "type": "integer",
                            "minimum": 200
                          },
                          "type": "array"
                        },
                        "timeouts": {
                          "default": 7,
                          "maximum": 254,
                          "type": "integer",
                          "minimum": 0
                        },
                        "http_failures": {
                          "default": 5,
                          "maximum": 254,
                          "type": "integer",
                          "minimum": 0
                        },
                        "tcp_failures": {
                          "default": 2,
                          "maximum": 254,
                          "type": "integer",
                          "minimum": 0
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "default": "http",
                      "enum": [
                        "http",
                        "https",
                        "tcp"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "pass_host": {
              "default": "pass",
              "description": "mod of host passing",
              "enum": [
                "pass",
                "node",
                "rewrite"
              ],
              "type": "string"
            },
            "hash_on": {
              "default": "vars",
              "enum": [
                "vars",
                "header",
                "cookie",
                "consumer",
                "vars_combinations"
              ],
              "type": "string"
            },
            "key": {
              "type": "string",
              "description": "the key of chash for dynamic load balancing"
            }
          },
          "oneOf": [
            {
              "required": [
                "nodes"
              ]
            },
            {
              "required": [
                "service_name",
                "discovery_type"
              ]
            }
          ],
          "type": "object"
        }
      },
      "type": "object"
    },
    "consumer": {
      "additionalProperties": false,
      "properties": {
        "create_time": {
          "type": "integer"
        },
        "update_time": {
          "type": "integer"
        },
        "group_id": {
          "anyOf": [
            {
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string"
            },
            {
              "minimum": 1,
              "type": "integer"
            }
          ]
        },
        "labels": {
          "description": "key/value pairs to specify attributes",
          "patternProperties": {
            ".*": {
              "description": "value of label",
              "minLength": 1,
              "maxLength": 256,
              "pattern": "^\\S+$",
              "type": "string"
            }
          },
          "type": "object"
        },
        "desc": {
          "maxLength": 256,
          "type": "string"
        },
        "plugins": {
          "type": "object"
        },
        "username": {
          "minLength": 1,
          "maxLength": 100,
          "pattern": "^[a-zA-Z0-9_]+$",
          "type": "string"
        }
      },
      "required": [
        "username"
      ],
      "type": "object"
    },
    "plugin_config": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "anyOf": [
            {
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string"
            },
            {
              "minimum": 1,
              "type": "integer"
            }
          ]
        },
        "update_time": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "labels": {
          "description": "key/value pairs to specify attributes",
          "patternProperties": {
            ".*": {
              "description": "value of label",
              "minLength": 1,
              "maxLength": 256,
              "pattern": "^\\S+$",
              "type": "string"
            }
          },
          "type": "object"
        },
        "desc": {
          "maxLength": 256,
          "type": "string"
        },
        "plugins": {
          "type": "object"
        },
        "create_time": {
          "type": "integer"
        }
      },
      "required": [
        "id",
        "plugins"
      ],
      "type": "object"
    },
    "consumer_group": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "anyOf": [
            {
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string"
            },
            {
              "minimum": 1,
              "type": "integer"
            }
          ]
        },
        "update_time": {
          "type": "integer"
        },
        "labels": {
          "description": "key/value pairs to specify attributes",
          "patternProperties": {
            ".*": {
              "description": "value of label",
              "minLength": 1,
              "maxLength": 256,
              "pattern": "^\\S+$",
              "type": "string"
            }
          },
          "type": "object"
        },
        "desc": {
          "maxLength": 256,
          "type": "string"
        },
        "plugins": {
          "type": "object"
        },
        "create_time": {
          "type": "integer"
        }
      },
      "required": [
        "id",
        "plugins"
      ],
      "type": "object"
    },
    "upstream": {
      "additionalProperties": false,
      "properties": {
        "labels": {
          "description": "key/value pairs to specify attributes",
          "patternProperties": {
            ".*": {
              "description": "value of label",
              "minLength": 1,
              "maxLength": 256,
              "pattern": "^\\S+$",
              "type": "string"
            }
          },
          "type": "object"
        },
        "discovery_type": {
          "type": "string",
          "description": "discovery type"
        },
        "discovery_args": {
          "properties": {
            "namespace_id": {
              "type": "string",
              "description": "namespace id"
            },
            "group_name": {
              "type": "string",
              "description": "group name"
            }
          },
          "type": "object"
        },
        "id": {
          "anyOf": [
            {
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string"
            },
            {
              "minimum": 1,
              "type": "integer"
            }
          ]
        },
        "nodes": {
          "anyOf": [
            {
              "patternProperties": {
                ".*": {
                  "description": "weight of node",
                  "minimum": 0,
                  "type": "integer"
                }
              },
              "type": "object"
            },
            {
              "items": {
                "properties": {
                  "weight": {
                    "description": "weight of node",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "port": {
                    "description": "port of node",
                    "minimum": 1,
                    "type": "integer"
                  },
                  "priority": {
                    "default": 0,
                    "description": "priority of node",
                    "type": "integer"
                  },
                  "host": {
                    "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                    "type": "string"
                  },
                  "metadata": {
                    "type": "object",
                    "description": "metadata of node"
                  }
                },
                "required": [
                  "host",
                  "port",
                  "weight"
                ],
                "type": "object"
              },
              "type": "array"
            }
          ]
        },
        "desc": {
          "maxLength": 256,
          "type": "string"
        },
        "update_time": {
          "type": "integer"
        },
        "type": {
          "default": "roundrobin",
          "description": "algorithms of load balancing",
          "type": "string"
        },
        "create_time": {
          "type": "integer"
        },
        "retries": {
          "minimum": 0,
          "type": "integer"
        },
        "retry_timeout": {
          "minimum": 0,
          "type": "number"
        },
        "scheme": {
          "default": "http",
          "enum": [
            "grpc",
            "grpcs",
            "http",
            "https",
            "tcp",
            "tls",
            "udp",
            "kafka"
          ],
          "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp. For specific protocols, it can be kafka."
        },
        "service_name": {
          "minLength": 1,
          "maxLength": 256,
          "type": "string"
        },
        "keepalive_pool": {
          "properties": {
            "idle_timeout": {
              "default": 60,
              "minimum": 0,
              "type": "number"
            },
            "requests": {
              "default": 1000,
              "minimum": 1,
              "type": "integer"
            },
            "size": {
              "default": 320,
              "minimum": 1,
              "type": "integer"
            }
          },
          "type": "object"
        },
        "name": {
          "minLength": 1,
          "maxLength": 100,
          "type": "string"
        },
        "timeout": {
          "properties": {
            "send": {
              "exclusiveMinimum": 0,
              "type": "number"
            },
            "connect": {
              "exclusiveMinimum": 0,
              "type": "number"
            },
            "read": {
              "exclusiveMinimum": 0,
              "type": "number"
            }
          },
          "required": [
            "connect",
            "send",
            "read"
          ],
          "type": "object"
        },
        "upstream_host": {
          "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
          "type": "string"
        },
        "tls": {
          "properties": {
            "client_cert_id": {
              "anyOf": [
                {
                  "minLength": 1,
                  "maxLength": 64,
                  "pattern": "^[a-zA-Z0-9-_.]+$",
                  "type": "string"
                },
                {
                  "minimum": 1,
                  "type": "integer"
                }
              ]
            },
            "client_cert": {
              "minLength": 128,
              "maxLength": 65536,
              "type": "string"
            },
            "client_key": {
              "minLength": 128,
              "maxLength": 65536,
              "type": "string"
            },
            "verify": {
              "default": false,
              "description": "Turn on server certificate verification, currently only kafka upstream is supported",
              "type": "boolean"
            }
          },
          "dependencies": {
            "client_cert": {
              "required": [
                "client_key"
              ]
            },
            "client_cert_id": {
              "not": {
                "required": [
                  "client_cert",
                  "client_key"
                ]
              }
            },
            "client_key": {
              "required": [
                "client_cert"
              ]
            }
          },
          "type": "object"
        },
        "checks": {
          "anyOf": [
            {
              "required": [
                "active"
              ]
            },
            {
              "required": [
                "active",
                "passive"
              ]
            }
          ],
          "properties": {
            "active": {
              "properties": {
                "https_verify_certificate": {
                  "default": true,
                  "type": "boolean"
                },
                "healthy": {
                  "properties": {
                    "http_statuses": {
                      "minItems": 1,
                      "uniqueItems": true,
                      "default": [
                        200,
                        302
                      ],
                      "items": {
                        "maximum": 599,
                        "type": "integer",
                        "minimum": 200
                      },
                      "type": "array"
                    },
                    "successes": {
                      "default": 2,
                      "maximum": 254,
                      "type": "integer",
                      "minimum": 1
                    },
                    "interval": {
                      "default": 1,
                      "type": "integer",
                      "minimum": 1
                    }
                  },
                  "type": "object"
                },
                "port": {
                  "maximum": 65535,
                  "type": "integer",
                  "minimum": 1
                },
                "req_headers": {
                  "minItems": 1,
                  "items": {
                    "uniqueItems": true,
                    "type": "string"
                  },
                  "type": "array"
                },
                "host": {
                  "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                  "type": "string"
                },
                "timeout": {
                  "default": 1,
                  "type": "number"
                },
                "unhealthy": {
                  "properties": {
                    "http_statuses": {
                      "minItems": 1,
                      "uniqueItems": true,
                      "default": [
                        429,
                        404,
                        500,
                        501,
                        502,
                        503,
                        504,
                        505
                      ],
                      "items": {
                        "maximum": 599,
                        "type": "integer",
                        "minimum": 200
                      },
                      "type": "array"
                    },
                    "http_failures": {
                      "default": 5,
                      "maximum": 254,
                      "type": "integer",
                      "minimum": 1
                    },
                    "tcp_failures": {
                      "default": 2,
                      "maximum": 254,
                      "type": "integer",
                      "minimum": 1
                    },
                    "timeouts": {
                      "default": 3,
                      "maximum": 254,
                      "type": "integer",
                      "minimum": 1
                    },
                    "interval": {
                      "default": 1,
                      "type": "integer",
                      "minimum": 1
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "default": "http",
                  "enum": [
                    "http",
                    "https",
                    "tcp"
                  ],
                  "type": "string"
                },
                "concurrency": {
                  "default": 10,
                  "type": "integer"
                },
                "http_path": {
                  "default": "/",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "passive": {
              "properties": {
                "healthy": {
                  "properties": {
                    "http_statuses": {
                      "minItems": 1,
                      "uniqueItems": true,
                      "default": [
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        226,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308
                      ],
                      "items": {
                        "maximum": 599,
                        "type": "integer",
                        "minimum": 200
                      },
                      "type": "array"
                    },
                    "successes": {
                      "default": 5,
                      "maximum": 254,
                      "type": "integer",
                      "minimum": 0
                    }
                  },
                  "type": "object"
                },
                "unhealthy": {
                  "properties": {
                    "http_statuses": {
                      "minItems": 1,
                      "uniqueItems": true,
                      "default": [
                        429,
                        500,
                        503
                      ],
                      "items": {
                        "maximum": 599,
                        "type": "integer",
                        "minimum": 200
                      },
                      "type": "array"
                    },
                    "timeouts": {
                      "default": 7,
                      "maximum": 254,
                      "type": "integer",
                      "minimum": 0
                    },
                    "http_failures": {
                      "default": 5,
                      "maximum": 254,
                      "type": "integer",
                      "minimum": 0
                    },
                    "tcp_failures": {
                      "default": 2,
                      "maximum": 254,
                      "type": "integer",
                      "minimum": 0
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "default": "http",
                  "enum": [
                    "http",
                    "https",
                    "tcp"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        "pass_host": {
          "default": "pass",
          "description": "mod of host passing",
          "enum": [
            "pass",
            "node",
            "rewrite"
          ],
          "type": "string"
        },
        "hash_on": {
          "default": "vars",
          "enum": [
            "vars",
            "header",
            "cookie",
            "consumer",
            "vars_combinations"
          ],
          "type": "string"
        },
        "key": {
          "type": "string",
          "description": "the key of chash for dynamic load balancing"
        }
      },
      "oneOf": [
        {
          "required": [
            "nodes"
          ]
        },
        {
          "required": [
            "service_name",
            "discovery_type"
          ]
        }
      ],
      "type": "object"
    },
    "proto": {
      "additionalProperties": false,
      "properties": {
        "create_time": {
          "type": "integer"
        },
        "content": {
          "minLength": 1,
          "maxLength": 1048576,
          "type": "string"
        },
        "desc": {
          "maxLength": 256,
          "type": "string"
        },
        "update_time": {
          "type": "integer"
        },
        "id": {
          "anyOf": [
            {
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string"
            },
            {
              "minimum": 1,
              "type": "integer"
            }
          ]
        }
      },
      "required": [
        "content"
      ],
      "type": "object"
    },
    "global_rule": {
      "additionalProperties": false,
      "properties": {
        "update_time": {
          "type": "integer"
        },
        "id": {
          "anyOf": [
            {
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string"
            },
            {
              "minimum": 1,
              "type": "integer"
            }
          ]
        },
        "plugins": {
          "type": "object"
        },
        "create_time": {
          "type": "integer"
        }
      },
      "required": [
        "id",
        "plugins"
      ],
      "type": "object"
    },
    "upstream_hash_vars_schema": {
      "pattern": "^((uri|server_name|server_addr|request_uri|remote_port|remote_addr|query_string|host|hostname|mqtt_client_id)|arg_[0-9a-zA-z_-]+)$",
      "type": "string"
    },
    "route": {
      "anyOf": [
        {
          "required": [
            "plugins",
            "uri"
          ]
        },
        {
          "required": [
            "upstream",
            "uri"
          ]
        },
        {
          "required": [
            "upstream_id",
            "uri"
          ]
        },
        {
          "required": [
            "service_id",
            "uri"
          ]
        },
        {
          "required": [
            "plugins",
            "uris"
          ]
        },
        {
          "required": [
            "upstream",
            "uris"
          ]
        },
        {
          "required": [
            "upstream_id",
            "uris"
          ]
        },
        {
          "required": [
            "service_id",
            "uris"
          ]
        },
        {
          "required": [
            "script",
            "uri"
          ]
        },
        {
          "required": [
            "script",
            "uris"
          ]
        }
      ],
      "properties": {
        "script_id": {
          "anyOf": [
            {
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string"
            },
            {
              "minimum": 1,
              "type": "integer"
            }
          ]
        },
        "remote_addr": {
          "anyOf": [
            {
              "title": "IPv4",
              "format": "ipv4",
              "type": "string"
            },
            {
              "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
              "title": "IPv4/CIDR",
              "type": "string"
            },
            {
              "title": "IPv6",
              "format": "ipv6",
              "type": "string"
            },
            {
              "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
              "title": "IPv6/CIDR",
              "type": "string"
            }
          ],
          "description": "client IP",
          "type": "string"
        },
        "labels": {
          "description": "key/value pairs to specify attributes",
          "patternProperties": {
            ".*": {
              "description": "value of label",
              "minLength": 1,
              "maxLength": 256,
              "pattern": "^\\S+$",
              "type": "string"
            }
          },
          "type": "object"
        },
        "plugin_config_id": {
          "anyOf": [
            {
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string"
            },
            {
              "minimum": 1,
              "type": "integer"
            }
          ]
        },
        "id": {
          "anyOf": [
            {
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string"
            },
            {
              "minimum": 1,
              "type": "integer"
            }
          ]
        },
        "upstream": {
          "additionalProperties": false,
          "properties": {
            "labels": {
              "description": "key/value pairs to specify attributes",
              "patternProperties": {
                ".*": {
                  "description": "value of label",
                  "minLength": 1,
                  "maxLength": 256,
                  "pattern": "^\\S+$",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "discovery_type": {
              "type": "string",
              "description": "discovery type"
            },
            "discovery_args": {
              "properties": {
                "namespace_id": {
                  "type": "string",
                  "description": "namespace id"
                },
                "group_name": {
                  "type": "string",
                  "description": "group name"
                }
              },
              "type": "object"
            },
            "id": {
              "anyOf": [
                {
                  "minLength": 1,
                  "maxLength": 64,
                  "pattern": "^[a-zA-Z0-9-_.]+$",
                  "type": "string"
                },
                {
                  "minimum": 1,
                  "type": "integer"
                }
              ]
            },
            "nodes": {
              "anyOf": [
                {
                  "patternProperties": {
                    ".*": {
                      "description": "weight of node",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                {
                  "items": {
                    "properties": {
                      "weight": {
                        "description": "weight of node",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "port": {
                        "description": "port of node",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "priority": {
                        "default": 0,
                        "description": "priority of node",
                        "type": "integer"
                      },
                      "host": {
                        "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                        "type": "string"
                      },
                      "metadata": {
                        "type": "object",
                        "description": "metadata of node"
                      }
                    },
                    "required": [
                      "host",
                      "port",
                      "weight"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              ]
            },
            "desc": {
              "maxLength": 256,
              "type": "string"
            },
            "update_time": {
              "type": "integer"
            },
            "type": {
              "default": "roundrobin",
              "description": "algorithms of load balancing",
              "type": "string"
            },
            "create_time": {
              "type": "integer"
            },
            "retries": {
              "minimum": 0,
              "type": "integer"
            },
            "retry_timeout": {
              "minimum": 0,
              "type": "number"
            },
            "scheme": {
              "default": "http",
              "enum": [
                "grpc",
                "grpcs",
                "http",
                "https",
                "tcp",
                "tls",
                "udp",
                "kafka"
              ],
              "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp. For specific protocols, it can be kafka."
            },
            "service_name": {
              "minLength": 1,
              "maxLength": 256,
              "type": "string"
            },
            "keepalive_pool": {
              "properties": {
                "idle_timeout": {
                  "default": 60,
                  "minimum": 0,
                  "type": "number"
                },
                "requests": {
                  "default": 1000,
                  "minimum": 1,
                  "type": "integer"
                },
                "size": {
                  "default": 320,
                  "minimum": 1,
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "name": {
              "minLength": 1,
              "maxLength": 100,
              "type": "string"
            },
            "timeout": {
              "properties": {
                "send": {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                "connect": {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                "read": {
                  "exclusiveMinimum": 0,
                  "type": "number"
                }
              },
              "required": [
                "connect",
                "send",
                "read"
              ],
              "type": "object"
            },
            "upstream_host": {
              "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
              "type": "string"
            },
            "tls": {
              "properties": {
                "client_cert_id": {
                  "anyOf": [
                    {
                      "minLength": 1,
                      "maxLength": 64,
                      "pattern": "^[a-zA-Z0-9-_.]+$",
                      "type": "string"
                    },
                    {
                      "minimum": 1,
                      "type": "integer"
                    }
                  ]
                },
                "client_cert": {
                  "minLength": 128,
                  "maxLength": 65536,
                  "type": "string"
                },
                "client_key": {
                  "minLength": 128,
                  "maxLength": 65536,
                  "type": "string"
                },
                "verify": {
                  "default": false,
                  "description": "Turn on server certificate verification, currently only kafka upstream is supported",
                  "type": "boolean"
                }
              },
              "dependencies": {
                "client_cert": {
                  "required": [
                    "client_key"
                  ]
                },
                "client_cert_id": {
                  "not": {
                    "required": [
                      "client_cert",
                      "client_key"
                    ]
                  }
                },
                "client_key": {
                  "required": [
                    "client_cert"
                  ]
                }
              },
              "type": "object"
            },
            "checks": {
              "anyOf": [
                {
                  "required": [
                    "active"
                  ]
                },
                {
                  "required": [
                    "active",
                    "passive"
                  ]
                }
              ],
              "properties": {
                "active": {
                  "properties": {
                    "https_verify_certificate": {
                      "default": true,
                      "type": "boolean"
                    },
                    "healthy": {
                      "properties": {
                        "http_statuses": {
                          "minItems": 1,
                          "uniqueItems": true,
                          "default": [
                            200,
                            302
                          ],
                          "items": {
                            "maximum": 599,
                            "type": "integer",
                            "minimum": 200
                          },
                          "type": "array"
                        },
                        "successes": {
                          "default": 2,
                          "maximum": 254,
                          "type": "integer",
                          "minimum": 1
                        },
                        "interval": {
                          "default": 1,
                          "type": "integer",
                          "minimum": 1
                        }
                      },
                      "type": "object"
                    },
                    "port": {
                      "maximum": 65535,
                      "type": "integer",
                      "minimum": 1
                    },
                    "req_headers": {
                      "minItems": 1,
                      "items": {
                        "uniqueItems": true,
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "host": {
                      "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                      "type": "string"
                    },
                    "timeout": {
                      "default": 1,
                      "type": "number"
                    },
                    "unhealthy": {
                      "properties": {
                        "http_statuses": {
                          "minItems": 1,
                          "uniqueItems": true,
                          "default": [
                            429,
                            404,
                            500,
                            501,
                            502,
                            503,
                            504,
                            505
                          ],
                          "items": {
                            "maximum": 599,
                            "type": "integer",
                            "minimum": 200
                          },
                          "type": "array"
                        },
                        "http_failures": {
                          "default": 5,
                          "maximum": 254,
                          "type": "integer",
                          "minimum": 1
                        },
                        "tcp_failures": {
                          "default": 2,
                          "maximum": 254,
                          "type": "integer",
                          "minimum": 1
                        },
                        "timeouts": {
                          "default": 3,
                          "maximum": 254,
                          "type": "integer",
                          "minimum": 1
                        },
                        "interval": {
                          "default": 1,
                          "type": "integer",
                          "minimum": 1
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "default": "http",
                      "enum": [
                        "http",
                        "https",
                        "tcp"
                      ],
                      "type": "string"
                    },
                    "concurrency": {
                      "default": 10,
                      "type": "integer"
                    },
                    "http_path": {
                      "default": "/",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "passive": {
                  "properties": {
                    "healthy": {
                      "properties": {
                        "http_statuses": {
                          "minItems": 1,
                          "uniqueItems": true,
                          "default": [
                            200,
                            201,
                            202,
                            203,
                            204,
                            205,
                            206,
                            207,
                            208,
                            226,
                            300,
                            301,
                            302,
                            303,
                            304,
                            305,
                            306,
                            307,
                            308
                          ],
                          "items": {
                            "maximum": 599,
                            "type": "integer",
                            "minimum": 200
                          },
                          "type": "array"
                        },
                        "successes": {
                          "default": 5,
                          "maximum": 254,
                          "type": "integer",
                          "minimum": 0
                        }
                      },
                      "type": "object"
                    },
                    "unhealthy": {
                      "properties": {
                        "http_statuses": {
                          "minItems": 1,
                          "uniqueItems": true,
                          "default": [
                            429,
                            500,
                            503
                          ],
                          "items": {
                            "maximum": 599,
                            "type": "integer",
                            "minimum": 200
                          },
                          "type": "array"
                        },
                        "timeouts": {
                          "default": 7,
                          "maximum": 254,
                          "type": "integer",
                          "minimum": 0
                        },
                        "http_failures": {
                          "default": 5,
                          "maximum": 254,
                          "type": "integer",
                          "minimum": 0
                        },
                        "tcp_failures": {
                          "default": 2,
                          "maximum": 254,
                          "type": "integer",
                          "minimum": 0
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "default": "http",
                      "enum": [
                        "http",
                        "https",
                        "tcp"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "pass_host": {
              "default": "pass",
              "description": "mod of host passing",
              "enum": [
                "pass",
                "node",
                "rewrite"
              ],
              "type": "string"
            },
            "hash_on": {
              "default": "vars",
              "enum": [
                "vars",
                "header",
                "cookie",
                "consumer",
                "vars_combinations"
              ],
              "type": "string"
            },
            "key": {
              "type": "string",
              "description": "the key of chash for dynamic load balancing"
            }
          },
          "oneOf": [
            {
              "required": [
                "nodes"
              ]
            },
            {
              "required": [
                "service_name",
                "discovery_type"
              ]
            }
          ],
          "type": "object"
        },
        "status": {
          "default": 1,
          "description": "route status, 1 to enable, 0 to disable",
          "enum": [
            1,
            0
          ],
          "type": "integer"
        },
        "desc": {
          "maxLength": 256,
          "type": "string"
        },
        "update_time": {
          "type": "integer"
        },
        "enable_websocket": {
          "type": "boolean",
          "description": "enable websocket for request"
        },
        "uri": {
          "minLength": 1,
          "maxLength": 4096,
          "type": "string"
        },
        "create_time": {
          "type": "integer"
        },
        "upstream_id": {
          "anyOf": [
            {
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string"
            },
            {
              "minimum": 1,
              "type": "integer"
            }
          ]
        },
        "name": {
          "minLength": 1,
          "maxLength": 100,
          "type": "string"
        },
        "service_id": {
          "anyOf": [
            {
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string"
            },
            {
              "minimum": 1,
              "type": "integer"
            }
          ]
        },
        "plugins": {
          "type": "object"
        },
        "host": {
          "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
          "type": "string"
        },
        "priority": {
          "default": 0,
          "type": "integer"
        },
        "hosts": {
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
            "type": "string"
          },
          "type": "array"
        },
        "timeout": {
          "properties": {
            "send": {
              "exclusiveMinimum": 0,
              "type": "number"
            },
            "connect": {
              "exclusiveMinimum": 0,
              "type": "number"
            },
            "read": {
              "exclusiveMinimum": 0,
              "type": "number"
            }
          },
          "required": [
            "connect",
            "send",
            "read"
          ],
          "type": "object"
        },
        "script": {
          "minLength": 10,
          "maxLength": 102400,
          "type": "string"
        },
        "methods": {
          "uniqueItems": true,
          "items": {
            "description": "HTTP method",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "DELETE",
              "PATCH",
              "HEAD",
              "OPTIONS",
              "CONNECT",
              "TRACE",
              "PURGE"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "vars": {
          "type": "array"
        },
        "remote_addrs": {
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "anyOf": [
              {
                "title": "IPv4",
                "format": "ipv4",
                "type": "string"
              },
              {
                "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
                "title": "IPv4/CIDR",
                "type": "string"
              },
              {
                "title": "IPv6",
                "format": "ipv6",
                "type": "string"
              },
              {
                "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
                "title": "IPv6/CIDR",
                "type": "string"
              }
            ],
            "description": "client IP",
            "type": "string"
          },
          "type": "array"
        },
        "filter_func": {
          "minLength": 10,
          "pattern": "^function",
          "type": "string"
        },
        "uris": {
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "type": "string",
            "description": "HTTP uri"
          },
          "type": "array"
        }
      },
      "additionalProperties": false,
      "not": {
        "anyOf": [
          {
            "required": [
              "script",
              "plugins"
            ]
          },
          {
            "required": [
              "script",
              "plugin_config_id"
            ]
          }
        ]
      },
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "uri"
              ]
            },
            {
              "required": [
                "uris"
              ]
            }
          ]
        },
        {
          "oneOf": [
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "host"
                    ]
                  },
                  {
                    "required": [
                      "hosts"
                    ]
                  }
                ]
              }
            },
            {
              "required": [
                "host"
              ]
            },
            {
              "required": [
                "hosts"
              ]
            }
          ]
        },
        {
          "oneOf": [
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "remote_addr"
                    ]
                  },
                  {
                    "required": [
                      "remote_addrs"
                    ]
                  }
                ]
              }
            },
            {
              "required": [
                "remote_addr"
              ]
            },
            {
              "required": [
                "remote_addrs"
              ]
            }
          ]
        }
      ],
      "type": "object"
    }
  }
}
