{
  "plugins": {
    "grpc-transcode": {
      "priority": 506,
      "version": 0.1,
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "additionalProperties": true,
        "properties": {
          "proto_id": {
            "anyOf": [
              {
                "pattern": "^[a-zA-Z0-9-_.]+$",
                "minLength": 1,
                "maxLength": 64,
                "type": "string"
              },
              { "minimum": 1, "type": "integer" }
            ]
          },
          "method": {
            "description": "the method name in the grpc service.",
            "type": "string"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "deadline": {
            "description": "deadline for grpc, millisecond",
            "default": 0,
            "type": "number"
          },
          "status_detail_type": {
            "description": "the message type of the grpc-status-details-bin's details part, if not given, the details part will not be decoded",
            "type": "string"
          },
          "service": {
            "description": "the grpc service name",
            "type": "string"
          },
          "show_status_in_body": {
            "description": "show decoded grpc-status-details-bin in response body",
            "default": false,
            "type": "boolean"
          },
          "pb_option": {
            "default": [
              "enum_as_name",
              "int64_as_number",
              "auto_default_values",
              "disable_hooks"
            ],
            "items": {
              "anyOf": [
                {
                  "description": "enum as result",
                  "enum": [
                    "int64_as_number",
                    "int64_as_string",
                    "int64_as_hexstring"
                  ],
                  "type": "string"
                },
                {
                  "description": "int64 as result",
                  "enum": ["enum_as_name", "enum_as_value"],
                  "type": "string"
                },
                {
                  "description": "default values option",
                  "enum": [
                    "auto_default_values",
                    "no_default_values",
                    "use_default_values",
                    "use_default_metatable"
                  ],
                  "type": "string"
                },
                {
                  "description": "hooks option",
                  "enum": ["enable_hooks", "disable_hooks"],
                  "type": "string"
                }
              ],
              "type": "string"
            },
            "minItems": 1,
            "type": "array"
          }
        },
        "required": ["proto_id", "service", "method"],
        "type": "object"
      }
    },
    "proxy-rewrite": {
      "priority": 1008,
      "version": 0.1,
      "schema": {
        "properties": {
          "regex_uri": {
            "description": "new uri that substitute from client uri for upstream, lower priority than uri property",
            "items": { "description": "regex uri", "type": "string" },
            "minItems": 2,
            "type": "array"
          },
          "method": {
            "description": "proxy route method",
            "enum": [
              "PROPFIND",
              "LOCK",
              "UNLOCK",
              "PATCH",
              "TRACE",
              "GET",
              "HEAD",
              "POST",
              "PUT",
              "DELETE",
              "MKCOL",
              "COPY",
              "MOVE",
              "OPTIONS"
            ],
            "type": "string"
          },
          "headers": {
            "description": "new headers for request",
            "oneOf": [
              {
                "properties": {
                  "add": {
                    "type": "object",
                    "patternProperties": {
                      "^[^:]+$": {
                        "oneOf": [{ "type": "string" }, { "type": "number" }]
                      }
                    },
                    "minProperties": 1
                  },
                  "set": {
                    "type": "object",
                    "patternProperties": {
                      "^[^:]+$": {
                        "oneOf": [{ "type": "string" }, { "type": "number" }]
                      }
                    },
                    "minProperties": 1
                  },
                  "remove": {
                    "items": { "pattern": "^[^:]+$", "type": "string" },
                    "type": "array",
                    "minItems": 1
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "minProperties": 1
              },
              {
                "type": "object",
                "patternProperties": {
                  "^[^:]+$": {
                    "oneOf": [{ "type": "string" }, { "type": "number" }]
                  }
                },
                "minProperties": 1
              }
            ]
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "host": {
            "description": "new host for upstream",
            "pattern": "^[0-9a-zA-Z-.]+(:\\d{1,5})?$",
            "type": "string"
          },
          "use_real_request_uri_unsafe": {
            "description": "use real_request_uri instead, THIS IS VERY UNSAFE.",
            "default": false,
            "type": "boolean"
          },
          "uri": {
            "pattern": "^\\/.*",
            "description": "new uri for upstream",
            "minLength": 1,
            "maxLength": 4096,
            "type": "string"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "minProperties": 1,
        "type": "object"
      }
    },
    "public-api": {
      "priority": 501,
      "version": 0.1,
      "schema": {
        "properties": {
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "uri": { "type": "string" }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    },
    "sls-logger": {
      "priority": 406,
      "version": 0.1,
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
          "port": { "type": "integer" },
          "name": { "type": "string", "default": "sls-logger" },
          "batch_max_size": {
            "minimum": 1,
            "default": 1000,
            "type": "integer"
          },
          "max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
          "project": { "type": "string" },
          "logstore": { "type": "string" },
          "access_key_id": { "type": "string" },
          "access_key_secret": { "type": "string" },
          "inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
          "host": { "type": "string" },
          "log_format": { "type": "object" },
          "include_req_body": { "default": false, "type": "boolean" },
          "timeout": { "minimum": 1, "default": 5000, "type": "integer" }
        },
        "type": "object",
        "required": [
          "host",
          "port",
          "project",
          "logstore",
          "access_key_id",
          "access_key_secret"
        ],
        "encrypt_fields": ["access_key_secret"]
      }
    },
    "consumer-restriction": {
      "priority": 2400,
      "version": 0.1,
      "schema": {
        "properties": {
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "blacklist": {
            "items": { "type": "string" },
            "type": "array",
            "minItems": 1
          },
          "whitelist": {
            "items": { "type": "string" },
            "type": "array",
            "minItems": 1
          },
          "allowed_by_methods": {
            "items": {
              "properties": {
                "methods": {
                  "items": {
                    "description": "HTTP method",
                    "enum": [
                      "GET",
                      "POST",
                      "PUT",
                      "DELETE",
                      "PATCH",
                      "HEAD",
                      "OPTIONS",
                      "CONNECT",
                      "TRACE",
                      "PURGE"
                    ],
                    "type": "string"
                  },
                  "type": "array",
                  "minItems": 1
                },
                "user": { "type": "string" }
              },
              "type": "object"
            },
            "type": "array"
          },
          "rejected_code": {
            "minimum": 200,
            "default": 403,
            "type": "integer"
          },
          "rejected_msg": { "type": "string" },
          "type": {
            "default": "consumer_name",
            "type": "string",
            "enum": [
              "consumer_name",
              "service_id",
              "route_id",
              "consumer_group_id"
            ]
          }
        },
        "anyOf": [
          { "required": ["blacklist"] },
          { "required": ["whitelist"] },
          { "required": ["allowed_by_methods"] }
        ],
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    },
    "rocketmq-logger": {
      "priority": 402,
      "version": 0.1,
      "metadata_schema": {
        "properties": { "log_format": { "type": "object" } },
        "type": "object"
      },
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "include_resp_body_expr": {
            "items": { "type": "array" },
            "type": "array",
            "minItems": 1
          },
          "include_resp_body": { "default": false, "type": "boolean" },
          "inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
          "key": { "type": "string" },
          "meta_format": {
            "default": "default",
            "enum": ["default", "origin"],
            "type": "string"
          },
          "include_req_body": { "default": false, "type": "boolean" },
          "nameserver_list": {
            "items": { "type": "string" },
            "type": "array",
            "minItems": 1
          },
          "tag": { "type": "string" },
          "use_tls": { "default": false, "type": "boolean" },
          "access_key": { "default": "", "type": "string" },
          "secret_key": { "default": "", "type": "string" },
          "max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
          "retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
          "buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
          "timeout": { "minimum": 1, "default": 3, "type": "integer" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "log_format": { "type": "object" },
          "name": { "type": "string", "default": "rocketmq logger" },
          "include_req_body_expr": {
            "items": { "type": "array" },
            "type": "array",
            "minItems": 1
          },
          "topic": { "type": "string" },
          "batch_max_size": { "minimum": 1, "default": 1000, "type": "integer" }
        },
        "type": "object",
        "required": ["nameserver_list", "topic"],
        "encrypt_fields": ["secret_key"]
      }
    },
    "client-control": {
      "priority": 22000,
      "version": 0.1,
      "schema": {
        "properties": {
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "max_body_size": {
            "minimum": 0,
            "description": "Maximum message body size in bytes. No restriction when set to 0.",
            "type": "integer"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    },
    "ldap-auth": {
      "priority": 2540,
      "version": 0.1,
      "consumer_schema": {
        "properties": { "user_dn": { "type": "string" } },
        "title": "work with consumer object",
        "required": ["user_dn"],
        "type": "object"
      },
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "use_tls": { "default": false, "type": "boolean" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "tls_verify": { "default": false, "type": "boolean" },
          "base_dn": { "type": "string" },
          "ldap_uri": { "type": "string" },
          "uid": { "default": "cn", "type": "string" }
        },
        "title": "work with route or service object",
        "required": ["base_dn", "ldap_uri"],
        "type": "object"
      },
      "type": "auth"
    },
    "loki-logger": {
      "priority": 414,
      "version": 0.1,
      "metadata_schema": {
        "properties": { "log_format": { "type": "object" } },
        "type": "object"
      },
      "schema": {
        "properties": {
          "include_resp_body_expr": {
            "items": { "type": "array" },
            "type": "array",
            "minItems": 1
          },
          "ssl_verify": { "default": false, "type": "boolean" },
          "include_resp_body": { "default": false, "type": "boolean" },
          "inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
          "keepalive_pool": { "minimum": 1, "default": 5, "type": "integer" },
          "keepalive": { "default": true, "type": "boolean" },
          "include_req_body": { "default": false, "type": "boolean" },
          "timeout": {
            "default": 3000,
            "maximum": 60000,
            "minimum": 1,
            "description": "timeout in milliseconds",
            "type": "integer"
          },
          "include_req_body_expr": {
            "items": { "type": "array" },
            "type": "array",
            "minItems": 1
          },
          "name": { "type": "string", "default": "loki logger" },
          "batch_max_size": {
            "minimum": 1,
            "default": 1000,
            "type": "integer"
          },
          "endpoint_addrs": {
            "items": {
              "pattern": "^[^\\/]+:\\/\\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?",
              "type": "string"
            },
            "type": "array",
            "minItems": 1
          },
          "keepalive_timeout": {
            "minimum": 1000,
            "default": 60000,
            "description": "keepalive timeout in milliseconds",
            "type": "integer"
          },
          "buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
          "tenant_id": { "default": "fake", "type": "string" },
          "log_labels": {
            "default": { "job": "apisix" },
            "patternProperties": { ".*": { "minLength": 1, "type": "string" } },
            "type": "object"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
          "max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
          "log_format": { "type": "object" },
          "endpoint_uri": {
            "minLength": 1,
            "default": "/loki/api/v1/push",
            "type": "string"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["endpoint_addrs"],
        "type": "object"
      }
    },
    "ext-plugin-pre-req": {
      "priority": 12000,
      "version": 0.1,
      "schema": {
        "properties": {
          "allow_degradation": { "default": false, "type": "boolean" },
          "conf": {
            "items": {
              "properties": {
                "name": { "minLength": 1, "maxLength": 128, "type": "string" },
                "value": { "type": "string" }
              },
              "required": ["name", "value"],
              "type": "object"
            },
            "minItems": 1,
            "type": "array"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    },
    "opa": {
      "priority": 2001,
      "version": 0.1,
      "schema": {
        "properties": {
          "with_service": { "default": false, "type": "boolean" },
          "with_consumer": { "default": false, "type": "boolean" },
          "ssl_verify": { "default": true, "type": "boolean" },
          "keepalive_timeout": {
            "minimum": 1000,
            "default": 60000,
            "type": "integer"
          },
          "keepalive_pool": { "minimum": 1, "default": 5, "type": "integer" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "policy": { "type": "string" },
          "send_headers_upstream": {
            "description": "list of headers to pass to upstream in request",
            "items": { "type": "string" },
            "type": "array",
            "minItems": 1
          },
          "with_route": { "default": false, "type": "boolean" },
          "keepalive": { "default": true, "type": "boolean" },
          "host": { "type": "string" },
          "timeout": {
            "default": 3000,
            "maximum": 60000,
            "minimum": 1,
            "description": "timeout in milliseconds",
            "type": "integer"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["host", "policy"],
        "type": "object"
      }
    },
    "hmac-auth": {
      "priority": 2530,
      "version": 0.1,
      "consumer_schema": {
        "type": "object",
        "properties": {
          "validate_request_body": {
            "title": "A boolean value telling the plugin to enable body validation",
            "default": false,
            "type": "boolean"
          },
          "access_key": { "minLength": 1, "maxLength": 256, "type": "string" },
          "secret_key": { "minLength": 1, "maxLength": 256, "type": "string" },
          "max_req_body": {
            "title": "Max request body size",
            "default": 524288,
            "type": "integer"
          },
          "clock_skew": { "default": 0, "type": "integer" },
          "keep_headers": {
            "title": "whether to keep the http request header",
            "default": false,
            "type": "boolean"
          },
          "signed_headers": {
            "items": { "minLength": 1, "maxLength": 50, "type": "string" },
            "type": "array"
          },
          "encode_uri_params": {
            "title": "Whether to escape the uri parameter",
            "default": true,
            "type": "boolean"
          },
          "algorithm": {
            "default": "hmac-sha256",
            "type": "string",
            "enum": ["hmac-sha1", "hmac-sha256", "hmac-sha512"]
          }
        },
        "title": "work with consumer object",
        "required": ["access_key", "secret_key"],
        "encrypt_fields": ["secret_key"]
      },
      "schema": {
        "properties": {
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          }
        },
        "title": "work with route or service object",
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      },
      "type": "auth"
    },
    "redirect": {
      "priority": 900,
      "version": 0.1,
      "schema": {
        "properties": {
          "regex_uri": {
            "items": { "description": "regex uri", "type": "string" },
            "minItems": 2,
            "description": "params for generating new uri that substitute from client uri, first param is regular expression, the second one is uri template",
            "maxItems": 2,
            "type": "array"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "ret_code": { "minimum": 200, "default": 302, "type": "integer" },
          "append_query_string": { "default": false, "type": "boolean" },
          "encode_uri": { "default": false, "type": "boolean" },
          "http_to_https": { "type": "boolean" },
          "uri": {
            "minLength": 2,
            "pattern": "(\\\\\\$[0-9a-zA-Z_]+)|\\$\\{([0-9a-zA-Z_]+)\\}|\\$([0-9a-zA-Z_]+)|(\\$|[^$\\\\]+)",
            "type": "string"
          }
        },
        "oneOf": [
          { "required": ["uri"] },
          { "required": ["regex_uri"] },
          { "required": ["http_to_https"] }
        ],
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    },
    "limit-count": {
      "priority": 1002,
      "version": 0.5,
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "else": {
          "then": {
            "properties": {
              "redis_timeout": {
                "minimum": 1,
                "default": 1000,
                "type": "integer"
              },
              "redis_cluster_ssl": { "default": false, "type": "boolean" },
              "redis_cluster_nodes": {
                "items": { "minLength": 2, "maxLength": 100, "type": "string" },
                "type": "array",
                "minItems": 1
              },
              "redis_cluster_name": { "type": "string" },
              "redis_password": { "minLength": 0, "type": "string" },
              "redis_cluster_ssl_verify": {
                "default": false,
                "type": "boolean"
              }
            },
            "required": ["redis_cluster_nodes", "redis_cluster_name"]
          },
          "if": { "properties": { "policy": { "enum": ["redis-cluster"] } } }
        },
        "if": { "properties": { "policy": { "enum": ["redis"] } } },
        "properties": {
          "time_window": { "exclusiveMinimum": 0, "type": "integer" },
          "key_type": {
            "default": "var",
            "type": "string",
            "enum": ["var", "var_combination", "constant"]
          },
          "count": { "exclusiveMinimum": 0, "type": "integer" },
          "show_limit_quota_header": { "default": true, "type": "boolean" },
          "allow_degradation": { "default": false, "type": "boolean" },
          "key": { "default": "remote_addr", "type": "string" },
          "group": { "type": "string" },
          "policy": {
            "default": "local",
            "type": "string",
            "enum": ["local", "redis", "redis-cluster"]
          },
          "rejected_code": {
            "minimum": 200,
            "default": 503,
            "maximum": 599,
            "type": "integer"
          },
          "rejected_msg": { "minLength": 1, "type": "string" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          }
        },
        "then": {
          "properties": {
            "redis_timeout": {
              "minimum": 1,
              "default": 1000,
              "type": "integer"
            },
            "redis_ssl": { "default": false, "type": "boolean" },
            "redis_ssl_verify": { "default": false, "type": "boolean" },
            "redis_host": { "minLength": 2, "type": "string" },
            "redis_port": { "minimum": 1, "default": 6379, "type": "integer" },
            "redis_username": { "minLength": 1, "type": "string" },
            "redis_password": { "minLength": 0, "type": "string" },
            "redis_database": { "minimum": 0, "default": 0, "type": "integer" }
          },
          "required": ["redis_host"]
        },
        "required": ["count", "time_window"],
        "type": "object"
      }
    },
    "prometheus": {
      "priority": 500,
      "version": 0.2,
      "schema": {
        "properties": {
          "prefer_name": { "default": false, "type": "boolean" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    },
    "authz-casdoor": {
      "priority": 2559,
      "version": 0.1,
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "endpoint_addr": { "pattern": "^[^%?]+[^/]$", "type": "string" },
          "client_secret": { "type": "string" },
          "client_id": { "type": "string" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "callback_url": { "pattern": "^[^%?]+[^/]$", "type": "string" }
        },
        "type": "object",
        "required": [
          "callback_url",
          "endpoint_addr",
          "client_id",
          "client_secret"
        ],
        "encrypt_fields": ["client_secret"]
      }
    },
    "cas-auth": {
      "priority": 2597,
      "version": 0.1,
      "schema": {
        "properties": {
          "cas_callback_uri": { "type": "string" },
          "logout_uri": { "type": "string" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "idp_uri": { "type": "string" }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["idp_uri", "cas_callback_uri", "logout_uri"],
        "type": "object"
      }
    },
    "limit-req": {
      "priority": 1001,
      "version": 0.1,
      "schema": {
        "properties": {
          "rate": { "exclusiveMinimum": 0, "type": "number" },
          "burst": { "minimum": 0, "type": "number" },
          "nodelay": { "default": false, "type": "boolean" },
          "allow_degradation": { "default": false, "type": "boolean" },
          "key": { "type": "string" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "rejected_code": {
            "minimum": 200,
            "default": 503,
            "maximum": 599,
            "type": "integer"
          },
          "rejected_msg": { "minLength": 1, "type": "string" },
          "key_type": {
            "default": "var",
            "type": "string",
            "enum": ["var", "var_combination"]
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["rate", "burst", "key"],
        "type": "object"
      }
    },
    "tencent-cloud-cls": {
      "priority": 397,
      "version": 0.1,
      "metadata_schema": {
        "properties": { "log_format": { "type": "object" } },
        "type": "object"
      },
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "include_resp_body_expr": {
            "items": { "type": "array" },
            "type": "array",
            "minItems": 1
          },
          "include_resp_body": { "default": false, "type": "boolean" },
          "inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
          "cls_host": { "type": "string" },
          "cls_topic": { "type": "string" },
          "secret_id": { "type": "string" },
          "sample_ratio": {
            "minimum": 1e-5,
            "default": 1,
            "maximum": 1,
            "type": "number"
          },
          "global_tag": { "type": "object" },
          "batch_max_size": {
            "minimum": 1,
            "default": 1000,
            "type": "integer"
          },
          "max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
          "retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
          "buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "include_req_body": { "default": false, "type": "boolean" },
          "include_req_body_expr": {
            "items": { "type": "array" },
            "type": "array",
            "minItems": 1
          },
          "secret_key": { "type": "string" },
          "log_format": { "type": "object" },
          "name": { "type": "string", "default": "tencent-cloud-cls" }
        },
        "type": "object",
        "required": ["cls_host", "cls_topic", "secret_id", "secret_key"],
        "encrypt_fields": ["secret_key"]
      }
    },
    "http-logger": {
      "priority": 410,
      "version": 0.1,
      "metadata_schema": {
        "properties": { "log_format": { "type": "object" } },
        "type": "object"
      },
      "schema": {
        "properties": {
          "concat_method": {
            "default": "json",
            "enum": ["json", "new_line"],
            "type": "string"
          },
          "ssl_verify": { "default": false, "type": "boolean" },
          "include_resp_body": { "default": false, "type": "boolean" },
          "inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
          "include_req_body": { "default": false, "type": "boolean" },
          "timeout": { "minimum": 1, "default": 3, "type": "integer" },
          "include_req_body_expr": {
            "items": { "type": "array" },
            "type": "array",
            "minItems": 1
          },
          "name": { "type": "string", "default": "http logger" },
          "batch_max_size": {
            "minimum": 1,
            "default": 1000,
            "type": "integer"
          },
          "max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
          "retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
          "buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "uri": {
            "pattern": "^[^\\/]+:\\/\\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?",
            "type": "string"
          },
          "include_resp_body_expr": {
            "items": { "type": "array" },
            "type": "array",
            "minItems": 1
          },
          "log_format": { "type": "object" },
          "auth_header": { "type": "string" }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["uri"],
        "type": "object"
      }
    },
    "openwhisk": {
      "priority": -1901,
      "version": 0.1,
      "schema": {
        "properties": {
          "api_host": { "type": "string" },
          "service_token": { "type": "string" },
          "ssl_verify": { "default": true, "type": "boolean" },
          "keepalive_timeout": {
            "minimum": 1000,
            "default": 60000,
            "type": "integer"
          },
          "keepalive_pool": { "minimum": 1, "default": 5, "type": "integer" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "action": {
            "pattern": "\\A([\\w]|[\\w][\\w@ .-]*[\\w@.-]+)\\z",
            "maxLength": 256,
            "type": "string"
          },
          "keepalive": { "default": true, "type": "boolean" },
          "namespace": {
            "pattern": "\\A([\\w]|[\\w][\\w@ .-]*[\\w@.-]+)\\z",
            "maxLength": 256,
            "type": "string"
          },
          "result": { "default": true, "type": "boolean" },
          "package": {
            "pattern": "\\A([\\w]|[\\w][\\w@ .-]*[\\w@.-]+)\\z",
            "maxLength": 256,
            "type": "string"
          },
          "timeout": {
            "default": 3000,
            "maximum": 60000,
            "minimum": 1,
            "description": "timeout in milliseconds",
            "type": "integer"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["api_host", "service_token", "namespace", "action"],
        "type": "object"
      }
    },
    "key-auth": {
      "priority": 2500,
      "version": 0.1,
      "consumer_schema": {
        "properties": { "key": { "type": "string" } },
        "encrypt_fields": ["key"],
        "required": ["key"],
        "type": "object"
      },
      "schema": {
        "properties": {
          "query": { "default": "apikey", "type": "string" },
          "header": { "default": "apikey", "type": "string" },
          "hide_credentials": { "default": false, "type": "boolean" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      },
      "type": "auth"
    },
    "datadog": {
      "priority": 495,
      "version": 0.1,
      "metadata_schema": {
        "properties": {
          "constant_tags": {
            "items": { "type": "string" },
            "default": ["source:apisix"],
            "type": "array"
          },
          "port": { "minimum": 0, "default": 8125, "type": "integer" },
          "namespace": { "default": "apisix", "type": "string" },
          "host": { "default": "127.0.0.1", "type": "string" }
        },
        "type": "object"
      },
      "schema": {
        "properties": {
          "prefer_name": { "default": true, "type": "boolean" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "name": { "type": "string", "default": "datadog" },
          "batch_max_size": {
            "minimum": 1,
            "default": 1000,
            "type": "integer"
          },
          "max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
          "retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
          "buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
          "inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    },
    "ua-restriction": {
      "priority": 2999,
      "version": 0.1,
      "schema": {
        "properties": {
          "allowlist": {
            "items": { "minLength": 1, "type": "string" },
            "type": "array",
            "minItems": 1
          },
          "denylist": {
            "items": { "minLength": 1, "type": "string" },
            "type": "array",
            "minItems": 1
          },
          "message": {
            "default": "Not allowed",
            "minLength": 1,
            "maxLength": 1024,
            "type": "string"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "bypass_missing": { "default": false, "type": "boolean" }
        },
        "oneOf": [{ "required": ["allowlist"] }, { "required": ["denylist"] }],
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    },
    "ext-plugin-post-req": {
      "priority": -3000,
      "version": 0.1,
      "schema": {
        "properties": {
          "allow_degradation": { "default": false, "type": "boolean" },
          "conf": {
            "items": {
              "properties": {
                "name": { "minLength": 1, "maxLength": 128, "type": "string" },
                "value": { "type": "string" }
              },
              "required": ["name", "value"],
              "type": "object"
            },
            "minItems": 1,
            "type": "array"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    },
    "degraphql": {
      "priority": 509,
      "version": 0.1,
      "schema": {
        "properties": {
          "query": { "minLength": 1, "maxLength": 1024, "type": "string" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "variables": {
            "items": { "type": "string" },
            "minItems": 1,
            "type": "array"
          },
          "operation_name": {
            "minLength": 1,
            "maxLength": 1024,
            "type": "string"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["query"],
        "type": "object"
      }
    },
    "multi-auth": {
      "priority": 2600,
      "version": 0.1,
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "auth_plugins": { "minItems": 2, "type": "array" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          }
        },
        "title": "work with route or service object",
        "required": ["auth_plugins"],
        "type": "object"
      },
      "type": "auth"
    },
    "udp-logger": {
      "priority": 400,
      "version": 0.1,
      "schema": {
        "properties": {
          "port": { "minimum": 0, "type": "integer" },
          "name": { "type": "string", "default": "udp logger" },
          "batch_max_size": {
            "minimum": 1,
            "default": 1000,
            "type": "integer"
          },
          "max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
          "host": { "type": "string" },
          "buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
          "retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
          "log_format": { "type": "object" },
          "include_req_body": { "default": false, "type": "boolean" },
          "timeout": { "minimum": 1, "default": 3, "type": "integer" }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["host", "port"],
        "type": "object"
      },
      "metadata_schema": {
        "properties": { "log_format": { "type": "object" } },
        "type": "object"
      }
    },
    "traffic-split": {
      "priority": 966,
      "version": 0.1,
      "schema": {
        "properties": {
          "rules": {
            "items": {
              "properties": {
                "weighted_upstreams": {
                  "items": {
                    "properties": {
                      "upstream_id": {
                        "anyOf": [
                          {
                            "pattern": "^[a-zA-Z0-9-_.]+$",
                            "minLength": 1,
                            "maxLength": 64,
                            "type": "string"
                          },
                          { "minimum": 1, "type": "integer" }
                        ]
                      },
                      "upstream": {
                        "properties": {
                          "discovery_type": {
                            "description": "discovery type",
                            "type": "string"
                          },
                          "discovery_args": {
                            "properties": {
                              "namespace_id": {
                                "description": "namespace id",
                                "type": "string"
                              },
                              "group_name": {
                                "description": "group name",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "key": {
                            "description": "the key of chash for dynamic load balancing",
                            "type": "string"
                          },
                          "id": {
                            "anyOf": [
                              {
                                "pattern": "^[a-zA-Z0-9-_.]+$",
                                "minLength": 1,
                                "maxLength": 64,
                                "type": "string"
                              },
                              { "minimum": 1, "type": "integer" }
                            ]
                          },
                          "keepalive_pool": {
                            "properties": {
                              "idle_timeout": {
                                "minimum": 0,
                                "default": 60,
                                "type": "number"
                              },
                              "size": {
                                "minimum": 1,
                                "default": 320,
                                "type": "integer"
                              },
                              "requests": {
                                "minimum": 1,
                                "default": 1000,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "desc": { "maxLength": 256, "type": "string" },
                          "pass_host": {
                            "description": "mod of host passing",
                            "default": "pass",
                            "enum": ["pass", "node", "rewrite"],
                            "type": "string"
                          },
                          "labels": {
                            "description": "key/value pairs to specify attributes",
                            "patternProperties": {
                              ".*": {
                                "type": "string",
                                "description": "value of label",
                                "minLength": 1,
                                "maxLength": 256,
                                "pattern": "^\\S+$"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "algorithms of load balancing",
                            "default": "roundrobin",
                            "type": "string"
                          },
                          "retries": { "minimum": 0, "type": "integer" },
                          "retry_timeout": { "minimum": 0, "type": "number" },
                          "name": {
                            "minLength": 1,
                            "maxLength": 100,
                            "type": "string"
                          },
                          "scheme": {
                            "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp. For specific protocols, it can be kafka.",
                            "default": "http",
                            "enum": [
                              "grpc",
                              "grpcs",
                              "http",
                              "https",
                              "tcp",
                              "tls",
                              "udp",
                              "kafka"
                            ]
                          },
                          "update_time": { "type": "integer" },
                          "hash_on": {
                            "default": "vars",
                            "enum": [
                              "vars",
                              "header",
                              "cookie",
                              "consumer",
                              "vars_combinations"
                            ],
                            "type": "string"
                          },
                          "service_name": {
                            "minLength": 1,
                            "maxLength": 256,
                            "type": "string"
                          },
                          "tls": {
                            "properties": {
                              "client_cert": {
                                "minLength": 128,
                                "maxLength": 65536,
                                "type": "string"
                              },
                              "verify": {
                                "description": "Turn on server certificate verification, currently only kafka upstream is supported",
                                "default": false,
                                "type": "boolean"
                              },
                              "client_key": {
                                "minLength": 128,
                                "maxLength": 65536,
                                "type": "string"
                              },
                              "client_cert_id": {
                                "anyOf": [
                                  {
                                    "pattern": "^[a-zA-Z0-9-_.]+$",
                                    "minLength": 1,
                                    "maxLength": 64,
                                    "type": "string"
                                  },
                                  { "minimum": 1, "type": "integer" }
                                ]
                              }
                            },
                            "dependencies": {
                              "client_cert": { "required": ["client_key"] },
                              "client_key": { "required": ["client_cert"] },
                              "client_cert_id": {
                                "not": {
                                  "required": ["client_cert", "client_key"]
                                }
                              }
                            },
                            "type": "object"
                          },
                          "checks": {
                            "properties": {
                              "passive": {
                                "properties": {
                                  "healthy": {
                                    "properties": {
                                      "successes": {
                                        "minimum": 0,
                                        "default": 5,
                                        "maximum": 254,
                                        "type": "integer"
                                      },
                                      "http_statuses": {
                                        "items": {
                                          "minimum": 200,
                                          "maximum": 599,
                                          "type": "integer"
                                        },
                                        "minItems": 1,
                                        "default": [
                                          200, 201, 202, 203, 204, 205, 206,
                                          207, 208, 226, 300, 301, 302, 303,
                                          304, 305, 306, 307, 308
                                        ],
                                        "type": "array",
                                        "uniqueItems": true
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "unhealthy": {
                                    "properties": {
                                      "timeouts": {
                                        "minimum": 0,
                                        "default": 7,
                                        "maximum": 254,
                                        "type": "integer"
                                      },
                                      "http_failures": {
                                        "minimum": 0,
                                        "default": 5,
                                        "maximum": 254,
                                        "type": "integer"
                                      },
                                      "tcp_failures": {
                                        "minimum": 0,
                                        "default": 2,
                                        "maximum": 254,
                                        "type": "integer"
                                      },
                                      "http_statuses": {
                                        "items": {
                                          "minimum": 200,
                                          "maximum": 599,
                                          "type": "integer"
                                        },
                                        "minItems": 1,
                                        "default": [429, 500, 503],
                                        "type": "array",
                                        "uniqueItems": true
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "default": "http",
                                    "type": "string",
                                    "enum": ["http", "https", "tcp"]
                                  }
                                },
                                "type": "object"
                              },
                              "active": {
                                "properties": {
                                  "healthy": {
                                    "properties": {
                                      "interval": {
                                        "minimum": 1,
                                        "default": 1,
                                        "type": "integer"
                                      },
                                      "successes": {
                                        "minimum": 1,
                                        "default": 2,
                                        "maximum": 254,
                                        "type": "integer"
                                      },
                                      "http_statuses": {
                                        "items": {
                                          "minimum": 200,
                                          "maximum": 599,
                                          "type": "integer"
                                        },
                                        "minItems": 1,
                                        "default": [200, 302],
                                        "type": "array",
                                        "uniqueItems": true
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "port": {
                                    "minimum": 1,
                                    "maximum": 65535,
                                    "type": "integer"
                                  },
                                  "req_headers": {
                                    "items": {
                                      "uniqueItems": true,
                                      "type": "string"
                                    },
                                    "type": "array",
                                    "minItems": 1
                                  },
                                  "host": {
                                    "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                                    "type": "string"
                                  },
                                  "unhealthy": {
                                    "properties": {
                                      "http_failures": {
                                        "minimum": 1,
                                        "default": 5,
                                        "maximum": 254,
                                        "type": "integer"
                                      },
                                      "tcp_failures": {
                                        "minimum": 1,
                                        "default": 2,
                                        "maximum": 254,
                                        "type": "integer"
                                      },
                                      "timeouts": {
                                        "minimum": 1,
                                        "default": 3,
                                        "maximum": 254,
                                        "type": "integer"
                                      },
                                      "interval": {
                                        "minimum": 1,
                                        "default": 1,
                                        "type": "integer"
                                      },
                                      "http_statuses": {
                                        "items": {
                                          "minimum": 200,
                                          "maximum": 599,
                                          "type": "integer"
                                        },
                                        "minItems": 1,
                                        "default": [
                                          429, 404, 500, 501, 502, 503, 504, 505
                                        ],
                                        "type": "array",
                                        "uniqueItems": true
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "default": "http",
                                    "type": "string",
                                    "enum": ["http", "https", "tcp"]
                                  },
                                  "timeout": { "default": 1, "type": "number" },
                                  "concurrency": {
                                    "default": 10,
                                    "type": "integer"
                                  },
                                  "http_path": {
                                    "default": "/",
                                    "type": "string"
                                  },
                                  "https_verify_certificate": {
                                    "default": true,
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "anyOf": [
                              { "required": ["active"] },
                              { "required": ["active", "passive"] }
                            ],
                            "additionalProperties": false,
                            "type": "object"
                          },
                          "upstream_host": {
                            "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                            "type": "string"
                          },
                          "nodes": {
                            "anyOf": [
                              {
                                "patternProperties": {
                                  ".*": {
                                    "description": "weight of node",
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "items": {
                                  "properties": {
                                    "priority": {
                                      "description": "priority of node",
                                      "default": 0,
                                      "type": "integer"
                                    },
                                    "port": {
                                      "description": "port of node",
                                      "minimum": 1,
                                      "type": "integer"
                                    },
                                    "weight": {
                                      "description": "weight of node",
                                      "minimum": 0,
                                      "type": "integer"
                                    },
                                    "metadata": {
                                      "description": "metadata of node",
                                      "type": "object"
                                    },
                                    "host": {
                                      "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                                      "type": "string"
                                    }
                                  },
                                  "required": ["host", "weight"],
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            ]
                          },
                          "timeout": {
                            "properties": {
                              "send": {
                                "exclusiveMinimum": 0,
                                "type": "number"
                              },
                              "read": {
                                "exclusiveMinimum": 0,
                                "type": "number"
                              },
                              "connect": {
                                "exclusiveMinimum": 0,
                                "type": "number"
                              }
                            },
                            "required": ["connect", "send", "read"],
                            "type": "object"
                          },
                          "create_time": { "type": "integer" }
                        },
                        "oneOf": [
                          { "required": ["nodes"] },
                          { "required": ["service_name", "discovery_type"] }
                        ],
                        "additionalProperties": false,
                        "type": "object"
                      },
                      "weight": {
                        "description": "used to split traffic between differentupstreams for plugin configuration",
                        "default": 1,
                        "minimum": 0,
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "minItems": 1,
                  "default": [{ "weight": 1 }],
                  "maxItems": 20,
                  "type": "array"
                },
                "match": {
                  "items": {
                    "properties": { "vars": { "type": "array" } },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    },
    "openfunction": {
      "priority": -1902,
      "version": 0.1,
      "schema": {
        "properties": {
          "keepalive_pool": { "minimum": 1, "default": 5, "type": "integer" },
          "authorization": { "service_token": { "type": "string" } },
          "ssl_verify": { "default": true, "type": "boolean" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "keepalive_timeout": {
            "minimum": 1000,
            "default": 60000,
            "type": "integer"
          },
          "keepalive": { "default": true, "type": "boolean" },
          "function_uri": { "type": "string" },
          "timeout": { "minimum": 100, "default": 3000, "type": "integer" }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["function_uri"],
        "type": "object"
      }
    },
    "loggly": {
      "priority": 411,
      "version": 0.1,
      "metadata_schema": {
        "properties": {
          "protocol": {
            "default": "syslog",
            "enum": ["syslog", "http", "https"],
            "type": "string"
          },
          "port": { "default": 514, "type": "integer" },
          "host": { "default": "logs-01.loggly.com", "type": "string" },
          "log_format": { "type": "object" },
          "timeout": { "minimum": 1, "default": 5000, "type": "integer" }
        },
        "type": "object"
      },
      "schema": {
        "properties": {
          "include_resp_body_expr": {
            "items": { "type": "array" },
            "type": "array",
            "minItems": 1
          },
          "tags": {
            "default": ["apisix"],
            "items": { "pattern": "^(?!tag=)[ -~]*", "type": "string" },
            "type": "array",
            "minItems": 1
          },
          "ssl_verify": { "default": true, "type": "boolean" },
          "include_resp_body": { "default": false, "type": "boolean" },
          "inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
          "customer_token": { "type": "string" },
          "severity_map": {
            "description": "upstream response code vs syslog severity mapping",
            "additionalProperties": false,
            "patternProperties": {
              "^[1-5][0-9]{2}$": {
                "description": "keys are HTTP status code, values are severity",
                "enum": [
                  "DEBUG",
                  "debug",
                  "NOTICE",
                  "notice",
                  "EMEGR",
                  "emegr",
                  "WARNING",
                  "warning",
                  "INFO",
                  "info",
                  "ALERT",
                  "alert",
                  "CRIT",
                  "crit",
                  "ERR",
                  "err"
                ],
                "type": "string"
              }
            },
            "type": "object"
          },
          "include_req_body_expr": {
            "items": { "type": "array" },
            "type": "array",
            "minItems": 1
          },
          "name": { "type": "string", "default": "loggly" },
          "batch_max_size": {
            "minimum": 1,
            "default": 1000,
            "type": "integer"
          },
          "max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
          "retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
          "severity": {
            "description": "base severity log level",
            "default": "INFO",
            "enum": [
              "DEBUG",
              "debug",
              "NOTICE",
              "notice",
              "EMEGR",
              "emegr",
              "WARNING",
              "warning",
              "INFO",
              "info",
              "ALERT",
              "alert",
              "CRIT",
              "crit",
              "ERR",
              "err"
            ],
            "type": "string"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "include_req_body": { "default": false, "type": "boolean" },
          "log_format": { "type": "object" },
          "buffer_duration": { "minimum": 1, "default": 60, "type": "integer" }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["customer_token"],
        "type": "object"
      }
    },
    "real-ip": {
      "priority": 23000,
      "version": 0.1,
      "schema": {
        "properties": {
          "source": { "minLength": 1, "type": "string" },
          "recursive": { "default": false, "type": "boolean" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "trusted_addresses": {
            "items": {
              "anyOf": [
                { "title": "IPv4", "format": "ipv4", "type": "string" },
                {
                  "title": "IPv4/CIDR",
                  "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
                  "type": "string"
                },
                { "title": "IPv6", "format": "ipv6", "type": "string" },
                {
                  "title": "IPv6/CIDR",
                  "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
                  "type": "string"
                }
              ]
            },
            "minItems": 1,
            "type": "array"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["source"],
        "type": "object"
      }
    },
    "zipkin": {
      "priority": 12011,
      "version": 0.1,
      "schema": {
        "properties": {
          "server_addr": {
            "description": "default is $server_addr, you can specify your external ip address",
            "pattern": "^[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}$",
            "type": "string"
          },
          "service_name": {
            "description": "service name for zipkin reporter",
            "default": "APISIX",
            "type": "string"
          },
          "endpoint": { "type": "string" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "sample_ratio": { "minimum": 1e-5, "maximum": 1, "type": "number" },
          "span_version": { "default": 2, "enum": [1, 2] }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["endpoint", "sample_ratio"],
        "type": "object"
      }
    },
    "tcp-logger": {
      "priority": 405,
      "version": 0.1,
      "schema": {
        "properties": {
          "tls_options": { "type": "string" },
          "port": { "minimum": 0, "type": "integer" },
          "name": { "type": "string", "default": "tcp logger" },
          "batch_max_size": {
            "minimum": 1,
            "default": 1000,
            "type": "integer"
          },
          "max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
          "host": { "type": "string" },
          "buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "tls": { "default": false, "type": "boolean" },
          "inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
          "retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
          "log_format": { "type": "object" },
          "include_req_body": { "default": false, "type": "boolean" },
          "timeout": { "minimum": 1, "default": 1000, "type": "integer" }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["host", "port"],
        "type": "object"
      },
      "metadata_schema": {
        "properties": { "log_format": { "type": "object" } },
        "type": "object"
      }
    },
    "kafka-logger": {
      "priority": 403,
      "version": 0.1,
      "metadata_schema": {
        "properties": { "log_format": { "type": "object" } },
        "type": "object"
      },
      "schema": {
        "properties": {
          "include_resp_body_expr": {
            "items": { "type": "array" },
            "type": "array",
            "minItems": 1
          },
          "include_resp_body": { "default": false, "type": "boolean" },
          "inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
          "key": { "type": "string" },
          "kafka_topic": { "type": "string" },
          "producer_type": {
            "default": "async",
            "enum": ["async", "sync"],
            "type": "string"
          },
          "required_acks": { "default": 1, "enum": [1, -1], "type": "integer" },
          "cluster_name": { "minimum": 1, "default": 1, "type": "integer" },
          "producer_batch_num": {
            "minimum": 1,
            "default": 200,
            "type": "integer"
          },
          "producer_batch_size": {
            "minimum": 0,
            "default": 1048576,
            "type": "integer"
          },
          "timeout": { "minimum": 1, "default": 3, "type": "integer" },
          "include_req_body_expr": {
            "items": { "type": "array" },
            "type": "array",
            "minItems": 1
          },
          "meta_refresh_interval": {
            "minimum": 1,
            "default": 30,
            "type": "integer"
          },
          "name": { "type": "string", "default": "kafka logger" },
          "broker_list": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "description": "the port of kafka broker",
                "minimum": 1,
                "maximum": 65535,
                "type": "integer"
              }
            },
            "minProperties": 1
          },
          "max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
          "retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
          "brokers": {
            "uniqueItems": true,
            "items": {
              "properties": {
                "port": {
                  "minimum": 1,
                  "description": "the port of kafka broker",
                  "maximum": 65535,
                  "type": "integer"
                },
                "sasl_config": {
                  "description": "sasl config",
                  "properties": {
                    "password": { "description": "password", "type": "string" },
                    "mechanism": {
                      "default": "PLAIN",
                      "enum": ["PLAIN"],
                      "type": "string"
                    },
                    "user": { "description": "user", "type": "string" }
                  },
                  "required": ["user", "password"],
                  "type": "object"
                },
                "host": {
                  "description": "the host of kafka broker",
                  "type": "string"
                }
              },
              "required": ["host", "port"],
              "type": "object"
            },
            "type": "array",
            "minItems": 1
          },
          "batch_max_size": {
            "minimum": 1,
            "default": 1000,
            "type": "integer"
          },
          "buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "producer_time_linger": {
            "minimum": 1,
            "default": 1,
            "type": "integer"
          },
          "producer_max_buffering": {
            "minimum": 1,
            "default": 50000,
            "type": "integer"
          },
          "meta_format": {
            "default": "default",
            "enum": ["default", "origin"],
            "type": "string"
          },
          "log_format": { "type": "object" },
          "include_req_body": { "default": false, "type": "boolean" }
        },
        "oneOf": [
          { "required": ["broker_list", "kafka_topic"] },
          { "required": ["brokers", "kafka_topic"] }
        ],
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    },
    "proxy-mirror": {
      "priority": 1010,
      "version": 0.1,
      "schema": {
        "properties": {
          "sample_ratio": {
            "minimum": 1e-5,
            "default": 1,
            "maximum": 1,
            "type": "number"
          },
          "path_concat_mode": {
            "description": "the concatenation mode for custom path",
            "default": "replace",
            "enum": ["replace", "prefix"],
            "type": "string"
          },
          "host": {
            "pattern": "^(http(s)?|grpc(s)?):\\/\\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?$",
            "type": "string"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "path": { "pattern": "^/[^?&]+$", "type": "string" }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["host"],
        "type": "object"
      }
    },
    "fault-injection": {
      "priority": 11000,
      "version": 0.1,
      "schema": {
        "properties": {
          "delay": {
            "properties": {
              "vars": {
                "items": { "type": "array" },
                "maxItems": 20,
                "type": "array"
              },
              "duration": { "minimum": 0, "type": "number" },
              "percentage": { "minimum": 0, "maximum": 100, "type": "integer" }
            },
            "required": ["duration"],
            "type": "object"
          },
          "abort": {
            "properties": {
              "vars": {
                "items": { "type": "array" },
                "maxItems": 20,
                "type": "array"
              },
              "headers": {
                "type": "object",
                "patternProperties": {
                  "^[^:]+$": {
                    "oneOf": [{ "type": "string" }, { "type": "number" }]
                  }
                },
                "minProperties": 1
              },
              "http_status": { "minimum": 200, "type": "integer" },
              "body": { "minLength": 0, "type": "string" },
              "percentage": { "minimum": 0, "maximum": 100, "type": "integer" }
            },
            "required": ["http_status"],
            "type": "object"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "minProperties": 1,
        "type": "object"
      }
    },
    "limit-conn": {
      "priority": 1003,
      "version": 0.1,
      "schema": {
        "properties": {
          "burst": { "minimum": 0, "type": "integer" },
          "conn": { "exclusiveMinimum": 0, "type": "integer" },
          "allow_degradation": { "default": false, "type": "boolean" },
          "key": { "type": "string" },
          "default_conn_delay": { "exclusiveMinimum": 0, "type": "number" },
          "only_use_default_delay": { "default": false, "type": "boolean" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "rejected_code": {
            "minimum": 200,
            "default": 503,
            "maximum": 599,
            "type": "integer"
          },
          "rejected_msg": { "minLength": 1, "type": "string" },
          "key_type": {
            "default": "var",
            "type": "string",
            "enum": ["var", "var_combination"]
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["conn", "burst", "default_conn_delay", "key"],
        "type": "object"
      }
    },
    "wolf-rbac": {
      "priority": 2555,
      "version": 0.1,
      "schema": {
        "properties": {
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "header_prefix": { "default": "X-", "type": "string" },
          "appid": { "default": "unset", "type": "string" },
          "server": { "default": "http://127.0.0.1:12180", "type": "string" }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      },
      "type": "auth"
    },
    "api-breaker": {
      "priority": 1005,
      "version": 0.1,
      "schema": {
        "properties": {
          "break_response_body": { "type": "string" },
          "break_response_headers": {
            "items": {
              "properties": {
                "value": { "minLength": 1, "type": "string" },
                "key": { "minLength": 1, "type": "string" }
              },
              "required": ["key", "value"],
              "type": "object"
            },
            "type": "array"
          },
          "max_breaker_sec": {
            "minimum": 3,
            "default": 300,
            "type": "integer"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "unhealthy": {
            "properties": {
              "failures": { "minimum": 1, "default": 3, "type": "integer" },
              "http_statuses": {
                "items": { "minimum": 500, "maximum": 599, "type": "integer" },
                "minItems": 1,
                "default": [500],
                "type": "array",
                "uniqueItems": true
              }
            },
            "default": { "failures": 3, "http_statuses": [500] },
            "type": "object"
          },
          "healthy": {
            "properties": {
              "successes": { "minimum": 1, "default": 3, "type": "integer" },
              "http_statuses": {
                "items": { "minimum": 200, "maximum": 499, "type": "integer" },
                "minItems": 1,
                "default": [200],
                "type": "array",
                "uniqueItems": true
              }
            },
            "default": { "successes": 3, "http_statuses": [200] },
            "type": "object"
          },
          "break_response_code": {
            "minimum": 200,
            "maximum": 599,
            "type": "integer"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["break_response_code"],
        "type": "object"
      }
    },
    "openid-connect": {
      "priority": 2599,
      "version": 0.2,
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "accept_none_alg": {
            "description": "Set to true if the OpenID provider does not sign its ID token.",
            "default": false,
            "type": "boolean"
          },
          "ssl_verify": { "default": false, "type": "boolean" },
          "accept_unsupported_alg": {
            "description": "Ignore ID token signature to accept unsupported signature algorithm.",
            "default": true,
            "type": "boolean"
          },
          "access_token_expires_leeway": {
            "description": "Expiration leeway in seconds for access token renewal.",
            "default": 0,
            "type": "integer"
          },
          "force_reauthorize": {
            "description": "Whether to execute the authorization flow when a token has been cached.",
            "default": false,
            "type": "boolean"
          },
          "redirect_uri": {
            "description": "auto append '.apisix/redirect' to ngx.var.uri if not configured",
            "type": "string"
          },
          "discovery": { "type": "string" },
          "introspection_endpoint_auth_method": {
            "default": "client_secret_basic",
            "type": "string"
          },
          "token_endpoint_auth_method": {
            "default": "client_secret_basic",
            "type": "string"
          },
          "bearer_only": { "default": false, "type": "boolean" },
          "timeout": {
            "minimum": 1,
            "default": 3,
            "description": "timeout in seconds",
            "type": "integer"
          },
          "realm": { "default": "apisix", "type": "string" },
          "logout_path": { "default": "/logout", "type": "string" },
          "post_logout_redirect_uri": {
            "description": "the URI will be redirect when request logout_path",
            "type": "string"
          },
          "unauth_action": {
            "description": "The action performed when client is not authorized. Use auth to redirect user to identity provider, deny to respond with 401 Unauthorized, and pass to allow the request regardless.",
            "default": "auth",
            "enum": ["auth", "deny", "pass"],
            "type": "string"
          },
          "required_scopes": {
            "description": "List of scopes that are required to be granted to the access token",
            "items": { "type": "string" },
            "type": "array"
          },
          "public_key": { "type": "string" },
          "token_signing_alg_values_expected": { "type": "string" },
          "use_pkce": {
            "description": "when set to true the PKEC(Proof Key for Code Exchange) will be used.",
            "default": false,
            "type": "boolean"
          },
          "set_access_token_header": {
            "description": "Whether the access token should be added as a header to the request for downstream",
            "default": true,
            "type": "boolean"
          },
          "access_token_in_authorization_header": {
            "description": "Whether the access token should be added in the Authorization header as opposed to the X-Access-Token header.",
            "default": false,
            "type": "boolean"
          },
          "set_id_token_header": {
            "description": "Whether the ID token should be added in the X-ID-Token header to the request for downstream.",
            "default": true,
            "type": "boolean"
          },
          "session": {
            "properties": {
              "secret": {
                "description": "the key used for the encrypt and HMAC calculation",
                "minLength": 16,
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": ["secret"],
            "type": "object"
          },
          "set_userinfo_header": {
            "description": "Whether the user info token should be added in the X-Userinfo header to the request for downstream.",
            "default": true,
            "type": "boolean"
          },
          "client_secret": { "type": "string" },
          "set_refresh_token_header": {
            "description": "Whether the refresh token should be added in the X-Refresh-Token header to the request for downstream.",
            "default": false,
            "type": "boolean"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "introspection_expiry_claim": {
            "description": "Name of the expiry claim that controls the cached access token TTL.",
            "type": "string"
          },
          "introspection_interval": {
            "description": "TTL of the cached and introspected access token in seconds.",
            "default": 0,
            "type": "integer"
          },
          "cache_segment": {
            "description": "Name of a cache segment to differentiate caches.",
            "type": "string"
          },
          "jwt_verification_cache_ignore": {
            "description": "Whether to ignore cached verification and re-verify.",
            "default": false,
            "type": "boolean"
          },
          "authorization_params": {
            "description": "Extra authorization params to the authorize endpoint",
            "type": "object"
          },
          "jwk_expires_in": {
            "description": "Expiration time for JWK cache in seconds.",
            "default": 86400,
            "type": "integer"
          },
          "client_rsa_private_key": {
            "description": "Client RSA private key used to sign JWT.",
            "type": "string"
          },
          "revoke_tokens_on_logout": {
            "description": "Notify authorization server a previous token is no longer needed.",
            "default": false,
            "type": "boolean"
          },
          "client_rsa_private_key_id": {
            "description": "Client RSA private key ID used to compute a signed JWT.",
            "type": "string"
          },
          "use_nonce": {
            "description": "Whether to include nonce parameter in authorization request.",
            "default": false,
            "type": "boolean"
          },
          "client_jwt_assertion_expires_in": {
            "description": "Life duration of the signed JWT in seconds.",
            "default": 60,
            "type": "integer"
          },
          "iat_slack": {
            "description": "Tolerance of clock skew in seconds with the iat claim in an ID token.",
            "default": 120,
            "type": "integer"
          },
          "renew_access_token_on_expiry": {
            "description": "Whether to attempt silently renewing the access token.",
            "default": true,
            "type": "boolean"
          },
          "client_id": { "type": "string" },
          "access_token_expires_in": {
            "description": "Lifetime of the access token in seconds if expires_in is not present.",
            "type": "integer"
          },
          "proxy_opts": {
            "description": "HTTP proxy server be used to access identity server.",
            "properties": {
              "http_proxy": {
                "description": "HTTP proxy like: http://proxy-server:80.",
                "type": "string"
              },
              "https_proxy": {
                "description": "HTTPS proxy like: http://proxy-server:80.",
                "type": "string"
              },
              "no_proxy": {
                "description": "Comma separated list of hosts that should not be proxied.",
                "type": "string"
              },
              "https_proxy_authorization": {
                "description": "Basic [base64 username:password].",
                "type": "string"
              },
              "http_proxy_authorization": {
                "description": "Basic [base64 username:password].",
                "type": "string"
              }
            },
            "type": "object"
          },
          "refresh_session_interval": {
            "description": "Time interval to refresh user ID token without re-authentication.",
            "type": "integer"
          },
          "introspection_endpoint": { "type": "string" },
          "scope": { "default": "openid", "type": "string" }
        },
        "type": "object",
        "required": ["client_id", "client_secret", "discovery"],
        "encrypt_fields": ["client_secret"]
      }
    },
    "response-rewrite": {
      "priority": 899,
      "version": 0.1,
      "schema": {
        "properties": {
          "vars": { "type": "array" },
          "status_code": {
            "description": "new status code for response",
            "minimum": 200,
            "maximum": 598,
            "type": "integer"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "filters": {
            "description": "a group of filters that modify response bodyby replacing one specified string by another",
            "items": {
              "description": "filter that modifies response body",
              "properties": {
                "regex": {
                  "description": "match pattern on response body",
                  "minLength": 1,
                  "type": "string"
                },
                "replace": {
                  "description": "regex substitution content",
                  "type": "string"
                },
                "options": {
                  "description": "regex options",
                  "default": "jo",
                  "type": "string"
                },
                "scope": {
                  "description": "regex substitution range",
                  "default": "once",
                  "enum": ["once", "global"],
                  "type": "string"
                }
              },
              "required": ["regex", "replace"],
              "type": "object"
            },
            "minItems": 1,
            "type": "array"
          },
          "headers": {
            "description": "new headers for response",
            "anyOf": [
              {
                "type": "object",
                "patternProperties": {
                  "^[^:]+$": {
                    "oneOf": [{ "type": "string" }, { "type": "number" }]
                  }
                },
                "minProperties": 1
              },
              {
                "properties": {
                  "add": {
                    "items": {
                      "pattern": "^[^:]+:[^:]*[^/]$",
                      "type": "string"
                    },
                    "type": "array",
                    "minItems": 1
                  },
                  "set": {
                    "type": "object",
                    "patternProperties": {
                      "^[^:]+$": {
                        "oneOf": [{ "type": "string" }, { "type": "number" }]
                      }
                    },
                    "minProperties": 1
                  },
                  "remove": {
                    "items": { "pattern": "^[^:]+$", "type": "string" },
                    "type": "array",
                    "minItems": 1
                  }
                }
              }
            ]
          },
          "body": { "description": "new body for response", "type": "string" },
          "body_base64": {
            "description": "whether new body for response need base64 decode before return",
            "default": false,
            "type": "boolean"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "dependencies": {
          "body": { "not": { "required": ["filters"] } },
          "filters": { "not": { "required": ["body"] } }
        },
        "type": "object"
      }
    },
    "uri-blocker": {
      "priority": 2900,
      "version": 0.1,
      "schema": {
        "properties": {
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "block_rules": {
            "items": { "minLength": 1, "maxLength": 4096, "type": "string" },
            "uniqueItems": true,
            "type": "array"
          },
          "rejected_code": {
            "minimum": 200,
            "default": 403,
            "type": "integer"
          },
          "rejected_msg": { "minLength": 1, "type": "string" },
          "case_insensitive": { "default": false, "type": "boolean" }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["block_rules"],
        "type": "object"
      }
    },
    "request-validation": {
      "priority": 2800,
      "version": 0.1,
      "schema": {
        "properties": {
          "header_schema": { "type": "object" },
          "body_schema": { "type": "object" },
          "rejected_code": {
            "minimum": 200,
            "default": 400,
            "maximum": 599,
            "type": "integer"
          },
          "rejected_msg": {
            "minLength": 1,
            "maxLength": 256,
            "type": "string"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          }
        },
        "anyOf": [
          { "required": ["header_schema"] },
          { "required": ["body_schema"] }
        ],
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      },
      "type": "validation"
    },
    "grpc-web": {
      "priority": 505,
      "version": 0.1,
      "schema": {
        "properties": {
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    },
    "azure-functions": {
      "priority": -1900,
      "version": 0.1,
      "metadata_schema": {
        "properties": {
          "master_apikey": { "default": "", "type": "string" },
          "master_clientid": { "default": "", "type": "string" }
        },
        "type": "object"
      },
      "schema": {
        "properties": {
          "keepalive_pool": { "minimum": 1, "default": 5, "type": "integer" },
          "authorization": {
            "properties": {
              "clientid": { "type": "string" },
              "apikey": { "type": "string" }
            },
            "type": "object"
          },
          "ssl_verify": { "default": true, "type": "boolean" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "keepalive_timeout": {
            "minimum": 1000,
            "default": 60000,
            "type": "integer"
          },
          "keepalive": { "default": true, "type": "boolean" },
          "function_uri": { "type": "string" },
          "timeout": { "minimum": 100, "default": 3000, "type": "integer" }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["function_uri"],
        "type": "object"
      }
    },
    "fsc": {
      "priority": 1,
      "version": 0.1,
      "metadata_schema": {},
      "schema": {
        "properties": {
          "internal_key": { "type": "string" },
          "tx_log_url": { "type": "string" },
          "registration": {
            "properties": {
              "inway_name": { "type": "string" },
              "controller_uri": { "type": "string" },
              "inway_address": { "type": "string" }
            },
            "required": ["controller_uri", "inway_address", "inway_name"],
            "type": "object"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "manager_public_key": { "type": "string" },
          "fsc_group_id": { "type": "string" },
          "internal_cert_chain": { "type": "string" }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": [
          "manager_public_key",
          "fsc_group_id",
          "internal_cert_chain",
          "internal_key",
          "registration"
        ],
        "type": "object"
      }
    },
    "google-cloud-logging": {
      "priority": 407,
      "version": 0.1,
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "name": { "type": "string", "default": "google-cloud-logging" },
          "batch_max_size": {
            "minimum": 1,
            "default": 1000,
            "type": "integer"
          },
          "max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
          "retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
          "buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
          "log_format": { "type": "object" },
          "inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "auth_file": { "type": "string" },
          "log_id": { "default": "apisix.apache.org%2Flogs", "type": "string" },
          "resource": {
            "properties": {
              "labels": { "type": "object" },
              "type": { "type": "string" }
            },
            "default": { "type": "global" },
            "required": ["type"],
            "type": "object"
          },
          "auth_config": {
            "properties": {
              "private_key": { "type": "string" },
              "project_id": { "type": "string" },
              "token_uri": {
                "default": "https://oauth2.googleapis.com/token",
                "type": "string"
              },
              "entries_uri": {
                "default": "https://logging.googleapis.com/v2/entries:write",
                "type": "string"
              },
              "scopes": {
                "items": {
                  "description": "Google OAuth2 Authorization Scopes",
                  "type": "string"
                },
                "minItems": 1,
                "default": [
                  "https://www.googleapis.com/auth/logging.read",
                  "https://www.googleapis.com/auth/logging.write",
                  "https://www.googleapis.com/auth/logging.admin",
                  "https://www.googleapis.com/auth/cloud-platform"
                ],
                "type": "array",
                "uniqueItems": true
              },
              "client_email": { "type": "string" }
            },
            "required": [
              "client_email",
              "private_key",
              "project_id",
              "token_uri"
            ],
            "type": "object"
          },
          "ssl_verify": { "default": true, "type": "boolean" }
        },
        "oneOf": [
          { "required": ["auth_config"] },
          { "required": ["auth_file"] }
        ],
        "type": "object",
        "encrypt_fields": ["auth_config.private_key"]
      },
      "metadata_schema": {
        "properties": { "log_format": { "type": "object" } },
        "type": "object"
      }
    },
    "serverless-pre-function": {
      "priority": 10000,
      "version": 0.1,
      "schema": {
        "properties": {
          "phase": {
            "default": "access",
            "enum": [
              "rewrite",
              "access",
              "header_filter",
              "body_filter",
              "log",
              "before_proxy"
            ],
            "type": "string"
          },
          "functions": {
            "items": { "type": "string" },
            "minItems": 1,
            "type": "array"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["functions"],
        "type": "object"
      }
    },
    "server-info": {
      "priority": 990,
      "version": 0.1,
      "schema": {
        "properties": {
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      },
      "scope": "global"
    },
    "kafka-proxy": {
      "priority": 508,
      "version": 0.1,
      "schema": {
        "properties": {
          "sasl": {
            "properties": {
              "username": { "type": "string" },
              "password": { "type": "string" }
            },
            "required": ["username", "password"],
            "type": "object"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "encrypt_fields": ["sasl.password"],
        "type": "object"
      }
    },
    "elasticsearch-logger": {
      "priority": 413,
      "version": 0.1,
      "metadata_schema": {
        "properties": { "log_format": { "type": "object" } },
        "type": "object"
      },
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "name": { "type": "string", "default": "elasticsearch-logger" },
          "batch_max_size": {
            "minimum": 1,
            "default": 1000,
            "type": "integer"
          },
          "endpoint_addrs": {
            "items": { "pattern": "[^/]$", "type": "string" },
            "type": "array",
            "minItems": 1
          },
          "retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
          "buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
          "max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
          "endpoint_addr": { "pattern": "[^/]$", "type": "string" },
          "inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "ssl_verify": { "default": true, "type": "boolean" },
          "field": {
            "properties": {
              "type": { "type": "string" },
              "index": { "type": "string" }
            },
            "required": ["index"],
            "type": "object"
          },
          "auth": {
            "properties": {
              "username": { "minLength": 1, "type": "string" },
              "password": { "minLength": 1, "type": "string" }
            },
            "required": ["username", "password"],
            "type": "object"
          },
          "log_format": { "type": "object" },
          "timeout": { "minimum": 1, "default": 10, "type": "integer" }
        },
        "oneOf": [
          { "required": ["endpoint_addr", "field"] },
          { "required": ["endpoint_addrs", "field"] }
        ],
        "type": "object",
        "encrypt_fields": ["auth.password"]
      }
    },
    "gzip": {
      "priority": 995,
      "version": 0.1,
      "schema": {
        "properties": {
          "min_length": { "minimum": 1, "default": 20, "type": "integer" },
          "comp_level": {
            "minimum": 1,
            "default": 1,
            "maximum": 9,
            "type": "integer"
          },
          "http_version": { "default": 1.1, "enum": [1.1, 1] },
          "types": {
            "default": ["text/html"],
            "anyOf": [
              {
                "items": { "minLength": 1, "type": "string" },
                "type": "array",
                "minItems": 1
              },
              { "enum": ["*"] }
            ]
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "vary": { "type": "boolean" },
          "buffers": {
            "properties": {
              "number": { "minimum": 1, "default": 32, "type": "integer" },
              "size": { "minimum": 1, "default": 4096, "type": "integer" }
            },
            "default": { "number": 32, "size": 4096 },
            "type": "object"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    },
    "authz-keycloak": {
      "priority": 2000,
      "version": 0.1,
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "allOf": [
          {
            "anyOf": [
              { "required": ["discovery"] },
              { "required": ["token_endpoint"] }
            ]
          },
          {
            "anyOf": [
              { "properties": { "lazy_load_paths": { "enum": [false] } } },
              {
                "properties": { "lazy_load_paths": { "enum": [true] } },
                "anyOf": [
                  { "required": ["discovery"] },
                  { "required": ["resource_registration_endpoint"] }
                ]
              }
            ]
          }
        ],
        "properties": {
          "lazy_load_paths": { "default": false, "type": "boolean" },
          "http_method_as_scope": { "default": false, "type": "boolean" },
          "ssl_verify": { "default": true, "type": "boolean" },
          "access_denied_redirect_uri": {
            "minLength": 1,
            "maxLength": 2048,
            "type": "string"
          },
          "refresh_token_expires_in": {
            "minimum": 1,
            "default": 3600,
            "type": "integer"
          },
          "access_token_expires_leeway": {
            "minimum": 0,
            "default": 0,
            "type": "integer"
          },
          "password_grant_token_generation_incoming_uri": {
            "minLength": 1,
            "maxLength": 4096,
            "type": "string"
          },
          "keepalive_pool": { "minimum": 1, "default": 5, "type": "integer" },
          "client_secret": {
            "minLength": 1,
            "maxLength": 100,
            "type": "string"
          },
          "discovery": { "minLength": 1, "maxLength": 4096, "type": "string" },
          "keepalive": { "default": true, "type": "boolean" },
          "timeout": { "minimum": 1000, "default": 3000, "type": "integer" },
          "keepalive_timeout": {
            "minimum": 1000,
            "default": 60000,
            "type": "integer"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "refresh_token_expires_leeway": {
            "minimum": 0,
            "default": 0,
            "type": "integer"
          },
          "token_endpoint": {
            "minLength": 1,
            "maxLength": 4096,
            "type": "string"
          },
          "cache_ttl_seconds": {
            "minimum": 1,
            "default": 86400,
            "type": "integer"
          },
          "client_id": { "minLength": 1, "maxLength": 100, "type": "string" },
          "access_token_expires_in": {
            "minimum": 1,
            "default": 300,
            "type": "integer"
          },
          "policy_enforcement_mode": {
            "default": "ENFORCING",
            "type": "string",
            "enum": ["ENFORCING", "PERMISSIVE"]
          },
          "grant_type": {
            "default": "urn:ietf:params:oauth:grant-type:uma-ticket",
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "enum": ["urn:ietf:params:oauth:grant-type:uma-ticket"]
          },
          "resource_registration_endpoint": {
            "minLength": 1,
            "maxLength": 4096,
            "type": "string"
          },
          "permissions": {
            "default": {},
            "items": { "minLength": 1, "maxLength": 100, "type": "string" },
            "uniqueItems": true,
            "type": "array"
          }
        },
        "type": "object",
        "required": ["client_id"],
        "encrypt_fields": ["client_secret"]
      }
    },
    "body-transformer": {
      "priority": 1080,
      "version": 0.1,
      "schema": {
        "properties": {
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "response": {
            "properties": {
              "input_format": {
                "enum": ["xml", "json", "encoded", "args"],
                "type": "string"
              },
              "template": { "type": "string" },
              "template_is_base64": { "type": "boolean" }
            },
            "required": ["template"],
            "type": "object"
          },
          "request": {
            "properties": {
              "input_format": {
                "enum": ["xml", "json", "encoded", "args"],
                "type": "string"
              },
              "template": { "type": "string" },
              "template_is_base64": { "type": "boolean" }
            },
            "required": ["template"],
            "type": "object"
          }
        },
        "anyOf": [
          { "required": ["request"] },
          { "required": ["response"] },
          { "required": ["request", "response"] }
        ],
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    },
    "authz-casbin": {
      "priority": 2560,
      "version": 0.1,
      "metadata_schema": {
        "properties": {
          "policy": { "type": "string" },
          "model": { "type": "string" }
        },
        "required": ["model", "policy"],
        "type": "object"
      },
      "schema": {
        "properties": {
          "policy_path": { "type": "string" },
          "model": { "type": "string" },
          "policy": { "type": "string" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "username": { "type": "string" },
          "model_path": { "type": "string" }
        },
        "oneOf": [
          { "required": ["model_path", "policy_path", "username"] },
          { "required": ["model", "policy", "username"] }
        ],
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    },
    "mocking": {
      "priority": 10900,
      "version": 0.1,
      "schema": {
        "properties": {
          "delay": { "default": 0, "type": "integer" },
          "content_type": {
            "default": "application/json;charset=utf8",
            "type": "string"
          },
          "response_status": {
            "minimum": 100,
            "default": 200,
            "type": "integer"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "response_example": { "type": "string" },
          "response_schema": { "type": "object" },
          "with_mock_header": { "default": true, "type": "boolean" },
          "response_headers": {
            "type": "object",
            "patternProperties": {
              "^[^:]+$": {
                "oneOf": [{ "type": "string" }, { "type": "number" }]
              }
            },
            "minProperties": 1
          }
        },
        "anyOf": [
          { "required": ["response_example"] },
          { "required": ["response_schema"] }
        ],
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    },
    "ext-plugin-post-resp": {
      "priority": -4000,
      "version": 0.1,
      "schema": {
        "properties": {
          "allow_degradation": { "default": false, "type": "boolean" },
          "conf": {
            "items": {
              "properties": {
                "name": { "minLength": 1, "maxLength": 128, "type": "string" },
                "value": { "type": "string" }
              },
              "required": ["name", "value"],
              "type": "object"
            },
            "minItems": 1,
            "type": "array"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    },
    "serverless-post-function": {
      "priority": -2000,
      "version": 0.1,
      "schema": {
        "properties": {
          "phase": {
            "default": "access",
            "enum": [
              "rewrite",
              "access",
              "header_filter",
              "body_filter",
              "log",
              "before_proxy"
            ],
            "type": "string"
          },
          "functions": {
            "items": { "type": "string" },
            "minItems": 1,
            "type": "array"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["functions"],
        "type": "object"
      }
    },
    "forward-auth": {
      "priority": 2002,
      "version": 0.1,
      "schema": {
        "properties": {
          "client_headers": {
            "description": "authorization response header that will be sent tothe client when authorizing failed",
            "default": {},
            "items": { "type": "string" },
            "type": "array"
          },
          "ssl_verify": { "default": true, "type": "boolean" },
          "allow_degradation": { "default": false, "type": "boolean" },
          "request_headers": {
            "description": "client request header that will be sent to the authorization service",
            "default": {},
            "items": { "type": "string" },
            "type": "array"
          },
          "request_method": {
            "description": "the method for client to request the authorization service",
            "default": "GET",
            "enum": ["GET", "POST"],
            "type": "string"
          },
          "keepalive_pool": { "minimum": 1, "default": 5, "type": "integer" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "keepalive_timeout": {
            "minimum": 1000,
            "default": 60000,
            "type": "integer"
          },
          "uri": { "type": "string" },
          "keepalive": { "default": true, "type": "boolean" },
          "upstream_headers": {
            "description": "authorization response header that will be sent to the upstream",
            "default": {},
            "items": { "type": "string" },
            "type": "array"
          },
          "timeout": {
            "default": 3000,
            "maximum": 60000,
            "minimum": 1,
            "description": "timeout in milliseconds",
            "type": "integer"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["uri"],
        "type": "object"
      }
    },
    "skywalking-logger": {
      "priority": 408,
      "version": 0.1,
      "metadata_schema": {
        "properties": { "log_format": { "type": "object" } },
        "type": "object"
      },
      "schema": {
        "properties": {
          "name": { "type": "string", "default": "skywalking logger" },
          "batch_max_size": {
            "minimum": 1,
            "default": 1000,
            "type": "integer"
          },
          "max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
          "retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
          "buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
          "service_instance_name": {
            "default": "APISIX Instance Name",
            "type": "string"
          },
          "endpoint_addr": {
            "pattern": "^[^\\/]+:\\/\\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?",
            "type": "string"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
          "log_format": { "type": "object" },
          "service_name": { "default": "APISIX", "type": "string" },
          "include_req_body": { "default": false, "type": "boolean" },
          "timeout": { "minimum": 1, "default": 3, "type": "integer" }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["endpoint_addr"],
        "type": "object"
      }
    },
    "aws-lambda": {
      "priority": -1899,
      "version": 0.1,
      "schema": {
        "properties": {
          "keepalive_pool": { "minimum": 1, "default": 5, "type": "integer" },
          "authorization": {
            "properties": {
              "iam": {
                "properties": {
                  "service": {
                    "description": "the service that is receiving the request",
                    "default": "execute-api",
                    "type": "string"
                  },
                  "secretkey": {
                    "description": "secret access key from from aws iam console",
                    "type": "string"
                  },
                  "aws_region": {
                    "description": "the aws region that is receiving the request",
                    "default": "us-east-1",
                    "type": "string"
                  },
                  "accesskey": {
                    "description": "access key id from from aws iam console",
                    "type": "string"
                  }
                },
                "required": ["accesskey", "secretkey"],
                "type": "object"
              },
              "apikey": { "type": "string" }
            },
            "type": "object"
          },
          "ssl_verify": { "default": true, "type": "boolean" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "keepalive_timeout": {
            "minimum": 1000,
            "default": 60000,
            "type": "integer"
          },
          "keepalive": { "default": true, "type": "boolean" },
          "function_uri": { "type": "string" },
          "timeout": { "minimum": 100, "default": 3000, "type": "integer" }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["function_uri"],
        "type": "object"
      }
    },
    "openid-connect-client": {
      "priority": 1,
      "version": 0.1,
      "metadata_schema": {},
      "schema": {
        "properties": {
          "client_secret": { "type": "string" },
          "client_id": { "type": "string" },
          "default_expiration": {
            "default": 300,
            "maximum": 100000,
            "minimum": 1,
            "description": "default expiration of cached tokens, when expiration is not provided by IDP in token response",
            "type": "integer"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "token_endpoint": { "type": "string" }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["token_endpoint", "client_id", "client_secret"],
        "type": "object"
      }
    },
    "csrf": {
      "priority": 2980,
      "version": 0.1,
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "key": {
            "description": "use to generate csrf token",
            "type": "string"
          },
          "expires": {
            "description": "expires time(s) for csrf token",
            "default": 7200,
            "type": "integer"
          },
          "name": {
            "description": "the csrf token name",
            "default": "apisix-csrf-token",
            "type": "string"
          }
        },
        "type": "object",
        "required": ["key"],
        "encrypt_fields": ["key"]
      }
    },
    "jwt-auth": {
      "priority": 2510,
      "version": 0.1,
      "consumer_schema": {
        "dependencies": {
          "algorithm": {
            "oneOf": [
              {
                "properties": {
                  "algorithm": {
                    "default": "HS256",
                    "enum": ["HS256", "HS512"]
                  }
                }
              },
              {
                "properties": {
                  "private_key": { "type": "string" },
                  "public_key": { "type": "string" },
                  "algorithm": { "enum": ["RS256", "ES256"] }
                },
                "required": ["public_key", "private_key"]
              }
            ]
          }
        },
        "properties": {
          "exp": { "minimum": 1, "default": 86400, "type": "integer" },
          "lifetime_grace_period": {
            "minimum": 0,
            "default": 0,
            "type": "integer"
          },
          "algorithm": {
            "default": "HS256",
            "type": "string",
            "enum": ["HS256", "HS512", "RS256", "ES256"]
          },
          "key": { "type": "string" },
          "base64_secret": { "default": false, "type": "boolean" },
          "secret": { "type": "string" }
        },
        "type": "object",
        "required": ["key"],
        "encrypt_fields": ["secret", "private_key"]
      },
      "schema": {
        "properties": {
          "cookie": { "default": "jwt", "type": "string" },
          "query": { "default": "jwt", "type": "string" },
          "header": { "default": "authorization", "type": "string" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "hide_credentials": { "default": false, "type": "boolean" }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      },
      "type": "auth"
    },
    "clickhouse-logger": {
      "priority": 398,
      "version": 0.1,
      "metadata_schema": {
        "properties": { "log_format": { "type": "object" } },
        "type": "object"
      },
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "include_resp_body_expr": {
            "items": { "type": "array" },
            "type": "array",
            "minItems": 1
          },
          "ssl_verify": { "default": true, "type": "boolean" },
          "include_resp_body": { "default": false, "type": "boolean" },
          "inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
          "password": { "default": "", "type": "string" },
          "include_req_body": { "default": false, "type": "boolean" },
          "timeout": { "minimum": 1, "default": 3, "type": "integer" },
          "include_req_body_expr": {
            "items": { "type": "array" },
            "type": "array",
            "minItems": 1
          },
          "name": { "default": "clickhouse-logger", "type": "string" },
          "batch_max_size": {
            "minimum": 1,
            "default": 1000,
            "type": "integer"
          },
          "max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
          "retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
          "buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
          "endpoint_addr": {
            "pattern": "^[^\\/]+:\\/\\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?",
            "type": "string"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "database": { "default": "", "type": "string" },
          "logtable": { "default": "", "type": "string" },
          "endpoint_addrs": {
            "items": {
              "pattern": "^[^\\/]+:\\/\\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?",
              "type": "string"
            },
            "minItems": 1,
            "type": "array"
          },
          "log_format": { "type": "object" },
          "user": { "default": "", "type": "string" }
        },
        "oneOf": [
          {
            "required": [
              "endpoint_addr",
              "user",
              "password",
              "database",
              "logtable"
            ]
          },
          {
            "required": [
              "endpoint_addrs",
              "user",
              "password",
              "database",
              "logtable"
            ]
          }
        ],
        "type": "object",
        "encrypt_fields": ["password"]
      }
    },
    "jwe-decrypt": {
      "priority": 2509,
      "version": 0.1,
      "consumer_schema": {
        "properties": {
          "key": { "type": "string" },
          "is_base64_encoded": { "type": "boolean" },
          "secret": { "minLength": 32, "type": "string" }
        },
        "required": ["key", "secret"],
        "type": "object"
      },
      "schema": {
        "properties": {
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "forward_header": { "default": "Authorization", "type": "string" },
          "strict": { "default": true, "type": "boolean" },
          "header": { "default": "Authorization", "type": "string" }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["header", "forward_header"],
        "type": "object"
      },
      "type": "auth"
    },
    "proxy-cache": {
      "priority": 1085,
      "version": 0.2,
      "schema": {
        "properties": {
          "cache_http_status": {
            "items": {
              "description": "http response status",
              "minimum": 200,
              "maximum": 599,
              "type": "integer"
            },
            "minItems": 1,
            "default": [200, 301, 404],
            "type": "array",
            "uniqueItems": true
          },
          "cache_ttl": { "minimum": 1, "default": 300, "type": "integer" },
          "cache_method": {
            "items": {
              "description": "supported http method",
              "enum": ["GET", "POST", "HEAD"],
              "type": "string"
            },
            "minItems": 1,
            "default": ["GET", "HEAD"],
            "type": "array",
            "uniqueItems": true
          },
          "hide_cache_headers": { "default": false, "type": "boolean" },
          "cache_control": { "default": false, "type": "boolean" },
          "cache_bypass": {
            "items": {
              "pattern": "(^[^\\$].+$|^\\$[0-9a-zA-Z_]+$)",
              "type": "string"
            },
            "type": "array",
            "minItems": 1
          },
          "no_cache": {
            "items": {
              "pattern": "(^[^\\$].+$|^\\$[0-9a-zA-Z_]+$)",
              "type": "string"
            },
            "type": "array",
            "minItems": 1
          },
          "cache_key": {
            "default": ["$host", "$request_uri"],
            "items": {
              "description": "a key for caching",
              "pattern": "(^[^\\$].+$|^\\$[0-9a-zA-Z_]+$)",
              "type": "string"
            },
            "type": "array",
            "minItems": 1
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "cache_zone": {
            "default": "disk_cache_one",
            "minLength": 1,
            "maxLength": 100,
            "type": "string"
          },
          "cache_strategy": {
            "default": "disk",
            "type": "string",
            "enum": ["disk", "memory"]
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    },
    "basic-auth": {
      "priority": 2520,
      "version": 0.1,
      "consumer_schema": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "password": { "type": "string" }
        },
        "title": "work with consumer object",
        "required": ["username", "password"],
        "encrypt_fields": ["password"]
      },
      "schema": {
        "properties": {
          "hide_credentials": { "default": false, "type": "boolean" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          }
        },
        "title": "work with route or service object",
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      },
      "type": "auth"
    },
    "proxy-control": {
      "priority": 21990,
      "version": 0.1,
      "schema": {
        "properties": {
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "request_buffering": { "default": true, "type": "boolean" }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    },
    "inspect": {
      "priority": 200,
      "version": 0.1,
      "schema": {
        "properties": {
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    },
    "ip-restriction": {
      "priority": 3000,
      "version": 0.1,
      "schema": {
        "properties": {
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "blacklist": {
            "items": {
              "anyOf": [
                { "title": "IPv4", "format": "ipv4", "type": "string" },
                {
                  "title": "IPv4/CIDR",
                  "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
                  "type": "string"
                },
                { "title": "IPv6", "format": "ipv6", "type": "string" },
                {
                  "title": "IPv6/CIDR",
                  "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
                  "type": "string"
                }
              ]
            },
            "minItems": 1,
            "type": "array"
          },
          "message": {
            "default": "Your IP address is not allowed",
            "minLength": 1,
            "maxLength": 1024,
            "type": "string"
          },
          "whitelist": {
            "items": {
              "anyOf": [
                { "title": "IPv4", "format": "ipv4", "type": "string" },
                {
                  "title": "IPv4/CIDR",
                  "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
                  "type": "string"
                },
                { "title": "IPv6", "format": "ipv6", "type": "string" },
                {
                  "title": "IPv6/CIDR",
                  "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
                  "type": "string"
                }
              ]
            },
            "minItems": 1,
            "type": "array"
          }
        },
        "oneOf": [{ "required": ["whitelist"] }, { "required": ["blacklist"] }],
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    },
    "workflow": {
      "priority": 1006,
      "version": 0.1,
      "schema": {
        "properties": {
          "rules": {
            "items": {
              "properties": {
                "case": {
                  "items": {
                    "anyOf": [{ "type": "array" }, { "type": "string" }]
                  },
                  "minItems": 1,
                  "type": "array"
                },
                "actions": {
                  "items": { "minItems": 1, "type": "array" },
                  "type": "array"
                }
              },
              "required": ["case", "actions"],
              "type": "object"
            },
            "type": "array"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["rules"],
        "type": "object"
      }
    },
    "cors": {
      "priority": 4000,
      "version": 0.1,
      "metadata_schema": {
        "properties": {
          "allow_origins": {
            "additionalProperties": {
              "pattern": "^(\\*|\\*\\*|null|\\w+://[^,]+(,\\w+://[^,]+)*)$",
              "type": "string"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "schema": {
        "properties": {
          "timing_allow_origins_by_regex": {
            "items": { "minLength": 1, "maxLength": 4096, "type": "string" },
            "minItems": 1,
            "description": "you can use regex to allow specific origins which can view timing information,for example use [.*\\.test.com] to allow a.test.com and b.test.com",
            "uniqueItems": true,
            "type": "array"
          },
          "allow_credential": {
            "description": "allow client append credential. according to CORS specification,if you set this option to 'true', you can not use '*' for other options.",
            "default": false,
            "type": "boolean"
          },
          "allow_origins": {
            "description": "you can use '*' to allow all origins when no credentials,'**' to allow forcefully(it will bring some security risks, be carefully),multiple origin use ',' to split. default: *.",
            "default": "*",
            "pattern": "^(\\*|\\*\\*|null|\\w+://[^,]+(,\\w+://[^,]+)*)$",
            "type": "string"
          },
          "allow_origins_by_regex": {
            "items": { "minLength": 1, "maxLength": 4096, "type": "string" },
            "minItems": 1,
            "description": "you can use regex to allow specific origins when no credentials,for example use [.*\\.test.com$] to allow a.test.com and b.test.com",
            "uniqueItems": true,
            "type": "array"
          },
          "max_age": {
            "description": "maximum number of seconds the results can be cached.-1 means no cached, the max value is depend on browser,more details plz check MDN. default: 5.",
            "default": 5,
            "type": "integer"
          },
          "allow_methods": {
            "description": "you can use '*' to allow all methods when no credentials,'**' to allow forcefully(it will bring some security risks, be carefully),multiple method use ',' to split. default: *.",
            "default": "*",
            "type": "string"
          },
          "allow_origins_by_metadata": {
            "items": { "minLength": 1, "maxLength": 4096, "type": "string" },
            "minItems": 1,
            "description": "set allowed origins by referencing origins in plugin metadata",
            "uniqueItems": true,
            "type": "array"
          },
          "allow_headers": {
            "description": "you can use '*' to allow all header when no credentials,'**' to allow forcefully(it will bring some security risks, be carefully),multiple header use ',' to split. default: *.",
            "default": "*",
            "type": "string"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "timing_allow_origins": {
            "description": "you can use '*' to allow all origins which can view timing information when no credentials,'**' to allow forcefully (it will bring some security risks, be careful),multiple origin use ',' to split. default: nil",
            "pattern": "^(\\*|\\*\\*|null|\\w+://[^,]+(,\\w+://[^,]+)*)$",
            "type": "string"
          },
          "expose_headers": {
            "description": "you can use '*' to expose all header when no credentials,'**' to allow forcefully(it will bring some security risks, be carefully),multiple header use ',' to split. default: *.",
            "default": "*",
            "type": "string"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    },
    "ai": {
      "priority": 22900,
      "version": 0.1,
      "schema": {
        "properties": {
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          }
        },
        "$comment": "this is a mark for our injected plugin schema"
      },
      "scope": "global"
    },
    "example-plugin": {
      "priority": 0,
      "version": 0.1,
      "metadata_schema": {
        "properties": {
          "skey": { "type": "string" },
          "ikey": { "minimum": 0, "type": "number" }
        },
        "required": ["ikey", "skey"],
        "type": "object"
      },
      "schema": {
        "properties": {
          "ip": { "type": "string" },
          "port": { "type": "integer" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "s": { "type": "string" },
          "i": { "minimum": 0, "type": "number" },
          "t": { "minItems": 1, "type": "array" }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["i"],
        "type": "object"
      }
    },
    "request-id": {
      "priority": 12015,
      "version": 0.1,
      "schema": {
        "properties": {
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "algorithm": {
            "default": "uuid",
            "type": "string",
            "enum": ["uuid", "nanoid", "range_id"]
          },
          "header_name": { "default": "X-Request-Id", "type": "string" },
          "include_in_response": { "default": true, "type": "boolean" },
          "range_id": {
            "properties": {
              "length": { "minimum": 6, "default": 16, "type": "integer" },
              "char_set": {
                "minLength": 6,
                "default": "abcdefghijklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVWXYZ0123456789",
                "type": "string"
              }
            },
            "default": {},
            "type": "object"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    },
    "referer-restriction": {
      "priority": 2990,
      "version": 0.1,
      "schema": {
        "properties": {
          "message": {
            "default": "Your referer host is not allowed",
            "minLength": 1,
            "maxLength": 1024,
            "type": "string"
          },
          "whitelist": {
            "items": {
              "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
              "type": "string"
            },
            "minItems": 1,
            "type": "array"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "blacklist": {
            "items": {
              "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
              "type": "string"
            },
            "minItems": 1,
            "type": "array"
          },
          "bypass_missing": { "default": false, "type": "boolean" }
        },
        "oneOf": [{ "required": ["whitelist"] }, { "required": ["blacklist"] }],
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    },
    "chaitin-waf": {
      "priority": 2700,
      "version": 0.1,
      "metadata_schema": {
        "properties": {
          "config": {
            "properties": {
              "send_timeout": { "default": 1000, "type": "integer" },
              "keepalive_timeout": { "default": 60000, "type": "integer" },
              "connect_timeout": { "default": 1000, "type": "integer" },
              "keepalive_size": { "default": 256, "type": "integer" },
              "req_body_size": { "default": 1024, "type": "integer" },
              "read_timeout": { "default": 1000, "type": "integer" }
            },
            "default": {},
            "type": "object"
          },
          "nodes": {
            "items": {
              "properties": {
                "port": { "minimum": 1, "default": 80, "type": "integer" },
                "host": {
                  "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:/]+$",
                  "type": "string"
                }
              },
              "required": ["host"],
              "type": "object"
            },
            "minItems": 1,
            "type": "array"
          }
        },
        "required": ["nodes"],
        "type": "object"
      },
      "schema": {
        "properties": {
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "config": {
            "properties": {
              "send_timeout": { "type": "integer" },
              "keepalive_timeout": { "type": "integer" },
              "connect_timeout": { "type": "integer" },
              "keepalive_size": { "type": "integer" },
              "req_body_size": { "type": "integer" },
              "read_timeout": { "type": "integer" }
            },
            "type": "object"
          },
          "append_waf_resp_header": { "default": true, "type": "boolean" },
          "append_waf_debug_header": { "default": false, "type": "boolean" },
          "match": {
            "items": {
              "properties": { "vars": { "type": "array" } },
              "type": "object"
            },
            "type": "array"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    },
    "splunk-hec-logging": {
      "priority": 409,
      "version": 0.1,
      "schema": {
        "properties": {
          "name": { "type": "string", "default": "splunk-hec-logging" },
          "batch_max_size": {
            "minimum": 1,
            "default": 1000,
            "type": "integer"
          },
          "max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
          "retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
          "buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
          "ssl_verify": { "default": true, "type": "boolean" },
          "log_format": { "type": "object" },
          "endpoint": {
            "properties": {
              "token": { "type": "string" },
              "timeout": { "minimum": 1, "default": 10, "type": "integer" },
              "channel": { "type": "string" },
              "uri": {
                "pattern": "^[^\\/]+:\\/\\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?",
                "type": "string"
              }
            },
            "required": ["uri", "token"],
            "type": "object"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["endpoint"],
        "type": "object"
      },
      "metadata_schema": {
        "properties": { "log_format": { "type": "object" } },
        "type": "object"
      }
    },
    "file-logger": {
      "priority": 399,
      "version": 0.1,
      "metadata_schema": {
        "properties": { "log_format": { "type": "object" } },
        "type": "object"
      },
      "schema": {
        "properties": {
          "include_req_body_expr": {
            "items": { "type": "array" },
            "type": "array",
            "minItems": 1
          },
          "match": {
            "items": { "type": "array" },
            "maxItems": 20,
            "type": "array"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "include_resp_body": { "default": false, "type": "boolean" },
          "include_resp_body_expr": {
            "items": { "type": "array" },
            "type": "array",
            "minItems": 1
          },
          "log_format": { "type": "object" },
          "include_req_body": { "default": false, "type": "boolean" },
          "path": { "type": "string" }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["path"],
        "type": "object"
      }
    },
    "echo": {
      "priority": 412,
      "version": 0.1,
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "anyOf": [
          { "required": ["before_body"] },
          { "required": ["body"] },
          { "required": ["after_body"] }
        ],
        "minProperties": 1,
        "properties": {
          "headers": {
            "description": "new headers for response",
            "minProperties": 1,
            "type": "object"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "after_body": {
            "description": "body after the modification of filter phase.",
            "type": "string"
          },
          "body": {
            "description": "body to replace upstream response.",
            "type": "string"
          },
          "before_body": {
            "description": "body before the filter phase.",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "syslog": {
      "priority": 401,
      "version": 0.1,
      "schema": {
        "properties": {
          "port": { "type": "integer" },
          "inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
          "pool_size": { "minimum": 5, "default": 5, "type": "integer" },
          "include_req_body": { "default": false, "type": "boolean" },
          "timeout": { "minimum": 1, "default": 3000, "type": "integer" },
          "name": { "type": "string", "default": "sys logger" },
          "batch_max_size": {
            "minimum": 1,
            "default": 1000,
            "type": "integer"
          },
          "max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
          "host": { "type": "string" },
          "buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "tls": { "default": false, "type": "boolean" },
          "sock_type": {
            "default": "tcp",
            "enum": ["tcp", "udp"],
            "type": "string"
          },
          "flush_limit": { "minimum": 1, "default": 4096, "type": "integer" },
          "drop_limit": { "default": 1048576, "type": "integer" },
          "log_format": { "type": "object" },
          "retry_delay": { "minimum": 0, "default": 1, "type": "integer" }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["host", "port"],
        "type": "object"
      },
      "metadata_schema": {
        "properties": { "log_format": { "type": "object" } },
        "type": "object"
      }
    }
  },
  "main": {
    "stream_route": {
      "properties": {
        "upstream_id": {
          "anyOf": [
            {
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "minLength": 1,
              "maxLength": 64,
              "type": "string"
            },
            { "minimum": 1, "type": "integer" }
          ]
        },
        "server_addr": {
          "description": "server IP",
          "anyOf": [
            { "title": "IPv4", "format": "ipv4", "type": "string" },
            {
              "title": "IPv4/CIDR",
              "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
              "type": "string"
            },
            { "title": "IPv6", "format": "ipv6", "type": "string" },
            {
              "title": "IPv6/CIDR",
              "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
              "type": "string"
            }
          ],
          "type": "string"
        },
        "update_time": { "type": "integer" },
        "plugins": { "type": "object" },
        "protocol": {
          "properties": {
            "logger": {
              "items": {
                "properties": {
                  "conf": {
                    "description": "logger plugin configuration",
                    "type": "object"
                  },
                  "name": { "type": "string" },
                  "filter": {
                    "description": "logger filter rules",
                    "type": "array"
                  }
                },
                "additionalProperties": false,
                "dependencies": { "name": ["conf"] }
              },
              "type": "array"
            },
            "conf": {
              "description": "protocol-specific configuration",
              "type": "object"
            },
            "name": { "type": "string" },
            "superior_id": {
              "anyOf": [
                {
                  "pattern": "^[a-zA-Z0-9-_.]+$",
                  "minLength": 1,
                  "maxLength": 64,
                  "type": "string"
                },
                { "minimum": 1, "type": "integer" }
              ]
            }
          },
          "required": ["name"],
          "type": "object"
        },
        "id": {
          "anyOf": [
            {
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "minLength": 1,
              "maxLength": 64,
              "type": "string"
            },
            { "minimum": 1, "type": "integer" }
          ]
        },
        "upstream": {
          "properties": {
            "discovery_type": {
              "description": "discovery type",
              "type": "string"
            },
            "discovery_args": {
              "properties": {
                "namespace_id": {
                  "description": "namespace id",
                  "type": "string"
                },
                "group_name": { "description": "group name", "type": "string" }
              },
              "type": "object"
            },
            "key": {
              "description": "the key of chash for dynamic load balancing",
              "type": "string"
            },
            "id": {
              "anyOf": [
                {
                  "pattern": "^[a-zA-Z0-9-_.]+$",
                  "minLength": 1,
                  "maxLength": 64,
                  "type": "string"
                },
                { "minimum": 1, "type": "integer" }
              ]
            },
            "keepalive_pool": {
              "properties": {
                "idle_timeout": {
                  "minimum": 0,
                  "default": 60,
                  "type": "number"
                },
                "size": { "minimum": 1, "default": 320, "type": "integer" },
                "requests": { "minimum": 1, "default": 1000, "type": "integer" }
              },
              "type": "object"
            },
            "desc": { "maxLength": 256, "type": "string" },
            "pass_host": {
              "description": "mod of host passing",
              "default": "pass",
              "enum": ["pass", "node", "rewrite"],
              "type": "string"
            },
            "labels": {
              "description": "key/value pairs to specify attributes",
              "patternProperties": {
                ".*": {
                  "type": "string",
                  "description": "value of label",
                  "minLength": 1,
                  "maxLength": 256,
                  "pattern": "^\\S+$"
                }
              },
              "type": "object"
            },
            "type": {
              "description": "algorithms of load balancing",
              "default": "roundrobin",
              "type": "string"
            },
            "retries": { "minimum": 0, "type": "integer" },
            "retry_timeout": { "minimum": 0, "type": "number" },
            "name": { "minLength": 1, "maxLength": 100, "type": "string" },
            "scheme": {
              "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp. For specific protocols, it can be kafka.",
              "default": "http",
              "enum": [
                "grpc",
                "grpcs",
                "http",
                "https",
                "tcp",
                "tls",
                "udp",
                "kafka"
              ]
            },
            "update_time": { "type": "integer" },
            "hash_on": {
              "default": "vars",
              "enum": [
                "vars",
                "header",
                "cookie",
                "consumer",
                "vars_combinations"
              ],
              "type": "string"
            },
            "service_name": {
              "minLength": 1,
              "maxLength": 256,
              "type": "string"
            },
            "tls": {
              "properties": {
                "client_cert": {
                  "minLength": 128,
                  "maxLength": 65536,
                  "type": "string"
                },
                "verify": {
                  "description": "Turn on server certificate verification, currently only kafka upstream is supported",
                  "default": false,
                  "type": "boolean"
                },
                "client_key": {
                  "minLength": 128,
                  "maxLength": 65536,
                  "type": "string"
                },
                "client_cert_id": {
                  "anyOf": [
                    {
                      "pattern": "^[a-zA-Z0-9-_.]+$",
                      "minLength": 1,
                      "maxLength": 64,
                      "type": "string"
                    },
                    { "minimum": 1, "type": "integer" }
                  ]
                }
              },
              "dependencies": {
                "client_cert": { "required": ["client_key"] },
                "client_key": { "required": ["client_cert"] },
                "client_cert_id": {
                  "not": { "required": ["client_cert", "client_key"] }
                }
              },
              "type": "object"
            },
            "checks": {
              "properties": {
                "passive": {
                  "properties": {
                    "healthy": {
                      "properties": {
                        "successes": {
                          "minimum": 0,
                          "default": 5,
                          "maximum": 254,
                          "type": "integer"
                        },
                        "http_statuses": {
                          "items": {
                            "minimum": 200,
                            "maximum": 599,
                            "type": "integer"
                          },
                          "minItems": 1,
                          "default": [
                            200, 201, 202, 203, 204, 205, 206, 207, 208, 226,
                            300, 301, 302, 303, 304, 305, 306, 307, 308
                          ],
                          "type": "array",
                          "uniqueItems": true
                        }
                      },
                      "type": "object"
                    },
                    "unhealthy": {
                      "properties": {
                        "timeouts": {
                          "minimum": 0,
                          "default": 7,
                          "maximum": 254,
                          "type": "integer"
                        },
                        "http_failures": {
                          "minimum": 0,
                          "default": 5,
                          "maximum": 254,
                          "type": "integer"
                        },
                        "tcp_failures": {
                          "minimum": 0,
                          "default": 2,
                          "maximum": 254,
                          "type": "integer"
                        },
                        "http_statuses": {
                          "items": {
                            "minimum": 200,
                            "maximum": 599,
                            "type": "integer"
                          },
                          "minItems": 1,
                          "default": [429, 500, 503],
                          "type": "array",
                          "uniqueItems": true
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "default": "http",
                      "type": "string",
                      "enum": ["http", "https", "tcp"]
                    }
                  },
                  "type": "object"
                },
                "active": {
                  "properties": {
                    "healthy": {
                      "properties": {
                        "interval": {
                          "minimum": 1,
                          "default": 1,
                          "type": "integer"
                        },
                        "successes": {
                          "minimum": 1,
                          "default": 2,
                          "maximum": 254,
                          "type": "integer"
                        },
                        "http_statuses": {
                          "items": {
                            "minimum": 200,
                            "maximum": 599,
                            "type": "integer"
                          },
                          "minItems": 1,
                          "default": [200, 302],
                          "type": "array",
                          "uniqueItems": true
                        }
                      },
                      "type": "object"
                    },
                    "port": {
                      "minimum": 1,
                      "maximum": 65535,
                      "type": "integer"
                    },
                    "req_headers": {
                      "items": { "uniqueItems": true, "type": "string" },
                      "type": "array",
                      "minItems": 1
                    },
                    "host": {
                      "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                      "type": "string"
                    },
                    "unhealthy": {
                      "properties": {
                        "http_failures": {
                          "minimum": 1,
                          "default": 5,
                          "maximum": 254,
                          "type": "integer"
                        },
                        "tcp_failures": {
                          "minimum": 1,
                          "default": 2,
                          "maximum": 254,
                          "type": "integer"
                        },
                        "timeouts": {
                          "minimum": 1,
                          "default": 3,
                          "maximum": 254,
                          "type": "integer"
                        },
                        "interval": {
                          "minimum": 1,
                          "default": 1,
                          "type": "integer"
                        },
                        "http_statuses": {
                          "items": {
                            "minimum": 200,
                            "maximum": 599,
                            "type": "integer"
                          },
                          "minItems": 1,
                          "default": [429, 404, 500, 501, 502, 503, 504, 505],
                          "type": "array",
                          "uniqueItems": true
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "default": "http",
                      "type": "string",
                      "enum": ["http", "https", "tcp"]
                    },
                    "timeout": { "default": 1, "type": "number" },
                    "concurrency": { "default": 10, "type": "integer" },
                    "http_path": { "default": "/", "type": "string" },
                    "https_verify_certificate": {
                      "default": true,
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              },
              "anyOf": [
                { "required": ["active"] },
                { "required": ["active", "passive"] }
              ],
              "additionalProperties": false,
              "type": "object"
            },
            "upstream_host": {
              "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
              "type": "string"
            },
            "nodes": {
              "anyOf": [
                {
                  "patternProperties": {
                    ".*": {
                      "description": "weight of node",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                {
                  "items": {
                    "properties": {
                      "priority": {
                        "description": "priority of node",
                        "default": 0,
                        "type": "integer"
                      },
                      "port": {
                        "description": "port of node",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "weight": {
                        "description": "weight of node",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "metadata": {
                        "description": "metadata of node",
                        "type": "object"
                      },
                      "host": {
                        "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                        "type": "string"
                      }
                    },
                    "required": ["host", "weight"],
                    "type": "object"
                  },
                  "type": "array"
                }
              ]
            },
            "timeout": {
              "properties": {
                "send": { "exclusiveMinimum": 0, "type": "number" },
                "read": { "exclusiveMinimum": 0, "type": "number" },
                "connect": { "exclusiveMinimum": 0, "type": "number" }
              },
              "required": ["connect", "send", "read"],
              "type": "object"
            },
            "create_time": { "type": "integer" }
          },
          "oneOf": [
            { "required": ["nodes"] },
            { "required": ["service_name", "discovery_type"] }
          ],
          "additionalProperties": false,
          "type": "object"
        },
        "desc": { "maxLength": 256, "type": "string" },
        "service_id": {
          "anyOf": [
            {
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "minLength": 1,
              "maxLength": 64,
              "type": "string"
            },
            { "minimum": 1, "type": "integer" }
          ]
        },
        "sni": {
          "description": "server name indication",
          "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
          "type": "string"
        },
        "remote_addr": {
          "description": "client IP",
          "anyOf": [
            { "title": "IPv4", "format": "ipv4", "type": "string" },
            {
              "title": "IPv4/CIDR",
              "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
              "type": "string"
            },
            { "title": "IPv6", "format": "ipv6", "type": "string" },
            {
              "title": "IPv6/CIDR",
              "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
              "type": "string"
            }
          ],
          "type": "string"
        },
        "labels": {
          "description": "key/value pairs to specify attributes",
          "patternProperties": {
            ".*": {
              "type": "string",
              "description": "value of label",
              "minLength": 1,
              "maxLength": 256,
              "pattern": "^\\S+$"
            }
          },
          "type": "object"
        },
        "server_port": { "description": "server port", "type": "integer" },
        "create_time": { "type": "integer" }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "upstream_hash_vars_schema": {
      "pattern": "^((uri|server_name|server_addr|request_uri|remote_port|remote_addr|query_string|host|hostname|mqtt_client_id)|arg_[0-9a-zA-z_-]+)$",
      "type": "string"
    },
    "plugins": {
      "items": {
        "properties": {
          "stream": { "type": "boolean" },
          "name": { "minLength": 1, "type": "string" },
          "additionalProperties": false
        },
        "required": ["name"],
        "type": "object"
      },
      "type": "array"
    },
    "consumer_group": {
      "properties": {
        "desc": { "maxLength": 256, "type": "string" },
        "create_time": { "type": "integer" },
        "update_time": { "type": "integer" },
        "labels": {
          "description": "key/value pairs to specify attributes",
          "patternProperties": {
            ".*": {
              "type": "string",
              "description": "value of label",
              "minLength": 1,
              "maxLength": 256,
              "pattern": "^\\S+$"
            }
          },
          "type": "object"
        },
        "plugins": { "type": "object" },
        "id": {
          "anyOf": [
            {
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "minLength": 1,
              "maxLength": 64,
              "type": "string"
            },
            { "minimum": 1, "type": "integer" }
          ]
        }
      },
      "additionalProperties": false,
      "required": ["id", "plugins"],
      "type": "object"
    },
    "consumer": {
      "properties": {
        "desc": { "maxLength": 256, "type": "string" },
        "group_id": {
          "anyOf": [
            {
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "minLength": 1,
              "maxLength": 64,
              "type": "string"
            },
            { "minimum": 1, "type": "integer" }
          ]
        },
        "plugins": { "type": "object" },
        "update_time": { "type": "integer" },
        "labels": {
          "description": "key/value pairs to specify attributes",
          "patternProperties": {
            ".*": {
              "type": "string",
              "description": "value of label",
              "minLength": 1,
              "maxLength": 256,
              "pattern": "^\\S+$"
            }
          },
          "type": "object"
        },
        "username": {
          "pattern": "^[a-zA-Z0-9_]+$",
          "minLength": 1,
          "maxLength": 100,
          "type": "string"
        },
        "create_time": { "type": "integer" }
      },
      "additionalProperties": false,
      "required": ["username"],
      "type": "object"
    },
    "ssl": {
      "additionalProperties": false,
      "then": {
        "oneOf": [
          { "required": ["sni", "key", "cert"] },
          { "required": ["snis", "key", "cert"] }
        ]
      },
      "properties": {
        "cert": {
          "oneOf": [
            { "minLength": 128, "maxLength": 65536, "type": "string" },
            { "pattern": "^\\$(secret|env)://", "type": "string" }
          ]
        },
        "snis": {
          "items": {
            "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
            "type": "string"
          },
          "minItems": 1,
          "type": "array"
        },
        "certs": {
          "items": { "minLength": 128, "maxLength": 65536, "type": "string" },
          "type": "array"
        },
        "key": {
          "oneOf": [
            { "minLength": 128, "maxLength": 65536, "type": "string" },
            { "pattern": "^\\$(secret|env)://", "type": "string" }
          ]
        },
        "update_time": { "type": "integer" },
        "sni": { "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$", "type": "string" },
        "create_time": { "type": "integer" },
        "ssl_protocols": {
          "items": { "enum": ["TLSv1.1", "TLSv1.2", "TLSv1.3"] },
          "description": "set ssl protocols",
          "type": "array",
          "maxItems": 3,
          "uniqueItems": true
        },
        "keys": {
          "items": { "minLength": 128, "maxLength": 65536, "type": "string" },
          "type": "array"
        },
        "client": {
          "properties": {
            "skip_mtls_uri_regex": {
              "uniqueItems": true,
              "items": {
                "description": "uri regular expression to skip mtls",
                "type": "string"
              },
              "type": "array",
              "minItems": 1
            },
            "depth": { "minimum": 0, "default": 1, "type": "integer" },
            "ca": { "minLength": 128, "maxLength": 65536, "type": "string" }
          },
          "required": ["ca"],
          "type": "object"
        },
        "status": {
          "description": "ssl status, 1 to enable, 0 to disable",
          "default": 1,
          "enum": [1, 0],
          "type": "integer"
        },
        "labels": {
          "description": "key/value pairs to specify attributes",
          "patternProperties": {
            ".*": {
              "type": "string",
              "description": "value of label",
              "minLength": 1,
              "maxLength": 256,
              "pattern": "^\\S+$"
            }
          },
          "type": "object"
        },
        "id": {
          "anyOf": [
            {
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "minLength": 1,
              "maxLength": 64,
              "type": "string"
            },
            { "minimum": 1, "type": "integer" }
          ]
        },
        "type": {
          "description": "ssl certificate type, server to server certificate, client to client certificate for upstream",
          "default": "server",
          "enum": ["server", "client"],
          "type": "string"
        }
      },
      "else": { "required": ["key", "cert"] },
      "if": { "properties": { "type": { "enum": ["server"] } } },
      "type": "object"
    },
    "global_rule": {
      "additionalProperties": false,
      "properties": {
        "update_time": { "type": "integer" },
        "plugins": { "type": "object" },
        "create_time": { "type": "integer" },
        "id": {
          "anyOf": [
            {
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "minLength": 1,
              "maxLength": 64,
              "type": "string"
            },
            { "minimum": 1, "type": "integer" }
          ]
        }
      },
      "required": ["id", "plugins"],
      "type": "object"
    },
    "proto": {
      "properties": {
        "desc": { "maxLength": 256, "type": "string" },
        "update_time": { "type": "integer" },
        "content": { "minLength": 1, "maxLength": 1048576, "type": "string" },
        "id": {
          "anyOf": [
            {
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "minLength": 1,
              "maxLength": 64,
              "type": "string"
            },
            { "minimum": 1, "type": "integer" }
          ]
        },
        "create_time": { "type": "integer" }
      },
      "additionalProperties": false,
      "required": ["content"],
      "type": "object"
    },
    "upstream_hash_header_schema": {
      "pattern": "^[a-zA-Z0-9-_]+$",
      "type": "string"
    },
    "route": {
      "anyOf": [
        { "required": ["plugins", "uri"] },
        { "required": ["upstream", "uri"] },
        { "required": ["upstream_id", "uri"] },
        { "required": ["service_id", "uri"] },
        { "required": ["plugins", "uris"] },
        { "required": ["upstream", "uris"] },
        { "required": ["upstream_id", "uris"] },
        { "required": ["service_id", "uris"] },
        { "required": ["script", "uri"] },
        { "required": ["script", "uris"] }
      ],
      "additionalProperties": false,
      "properties": {
        "plugin_config_id": {
          "anyOf": [
            {
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "minLength": 1,
              "maxLength": 64,
              "type": "string"
            },
            { "minimum": 1, "type": "integer" }
          ]
        },
        "id": {
          "anyOf": [
            {
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "minLength": 1,
              "maxLength": 64,
              "type": "string"
            },
            { "minimum": 1, "type": "integer" }
          ]
        },
        "upstream_id": {
          "anyOf": [
            {
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "minLength": 1,
              "maxLength": 64,
              "type": "string"
            },
            { "minimum": 1, "type": "integer" }
          ]
        },
        "desc": { "maxLength": 256, "type": "string" },
        "service_id": {
          "anyOf": [
            {
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "minLength": 1,
              "maxLength": 64,
              "type": "string"
            },
            { "minimum": 1, "type": "integer" }
          ]
        },
        "enable_websocket": {
          "description": "enable websocket for request",
          "type": "boolean"
        },
        "status": {
          "description": "route status, 1 to enable, 0 to disable",
          "default": 1,
          "enum": [1, 0],
          "type": "integer"
        },
        "labels": {
          "description": "key/value pairs to specify attributes",
          "patternProperties": {
            ".*": {
              "type": "string",
              "description": "value of label",
              "minLength": 1,
              "maxLength": 256,
              "pattern": "^\\S+$"
            }
          },
          "type": "object"
        },
        "uris": {
          "uniqueItems": true,
          "items": { "description": "HTTP uri", "type": "string" },
          "minItems": 1,
          "type": "array"
        },
        "timeout": {
          "properties": {
            "send": { "exclusiveMinimum": 0, "type": "number" },
            "read": { "exclusiveMinimum": 0, "type": "number" },
            "connect": { "exclusiveMinimum": 0, "type": "number" }
          },
          "required": ["connect", "send", "read"],
          "type": "object"
        },
        "priority": { "default": 0, "type": "integer" },
        "uri": { "minLength": 1, "maxLength": 4096, "type": "string" },
        "script": { "minLength": 10, "maxLength": 102400, "type": "string" },
        "plugins": { "type": "object" },
        "update_time": { "type": "integer" },
        "methods": {
          "items": {
            "description": "HTTP method",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "DELETE",
              "PATCH",
              "HEAD",
              "OPTIONS",
              "CONNECT",
              "TRACE",
              "PURGE"
            ],
            "type": "string"
          },
          "uniqueItems": true,
          "type": "array"
        },
        "hosts": {
          "uniqueItems": true,
          "items": {
            "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
            "type": "string"
          },
          "minItems": 1,
          "type": "array"
        },
        "remote_addrs": {
          "uniqueItems": true,
          "items": {
            "description": "client IP",
            "anyOf": [
              { "title": "IPv4", "format": "ipv4", "type": "string" },
              {
                "title": "IPv4/CIDR",
                "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
                "type": "string"
              },
              { "title": "IPv6", "format": "ipv6", "type": "string" },
              {
                "title": "IPv6/CIDR",
                "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
                "type": "string"
              }
            ],
            "type": "string"
          },
          "minItems": 1,
          "type": "array"
        },
        "filter_func": {
          "minLength": 10,
          "pattern": "^function",
          "type": "string"
        },
        "vars": { "type": "array" },
        "script_id": {
          "anyOf": [
            {
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "minLength": 1,
              "maxLength": 64,
              "type": "string"
            },
            { "minimum": 1, "type": "integer" }
          ]
        },
        "create_time": { "type": "integer" },
        "host": { "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$", "type": "string" },
        "remote_addr": {
          "description": "client IP",
          "anyOf": [
            { "title": "IPv4", "format": "ipv4", "type": "string" },
            {
              "title": "IPv4/CIDR",
              "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
              "type": "string"
            },
            { "title": "IPv6", "format": "ipv6", "type": "string" },
            {
              "title": "IPv6/CIDR",
              "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
              "type": "string"
            }
          ],
          "type": "string"
        },
        "upstream": {
          "properties": {
            "discovery_type": {
              "description": "discovery type",
              "type": "string"
            },
            "discovery_args": {
              "properties": {
                "namespace_id": {
                  "description": "namespace id",
                  "type": "string"
                },
                "group_name": { "description": "group name", "type": "string" }
              },
              "type": "object"
            },
            "key": {
              "description": "the key of chash for dynamic load balancing",
              "type": "string"
            },
            "id": {
              "anyOf": [
                {
                  "pattern": "^[a-zA-Z0-9-_.]+$",
                  "minLength": 1,
                  "maxLength": 64,
                  "type": "string"
                },
                { "minimum": 1, "type": "integer" }
              ]
            },
            "keepalive_pool": {
              "properties": {
                "idle_timeout": {
                  "minimum": 0,
                  "default": 60,
                  "type": "number"
                },
                "size": { "minimum": 1, "default": 320, "type": "integer" },
                "requests": { "minimum": 1, "default": 1000, "type": "integer" }
              },
              "type": "object"
            },
            "desc": { "maxLength": 256, "type": "string" },
            "pass_host": {
              "description": "mod of host passing",
              "default": "pass",
              "enum": ["pass", "node", "rewrite"],
              "type": "string"
            },
            "labels": {
              "description": "key/value pairs to specify attributes",
              "patternProperties": {
                ".*": {
                  "type": "string",
                  "description": "value of label",
                  "minLength": 1,
                  "maxLength": 256,
                  "pattern": "^\\S+$"
                }
              },
              "type": "object"
            },
            "type": {
              "description": "algorithms of load balancing",
              "default": "roundrobin",
              "type": "string"
            },
            "retries": { "minimum": 0, "type": "integer" },
            "retry_timeout": { "minimum": 0, "type": "number" },
            "name": { "minLength": 1, "maxLength": 100, "type": "string" },
            "scheme": {
              "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp. For specific protocols, it can be kafka.",
              "default": "http",
              "enum": [
                "grpc",
                "grpcs",
                "http",
                "https",
                "tcp",
                "tls",
                "udp",
                "kafka"
              ]
            },
            "update_time": { "type": "integer" },
            "hash_on": {
              "default": "vars",
              "enum": [
                "vars",
                "header",
                "cookie",
                "consumer",
                "vars_combinations"
              ],
              "type": "string"
            },
            "service_name": {
              "minLength": 1,
              "maxLength": 256,
              "type": "string"
            },
            "tls": {
              "properties": {
                "client_cert": {
                  "minLength": 128,
                  "maxLength": 65536,
                  "type": "string"
                },
                "verify": {
                  "description": "Turn on server certificate verification, currently only kafka upstream is supported",
                  "default": false,
                  "type": "boolean"
                },
                "client_key": {
                  "minLength": 128,
                  "maxLength": 65536,
                  "type": "string"
                },
                "client_cert_id": {
                  "anyOf": [
                    {
                      "pattern": "^[a-zA-Z0-9-_.]+$",
                      "minLength": 1,
                      "maxLength": 64,
                      "type": "string"
                    },
                    { "minimum": 1, "type": "integer" }
                  ]
                }
              },
              "dependencies": {
                "client_cert": { "required": ["client_key"] },
                "client_key": { "required": ["client_cert"] },
                "client_cert_id": {
                  "not": { "required": ["client_cert", "client_key"] }
                }
              },
              "type": "object"
            },
            "checks": {
              "properties": {
                "passive": {
                  "properties": {
                    "healthy": {
                      "properties": {
                        "successes": {
                          "minimum": 0,
                          "default": 5,
                          "maximum": 254,
                          "type": "integer"
                        },
                        "http_statuses": {
                          "items": {
                            "minimum": 200,
                            "maximum": 599,
                            "type": "integer"
                          },
                          "minItems": 1,
                          "default": [
                            200, 201, 202, 203, 204, 205, 206, 207, 208, 226,
                            300, 301, 302, 303, 304, 305, 306, 307, 308
                          ],
                          "type": "array",
                          "uniqueItems": true
                        }
                      },
                      "type": "object"
                    },
                    "unhealthy": {
                      "properties": {
                        "timeouts": {
                          "minimum": 0,
                          "default": 7,
                          "maximum": 254,
                          "type": "integer"
                        },
                        "http_failures": {
                          "minimum": 0,
                          "default": 5,
                          "maximum": 254,
                          "type": "integer"
                        },
                        "tcp_failures": {
                          "minimum": 0,
                          "default": 2,
                          "maximum": 254,
                          "type": "integer"
                        },
                        "http_statuses": {
                          "items": {
                            "minimum": 200,
                            "maximum": 599,
                            "type": "integer"
                          },
                          "minItems": 1,
                          "default": [429, 500, 503],
                          "type": "array",
                          "uniqueItems": true
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "default": "http",
                      "type": "string",
                      "enum": ["http", "https", "tcp"]
                    }
                  },
                  "type": "object"
                },
                "active": {
                  "properties": {
                    "healthy": {
                      "properties": {
                        "interval": {
                          "minimum": 1,
                          "default": 1,
                          "type": "integer"
                        },
                        "successes": {
                          "minimum": 1,
                          "default": 2,
                          "maximum": 254,
                          "type": "integer"
                        },
                        "http_statuses": {
                          "items": {
                            "minimum": 200,
                            "maximum": 599,
                            "type": "integer"
                          },
                          "minItems": 1,
                          "default": [200, 302],
                          "type": "array",
                          "uniqueItems": true
                        }
                      },
                      "type": "object"
                    },
                    "port": {
                      "minimum": 1,
                      "maximum": 65535,
                      "type": "integer"
                    },
                    "req_headers": {
                      "items": { "uniqueItems": true, "type": "string" },
                      "type": "array",
                      "minItems": 1
                    },
                    "host": {
                      "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                      "type": "string"
                    },
                    "unhealthy": {
                      "properties": {
                        "http_failures": {
                          "minimum": 1,
                          "default": 5,
                          "maximum": 254,
                          "type": "integer"
                        },
                        "tcp_failures": {
                          "minimum": 1,
                          "default": 2,
                          "maximum": 254,
                          "type": "integer"
                        },
                        "timeouts": {
                          "minimum": 1,
                          "default": 3,
                          "maximum": 254,
                          "type": "integer"
                        },
                        "interval": {
                          "minimum": 1,
                          "default": 1,
                          "type": "integer"
                        },
                        "http_statuses": {
                          "items": {
                            "minimum": 200,
                            "maximum": 599,
                            "type": "integer"
                          },
                          "minItems": 1,
                          "default": [429, 404, 500, 501, 502, 503, 504, 505],
                          "type": "array",
                          "uniqueItems": true
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "default": "http",
                      "type": "string",
                      "enum": ["http", "https", "tcp"]
                    },
                    "timeout": { "default": 1, "type": "number" },
                    "concurrency": { "default": 10, "type": "integer" },
                    "http_path": { "default": "/", "type": "string" },
                    "https_verify_certificate": {
                      "default": true,
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              },
              "anyOf": [
                { "required": ["active"] },
                { "required": ["active", "passive"] }
              ],
              "additionalProperties": false,
              "type": "object"
            },
            "upstream_host": {
              "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
              "type": "string"
            },
            "nodes": {
              "anyOf": [
                {
                  "patternProperties": {
                    ".*": {
                      "description": "weight of node",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                {
                  "items": {
                    "properties": {
                      "priority": {
                        "description": "priority of node",
                        "default": 0,
                        "type": "integer"
                      },
                      "port": {
                        "description": "port of node",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "weight": {
                        "description": "weight of node",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "metadata": {
                        "description": "metadata of node",
                        "type": "object"
                      },
                      "host": {
                        "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                        "type": "string"
                      }
                    },
                    "required": ["host", "weight"],
                    "type": "object"
                  },
                  "type": "array"
                }
              ]
            },
            "timeout": {
              "properties": {
                "send": { "exclusiveMinimum": 0, "type": "number" },
                "read": { "exclusiveMinimum": 0, "type": "number" },
                "connect": { "exclusiveMinimum": 0, "type": "number" }
              },
              "required": ["connect", "send", "read"],
              "type": "object"
            },
            "create_time": { "type": "integer" }
          },
          "oneOf": [
            { "required": ["nodes"] },
            { "required": ["service_name", "discovery_type"] }
          ],
          "additionalProperties": false,
          "type": "object"
        },
        "name": { "minLength": 1, "maxLength": 100, "type": "string" }
      },
      "not": {
        "anyOf": [
          { "required": ["script", "plugins"] },
          { "required": ["script", "plugin_config_id"] }
        ]
      },
      "type": "object",
      "allOf": [
        { "oneOf": [{ "required": ["uri"] }, { "required": ["uris"] }] },
        {
          "oneOf": [
            {
              "not": {
                "anyOf": [{ "required": ["host"] }, { "required": ["hosts"] }]
              }
            },
            { "required": ["host"] },
            { "required": ["hosts"] }
          ]
        },
        {
          "oneOf": [
            {
              "not": {
                "anyOf": [
                  { "required": ["remote_addr"] },
                  { "required": ["remote_addrs"] }
                ]
              }
            },
            { "required": ["remote_addr"] },
            { "required": ["remote_addrs"] }
          ]
        }
      ]
    },
    "service": {
      "properties": {
        "upstream_id": {
          "anyOf": [
            {
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "minLength": 1,
              "maxLength": 64,
              "type": "string"
            },
            { "minimum": 1, "type": "integer" }
          ]
        },
        "name": { "minLength": 1, "maxLength": 100, "type": "string" },
        "update_time": { "type": "integer" },
        "plugins": { "type": "object" },
        "hosts": {
          "uniqueItems": true,
          "items": {
            "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
            "type": "string"
          },
          "minItems": 1,
          "type": "array"
        },
        "id": {
          "anyOf": [
            {
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "minLength": 1,
              "maxLength": 64,
              "type": "string"
            },
            { "minimum": 1, "type": "integer" }
          ]
        },
        "desc": { "maxLength": 256, "type": "string" },
        "enable_websocket": {
          "description": "enable websocket for request",
          "type": "boolean"
        },
        "script": { "minLength": 10, "maxLength": 102400, "type": "string" },
        "labels": {
          "description": "key/value pairs to specify attributes",
          "patternProperties": {
            ".*": {
              "type": "string",
              "description": "value of label",
              "minLength": 1,
              "maxLength": 256,
              "pattern": "^\\S+$"
            }
          },
          "type": "object"
        },
        "upstream": {
          "properties": {
            "discovery_type": {
              "description": "discovery type",
              "type": "string"
            },
            "discovery_args": {
              "properties": {
                "namespace_id": {
                  "description": "namespace id",
                  "type": "string"
                },
                "group_name": { "description": "group name", "type": "string" }
              },
              "type": "object"
            },
            "key": {
              "description": "the key of chash for dynamic load balancing",
              "type": "string"
            },
            "id": {
              "anyOf": [
                {
                  "pattern": "^[a-zA-Z0-9-_.]+$",
                  "minLength": 1,
                  "maxLength": 64,
                  "type": "string"
                },
                { "minimum": 1, "type": "integer" }
              ]
            },
            "keepalive_pool": {
              "properties": {
                "idle_timeout": {
                  "minimum": 0,
                  "default": 60,
                  "type": "number"
                },
                "size": { "minimum": 1, "default": 320, "type": "integer" },
                "requests": { "minimum": 1, "default": 1000, "type": "integer" }
              },
              "type": "object"
            },
            "desc": { "maxLength": 256, "type": "string" },
            "pass_host": {
              "description": "mod of host passing",
              "default": "pass",
              "enum": ["pass", "node", "rewrite"],
              "type": "string"
            },
            "labels": {
              "description": "key/value pairs to specify attributes",
              "patternProperties": {
                ".*": {
                  "type": "string",
                  "description": "value of label",
                  "minLength": 1,
                  "maxLength": 256,
                  "pattern": "^\\S+$"
                }
              },
              "type": "object"
            },
            "type": {
              "description": "algorithms of load balancing",
              "default": "roundrobin",
              "type": "string"
            },
            "retries": { "minimum": 0, "type": "integer" },
            "retry_timeout": { "minimum": 0, "type": "number" },
            "name": { "minLength": 1, "maxLength": 100, "type": "string" },
            "scheme": {
              "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp. For specific protocols, it can be kafka.",
              "default": "http",
              "enum": [
                "grpc",
                "grpcs",
                "http",
                "https",
                "tcp",
                "tls",
                "udp",
                "kafka"
              ]
            },
            "update_time": { "type": "integer" },
            "hash_on": {
              "default": "vars",
              "enum": [
                "vars",
                "header",
                "cookie",
                "consumer",
                "vars_combinations"
              ],
              "type": "string"
            },
            "service_name": {
              "minLength": 1,
              "maxLength": 256,
              "type": "string"
            },
            "tls": {
              "properties": {
                "client_cert": {
                  "minLength": 128,
                  "maxLength": 65536,
                  "type": "string"
                },
                "verify": {
                  "description": "Turn on server certificate verification, currently only kafka upstream is supported",
                  "default": false,
                  "type": "boolean"
                },
                "client_key": {
                  "minLength": 128,
                  "maxLength": 65536,
                  "type": "string"
                },
                "client_cert_id": {
                  "anyOf": [
                    {
                      "pattern": "^[a-zA-Z0-9-_.]+$",
                      "minLength": 1,
                      "maxLength": 64,
                      "type": "string"
                    },
                    { "minimum": 1, "type": "integer" }
                  ]
                }
              },
              "dependencies": {
                "client_cert": { "required": ["client_key"] },
                "client_key": { "required": ["client_cert"] },
                "client_cert_id": {
                  "not": { "required": ["client_cert", "client_key"] }
                }
              },
              "type": "object"
            },
            "checks": {
              "properties": {
                "passive": {
                  "properties": {
                    "healthy": {
                      "properties": {
                        "successes": {
                          "minimum": 0,
                          "default": 5,
                          "maximum": 254,
                          "type": "integer"
                        },
                        "http_statuses": {
                          "items": {
                            "minimum": 200,
                            "maximum": 599,
                            "type": "integer"
                          },
                          "minItems": 1,
                          "default": [
                            200, 201, 202, 203, 204, 205, 206, 207, 208, 226,
                            300, 301, 302, 303, 304, 305, 306, 307, 308
                          ],
                          "type": "array",
                          "uniqueItems": true
                        }
                      },
                      "type": "object"
                    },
                    "unhealthy": {
                      "properties": {
                        "timeouts": {
                          "minimum": 0,
                          "default": 7,
                          "maximum": 254,
                          "type": "integer"
                        },
                        "http_failures": {
                          "minimum": 0,
                          "default": 5,
                          "maximum": 254,
                          "type": "integer"
                        },
                        "tcp_failures": {
                          "minimum": 0,
                          "default": 2,
                          "maximum": 254,
                          "type": "integer"
                        },
                        "http_statuses": {
                          "items": {
                            "minimum": 200,
                            "maximum": 599,
                            "type": "integer"
                          },
                          "minItems": 1,
                          "default": [429, 500, 503],
                          "type": "array",
                          "uniqueItems": true
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "default": "http",
                      "type": "string",
                      "enum": ["http", "https", "tcp"]
                    }
                  },
                  "type": "object"
                },
                "active": {
                  "properties": {
                    "healthy": {
                      "properties": {
                        "interval": {
                          "minimum": 1,
                          "default": 1,
                          "type": "integer"
                        },
                        "successes": {
                          "minimum": 1,
                          "default": 2,
                          "maximum": 254,
                          "type": "integer"
                        },
                        "http_statuses": {
                          "items": {
                            "minimum": 200,
                            "maximum": 599,
                            "type": "integer"
                          },
                          "minItems": 1,
                          "default": [200, 302],
                          "type": "array",
                          "uniqueItems": true
                        }
                      },
                      "type": "object"
                    },
                    "port": {
                      "minimum": 1,
                      "maximum": 65535,
                      "type": "integer"
                    },
                    "req_headers": {
                      "items": { "uniqueItems": true, "type": "string" },
                      "type": "array",
                      "minItems": 1
                    },
                    "host": {
                      "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                      "type": "string"
                    },
                    "unhealthy": {
                      "properties": {
                        "http_failures": {
                          "minimum": 1,
                          "default": 5,
                          "maximum": 254,
                          "type": "integer"
                        },
                        "tcp_failures": {
                          "minimum": 1,
                          "default": 2,
                          "maximum": 254,
                          "type": "integer"
                        },
                        "timeouts": {
                          "minimum": 1,
                          "default": 3,
                          "maximum": 254,
                          "type": "integer"
                        },
                        "interval": {
                          "minimum": 1,
                          "default": 1,
                          "type": "integer"
                        },
                        "http_statuses": {
                          "items": {
                            "minimum": 200,
                            "maximum": 599,
                            "type": "integer"
                          },
                          "minItems": 1,
                          "default": [429, 404, 500, 501, 502, 503, 504, 505],
                          "type": "array",
                          "uniqueItems": true
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "default": "http",
                      "type": "string",
                      "enum": ["http", "https", "tcp"]
                    },
                    "timeout": { "default": 1, "type": "number" },
                    "concurrency": { "default": 10, "type": "integer" },
                    "http_path": { "default": "/", "type": "string" },
                    "https_verify_certificate": {
                      "default": true,
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              },
              "anyOf": [
                { "required": ["active"] },
                { "required": ["active", "passive"] }
              ],
              "additionalProperties": false,
              "type": "object"
            },
            "upstream_host": {
              "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
              "type": "string"
            },
            "nodes": {
              "anyOf": [
                {
                  "patternProperties": {
                    ".*": {
                      "description": "weight of node",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                {
                  "items": {
                    "properties": {
                      "priority": {
                        "description": "priority of node",
                        "default": 0,
                        "type": "integer"
                      },
                      "port": {
                        "description": "port of node",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "weight": {
                        "description": "weight of node",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "metadata": {
                        "description": "metadata of node",
                        "type": "object"
                      },
                      "host": {
                        "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                        "type": "string"
                      }
                    },
                    "required": ["host", "weight"],
                    "type": "object"
                  },
                  "type": "array"
                }
              ]
            },
            "timeout": {
              "properties": {
                "send": { "exclusiveMinimum": 0, "type": "number" },
                "read": { "exclusiveMinimum": 0, "type": "number" },
                "connect": { "exclusiveMinimum": 0, "type": "number" }
              },
              "required": ["connect", "send", "read"],
              "type": "object"
            },
            "create_time": { "type": "integer" }
          },
          "oneOf": [
            { "required": ["nodes"] },
            { "required": ["service_name", "discovery_type"] }
          ],
          "additionalProperties": false,
          "type": "object"
        },
        "create_time": { "type": "integer" }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "upstream": {
      "properties": {
        "discovery_type": { "description": "discovery type", "type": "string" },
        "discovery_args": {
          "properties": {
            "namespace_id": { "description": "namespace id", "type": "string" },
            "group_name": { "description": "group name", "type": "string" }
          },
          "type": "object"
        },
        "key": {
          "description": "the key of chash for dynamic load balancing",
          "type": "string"
        },
        "id": {
          "anyOf": [
            {
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "minLength": 1,
              "maxLength": 64,
              "type": "string"
            },
            { "minimum": 1, "type": "integer" }
          ]
        },
        "keepalive_pool": {
          "properties": {
            "idle_timeout": { "minimum": 0, "default": 60, "type": "number" },
            "size": { "minimum": 1, "default": 320, "type": "integer" },
            "requests": { "minimum": 1, "default": 1000, "type": "integer" }
          },
          "type": "object"
        },
        "desc": { "maxLength": 256, "type": "string" },
        "pass_host": {
          "description": "mod of host passing",
          "default": "pass",
          "enum": ["pass", "node", "rewrite"],
          "type": "string"
        },
        "labels": {
          "description": "key/value pairs to specify attributes",
          "patternProperties": {
            ".*": {
              "type": "string",
              "description": "value of label",
              "minLength": 1,
              "maxLength": 256,
              "pattern": "^\\S+$"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "algorithms of load balancing",
          "default": "roundrobin",
          "type": "string"
        },
        "retries": { "minimum": 0, "type": "integer" },
        "retry_timeout": { "minimum": 0, "type": "number" },
        "name": { "minLength": 1, "maxLength": 100, "type": "string" },
        "scheme": {
          "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp. For specific protocols, it can be kafka.",
          "default": "http",
          "enum": [
            "grpc",
            "grpcs",
            "http",
            "https",
            "tcp",
            "tls",
            "udp",
            "kafka"
          ]
        },
        "update_time": { "type": "integer" },
        "hash_on": {
          "default": "vars",
          "enum": ["vars", "header", "cookie", "consumer", "vars_combinations"],
          "type": "string"
        },
        "service_name": { "minLength": 1, "maxLength": 256, "type": "string" },
        "tls": {
          "properties": {
            "client_cert": {
              "minLength": 128,
              "maxLength": 65536,
              "type": "string"
            },
            "verify": {
              "description": "Turn on server certificate verification, currently only kafka upstream is supported",
              "default": false,
              "type": "boolean"
            },
            "client_key": {
              "minLength": 128,
              "maxLength": 65536,
              "type": "string"
            },
            "client_cert_id": {
              "anyOf": [
                {
                  "pattern": "^[a-zA-Z0-9-_.]+$",
                  "minLength": 1,
                  "maxLength": 64,
                  "type": "string"
                },
                { "minimum": 1, "type": "integer" }
              ]
            }
          },
          "dependencies": {
            "client_cert": { "required": ["client_key"] },
            "client_key": { "required": ["client_cert"] },
            "client_cert_id": {
              "not": { "required": ["client_cert", "client_key"] }
            }
          },
          "type": "object"
        },
        "checks": {
          "properties": {
            "passive": {
              "properties": {
                "healthy": {
                  "properties": {
                    "successes": {
                      "minimum": 0,
                      "default": 5,
                      "maximum": 254,
                      "type": "integer"
                    },
                    "http_statuses": {
                      "items": {
                        "minimum": 200,
                        "maximum": 599,
                        "type": "integer"
                      },
                      "minItems": 1,
                      "default": [
                        200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300,
                        301, 302, 303, 304, 305, 306, 307, 308
                      ],
                      "type": "array",
                      "uniqueItems": true
                    }
                  },
                  "type": "object"
                },
                "unhealthy": {
                  "properties": {
                    "timeouts": {
                      "minimum": 0,
                      "default": 7,
                      "maximum": 254,
                      "type": "integer"
                    },
                    "http_failures": {
                      "minimum": 0,
                      "default": 5,
                      "maximum": 254,
                      "type": "integer"
                    },
                    "tcp_failures": {
                      "minimum": 0,
                      "default": 2,
                      "maximum": 254,
                      "type": "integer"
                    },
                    "http_statuses": {
                      "items": {
                        "minimum": 200,
                        "maximum": 599,
                        "type": "integer"
                      },
                      "minItems": 1,
                      "default": [429, 500, 503],
                      "type": "array",
                      "uniqueItems": true
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "default": "http",
                  "type": "string",
                  "enum": ["http", "https", "tcp"]
                }
              },
              "type": "object"
            },
            "active": {
              "properties": {
                "healthy": {
                  "properties": {
                    "interval": {
                      "minimum": 1,
                      "default": 1,
                      "type": "integer"
                    },
                    "successes": {
                      "minimum": 1,
                      "default": 2,
                      "maximum": 254,
                      "type": "integer"
                    },
                    "http_statuses": {
                      "items": {
                        "minimum": 200,
                        "maximum": 599,
                        "type": "integer"
                      },
                      "minItems": 1,
                      "default": [200, 302],
                      "type": "array",
                      "uniqueItems": true
                    }
                  },
                  "type": "object"
                },
                "port": { "minimum": 1, "maximum": 65535, "type": "integer" },
                "req_headers": {
                  "items": { "uniqueItems": true, "type": "string" },
                  "type": "array",
                  "minItems": 1
                },
                "host": {
                  "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                  "type": "string"
                },
                "unhealthy": {
                  "properties": {
                    "http_failures": {
                      "minimum": 1,
                      "default": 5,
                      "maximum": 254,
                      "type": "integer"
                    },
                    "tcp_failures": {
                      "minimum": 1,
                      "default": 2,
                      "maximum": 254,
                      "type": "integer"
                    },
                    "timeouts": {
                      "minimum": 1,
                      "default": 3,
                      "maximum": 254,
                      "type": "integer"
                    },
                    "interval": {
                      "minimum": 1,
                      "default": 1,
                      "type": "integer"
                    },
                    "http_statuses": {
                      "items": {
                        "minimum": 200,
                        "maximum": 599,
                        "type": "integer"
                      },
                      "minItems": 1,
                      "default": [429, 404, 500, 501, 502, 503, 504, 505],
                      "type": "array",
                      "uniqueItems": true
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "default": "http",
                  "type": "string",
                  "enum": ["http", "https", "tcp"]
                },
                "timeout": { "default": 1, "type": "number" },
                "concurrency": { "default": 10, "type": "integer" },
                "http_path": { "default": "/", "type": "string" },
                "https_verify_certificate": {
                  "default": true,
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "anyOf": [
            { "required": ["active"] },
            { "required": ["active", "passive"] }
          ],
          "additionalProperties": false,
          "type": "object"
        },
        "upstream_host": {
          "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
          "type": "string"
        },
        "nodes": {
          "anyOf": [
            {
              "patternProperties": {
                ".*": {
                  "description": "weight of node",
                  "minimum": 0,
                  "type": "integer"
                }
              },
              "type": "object"
            },
            {
              "items": {
                "properties": {
                  "priority": {
                    "description": "priority of node",
                    "default": 0,
                    "type": "integer"
                  },
                  "port": {
                    "description": "port of node",
                    "minimum": 1,
                    "type": "integer"
                  },
                  "weight": {
                    "description": "weight of node",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "metadata": {
                    "description": "metadata of node",
                    "type": "object"
                  },
                  "host": {
                    "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                    "type": "string"
                  }
                },
                "required": ["host", "weight"],
                "type": "object"
              },
              "type": "array"
            }
          ]
        },
        "timeout": {
          "properties": {
            "send": { "exclusiveMinimum": 0, "type": "number" },
            "read": { "exclusiveMinimum": 0, "type": "number" },
            "connect": { "exclusiveMinimum": 0, "type": "number" }
          },
          "required": ["connect", "send", "read"],
          "type": "object"
        },
        "create_time": { "type": "integer" }
      },
      "oneOf": [
        { "required": ["nodes"] },
        { "required": ["service_name", "discovery_type"] }
      ],
      "additionalProperties": false,
      "type": "object"
    },
    "plugin_config": {
      "properties": {
        "desc": { "maxLength": 256, "type": "string" },
        "name": { "type": "string" },
        "create_time": { "type": "integer" },
        "update_time": { "type": "integer" },
        "plugins": { "type": "object" },
        "labels": {
          "description": "key/value pairs to specify attributes",
          "patternProperties": {
            ".*": {
              "type": "string",
              "description": "value of label",
              "minLength": 1,
              "maxLength": 256,
              "pattern": "^\\S+$"
            }
          },
          "type": "object"
        },
        "id": {
          "anyOf": [
            {
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "minLength": 1,
              "maxLength": 64,
              "type": "string"
            },
            { "minimum": 1, "type": "integer" }
          ]
        }
      },
      "additionalProperties": false,
      "required": ["id", "plugins"],
      "type": "object"
    }
  },
  "stream_plugins": {
    "syslog": {
      "priority": 401,
      "version": 0.1,
      "schema": {
        "properties": {
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "port": { "type": "integer" },
          "name": { "type": "string", "default": "stream sys logger" },
          "batch_max_size": {
            "minimum": 1,
            "default": 1000,
            "type": "integer"
          },
          "max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
          "host": { "type": "string" },
          "buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
          "inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
          "retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
          "flush_limit": { "minimum": 1, "default": 4096, "type": "integer" },
          "tls": { "default": false, "type": "boolean" },
          "log_format": { "type": "object" },
          "pool_size": { "minimum": 5, "default": 5, "type": "integer" },
          "drop_limit": { "default": 1048576, "type": "integer" },
          "sock_type": {
            "default": "tcp",
            "enum": ["tcp", "udp"],
            "type": "string"
          },
          "timeout": { "minimum": 1, "default": 3000, "type": "integer" }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["host", "port"],
        "type": "object"
      },
      "metadata_schema": {
        "properties": { "log_format": { "type": "object" } },
        "type": "object"
      }
    },
    "ip-restriction": {
      "priority": 3000,
      "version": 0.1,
      "schema": {
        "properties": {
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "blacklist": {
            "items": {
              "anyOf": [
                { "title": "IPv4", "format": "ipv4", "type": "string" },
                {
                  "title": "IPv4/CIDR",
                  "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
                  "type": "string"
                },
                { "title": "IPv6", "format": "ipv6", "type": "string" },
                {
                  "title": "IPv6/CIDR",
                  "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
                  "type": "string"
                }
              ]
            },
            "minItems": 1,
            "type": "array"
          },
          "message": {
            "default": "Your IP address is not allowed",
            "minLength": 1,
            "maxLength": 1024,
            "type": "string"
          },
          "whitelist": {
            "items": {
              "anyOf": [
                { "title": "IPv4", "format": "ipv4", "type": "string" },
                {
                  "title": "IPv4/CIDR",
                  "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
                  "type": "string"
                },
                { "title": "IPv6", "format": "ipv6", "type": "string" },
                {
                  "title": "IPv6/CIDR",
                  "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
                  "type": "string"
                }
              ]
            },
            "minItems": 1,
            "type": "array"
          }
        },
        "oneOf": [{ "required": ["whitelist"] }, { "required": ["blacklist"] }],
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    },
    "mqtt-proxy": {
      "priority": 1000,
      "version": 0.1,
      "schema": {
        "properties": {
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "protocol_name": { "type": "string" },
          "protocol_level": { "type": "integer" }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["protocol_name", "protocol_level"],
        "type": "object"
      }
    },
    "limit-conn": {
      "priority": 1003,
      "version": 0.1,
      "schema": {
        "properties": {
          "only_use_default_delay": { "default": false, "type": "boolean" },
          "burst": { "minimum": 0, "type": "integer" },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": { "type": "boolean" },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              },
              "error_response": {
                "oneOf": [{ "type": "string" }, { "type": "object" }]
              }
            },
            "type": "object"
          },
          "conn": { "exclusiveMinimum": 0, "type": "integer" },
          "key": { "type": "string" },
          "key_type": {
            "default": "var",
            "type": "string",
            "enum": ["var", "var_combination"]
          },
          "default_conn_delay": { "exclusiveMinimum": 0, "type": "number" }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "required": ["conn", "burst", "default_conn_delay", "key"],
        "type": "object"
      }
    }
  }
}
